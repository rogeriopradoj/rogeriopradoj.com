{
    "entries": [
        {
            "title": "M\u00e9todo 1 + 3: Como fazer solicita\u00e7\u00f5es e ter mais chances de ver sua demanda atendida",
            "url": "\/2019\/09\/30\/metodo-1+3---como-fazer-solicitacoes-e-ter-mais-chances-de-ver-sua-demanda-atendida\/",
            "date": "2019-09-30 08:39:00 +0000",
            "body": "M&eacute;todo 1 + 3: Como fazer solicita&ccedil;&otilde;es com o 1 + 3 e ter mais chances de ver sua demanda atendida   Ol&aacute;, pessoal!  J&aacute; ouviram falar no M&eacute;todo 1 + 3 que ajuda a estruturar solicita&ccedil;&otilde;es para outras &aacute;reas e pessoas? Eu o utilizo e recomendo que voc&ecirc; o utilize em casos em que precisar fazer demandas e quiser aumentar suas chances de v&ecirc;-las atendidas.  tl;dr - Resumindo o M&eacute;todo 1 + 3   1 - o que voc&ecirc; precisa? Aqui, v&aacute; direto ao ponto, se poss&iacute;vel, em poucas palavras. 3 complementos m&iacute;nimos:   3.a - detalhamento: coloque aqui um pouco mais de informa&ccedil;&otilde;es sobre sua necessidade. O que voc&ecirc; j&aacute; tem? O que j&aacute; foi feito? O que voc&ecirc; j&aacute; conseguiu num momento anterior? Etc. 3.b - impactos positivos quando tiver acesso: liste os benef&iacute;cios que vai ter quando a demanda for atendida. 3.c - problemas caso continuar sem acesso: listar todas as dificuldades, preju&iacute;zos, retrabalhos, custos etc. enquanto a situa&ccedil;&atilde;o atual se mantiver.    Em resumo, o m&eacute;todo consiste em ter claro o que precisa, que voc&ecirc; consiga descrever sua quest&atilde;o de forma bem concisa. No entanto, sem deixar escapar nenhum dos elementos essenciais para que sua demanda seja apreciada.     Quer ver o texto na &iacute;ntegra? Ele vai estar publicado na Intranet CAIXA em alguns dias!   Olha o que mais tem por l&aacute;:         &quot;De onde surgiu esse m&eacute;todo?&quot;   &quot;Alguns exemplos de demandas atendidas!&quot;   &quot;Atualiza&ccedil;&atilde;o das vers&otilde;es do PHP no Banco X&quot;   &quot;Mostrando benef&iacute;cios para todos&quot;   &quot;Outras homologa&ccedil;&otilde;es de software&quot;   &quot;Acessos para as comunidades&quot;   &quot;Primeira apresenta&ccedil;&atilde;o p&uacute;blica do M&eacute;todo 1 + 3: Junho de 2019, Belo Horizonte, MG, Imers&atilde;o na Centralizadora&quot;   &quot;E no GT da MP2019? BI, Informa&ccedil;&otilde;es, Data Science Analytics, Big Data, SQL com MPP e Apache HAWQ? Tem espa&ccedil;o para o M&eacute;todo 1 + 3?&quot;   &quot;Considera&ccedil;&otilde;es finais e agradecimentos&quot;      --  Sobre o M&eacute;todo 1 + 3, o que voc&ecirc; achou? J&aacute; usa alguma outra t&eacute;cnica parecida? Tomara que possa ser mais uma op&ccedil;&atilde;o em sua caixa de ferramentas e te d&ecirc; melhores condi&ccedil;&otilde;es de atingir seus resultados!  --  At&eacute;&nbsp;a&nbsp;pr&oacute;xima,&nbsp;e&nbsp;podem&nbsp;me&nbsp;chamar&nbsp;para&nbsp;conversar&nbsp;em&nbsp;todos&nbsp;os&nbsp;canais!  Abra&ccedil;os!    Este&nbsp;artigo&nbsp;foi&nbsp;publicado&nbsp;originalmente&nbsp;em&nbsp;RogerioPradoJ.com.",
            "description": "M&eacute;todo 1 + 3: Como fazer solicita&ccedil;&otilde;es com o 1 + 3 e ter mais chances de ver sua demanda atendida   Ol&aacute;, pessoal!  J&aacute; ouviram falar no M&eacute;todo 1 + 3 que ajuda a estruturar solicita&ccedil;&otilde;es para outras &aacute;reas e pessoas? Eu o utilizo e recomendo que voc&ecirc; o utilize em casos em que precisar..."
        },
        {
            "title": "M\u00e1quina virtual Windows 10 com Vagrant e VirtualBox para Power BI Desktop",
            "url": "\/2019\/09\/09\/maquina-virtual-windows-10-com-vagrant-e-virtualbox-para-power-bi-desktop\/",
            "date": "2019-09-09 02:44:00 +0000",
            "body": "M&aacute;quina virtual Windows 10 com Vagrant e VirtualBox para Power BI Desktop   Ol&aacute;, pessoal.  Nesse mundo de aprendizagem sobre Data Science Analytics, as ferramentas de self-service BI e visualiza&ccedil;&atilde;o s&atilde;o essenciais. Dentre elas, o Power BI Desktop, da Microsoft, &eacute; uma das op&ccedil;&otilde;es profissionais mais usadas. Dois motivos me fizeram buscar mais conhecimento sobre ela e me capacitar com treinamentos: ser gratuita para uso b&aacute;sico em sua m&aacute;quina pessoal e por ser um dos aplicativos homologados na empresa onde trabalho.  Segundo a pr&oacute;pria Microsoft, &quot;O Power BI &eacute; um conjunto de ferramentas de an&aacute;lise de neg&oacute;cios para analisar dados e compartilhar ideias.&quot; Se quiser saber mais sobre a solu&ccedil;&atilde;o:   Treinamentos Microsoft Curso gratuito da Data Science Academy: Microsoft Power BI para Data Science   E como instalar o Power BI Desktop na minha m&aacute;quina para come&ccedil;ar a usar?  Se voc&ecirc; usa Windows, &eacute; f&aacute;cil. Acesse o site oficial, baixe o instalador da ferramenta e siga os passos de instala&ccedil;&atilde;o. Mas, temos um problema: o que fazer se voc&ecirc; usa outro sistema operacional? Como sair do outro lado caso voc&ecirc; use macOS ou Linux? F&aacute;cil tamb&eacute;m: vamos de m&aacute;quina virtual!  E, para facilitar nosso caminho, usando Vagrant e VirtualBox para configura&ccedil;&atilde;o do nosso ambiente, e uma box de Windows 10 j&aacute; configurada, a peru\/windows-10-enterprise-x64-eval.  VM: O que voc&ecirc; precisa ter no seu computador?   VirtualBox; Vagrant.   VM: Como criar e subir a m&aacute;quina virtual?  Primeiro passo &eacute; criar o arquivo de manifesto com a configura&ccedil;&atilde;o do seu ambiente, o Vagrantfile. Crie uma pasta para seu projeto e em seguida, no terminal:  # baixe um Vagrantfile j&aacute; configurado com 4GB de RAM para a VM wget https:\/\/gist.githubusercontent.com\/rogeriopradoj\/0b4ae77419dafef3d67526d63e914290\/raw\/8129df2332a4c7f831e543752aac6dc8546ed992\/Vagrantfile  # ou rode o comando para criar o Vagrantfile vagrant init peru\/windows-10-enterprise-x64-eval   Ap&oacute;s isso, suba seu ambiente, com o comando vagrant up.  VM: Depois da m&aacute;quina de p&eacute;, como acess&aacute;-la?  Dois caminhos: o primeiro &eacute; usar a tela de interface gr&aacute;fica da VM que o VirtualBox vai ter aberto para voc&ecirc;. O segundo, que &eacute; meu prefirido e recomendo, &eacute; abrir uma sess&atilde;o RDP (&aacute;rea de trabalho remota). Para isso busque algum aplicativo que tenha essa funcionalidade para seu sistema operacional e conecte no endere&ccedil;o localhost.  Essa box de Windows 10 tem dois usu&aacute;rios configurados, voc&ecirc; pode usar qualquer um deles para logar:   username: localhost\\Administrator - password: vagrant username: localhost\\vagrant - password: vagrant   E &eacute; isso, depois de acessar a VM, siga os passos tradicionais para instalar o Power BI Desktop no ambiente!  B&ocirc;nus Chocolatey: Como instalar o Power BI Desktop usando o gerenciador de pacotes do Windows Chocolatey?  Primeiro, instale o Chocolatey. Para quem n&atilde;o conhece-o:     What is Chocolatey?      Chocolatey is kind of like apt-get, but for Windows (with Windows comes limitations). It is a machine level package manager that is built on top of nuget command line and the nuget infrastructure.      -- https:\/\/chocolatey.org\/faq#what-is-chocolatey   Depois, no terminal, execute:  choco upgrade powerbi   Talvez voc&ecirc; pergunte: por que usar upgrade em vez de install? Posso te dizer que, caso seja a primeira instala&ccedil;&atilde;o no seu ambiente, os dois comandos funcionam da mesma forma. A vantagem &eacute; para o caso que o aplicativo j&aacute; estiver instalado, e estiver com vers&atilde;o antiga. Nesse caso, o chocolatey j&aacute; faz a atualiza&ccedil;&atilde;o para n&oacute;s. Vale a pena ;-) .  Considera&ccedil;&otilde;es finais  E &eacute; isso! No fim de todos esses passos, ter&aacute; um ambiente virtualizado perfeitamente montado com o Power BI Desktop rodando numa m&aacute;quina virtual Windows 10 sobre Vagrant e VirtualBox!  &Eacute; importante ressaltar que esse processo pode ser usado mesmo no caso que voc&ecirc; o seu sistema operacional principal j&aacute; seja o Windows 10, mas voc&ecirc; quer deixar a instala&ccedil;&atilde;o do Power BI Desktop o mais isolada poss&iacute;vel do seu ambiente.  E o que voc&ecirc; diz? Costuma usar ambientes virtualizados (m&aacute;quinas virtuais ou containers) para seus trabalhos, ou prefere fazer as instala&ccedil;&otilde;es diretamente no seu S.O.? Eu sempre que poss&iacute;vel vou de ambientes virtualizados! Diga a&iacute; nos coment&aacute;rios sua opini&atilde;o, ok?  At&eacute;&nbsp;a&nbsp;pr&oacute;xima,&nbsp;e&nbsp;podem&nbsp;me&nbsp;chamar&nbsp;para&nbsp;conversar&nbsp;em&nbsp;todos&nbsp;os&nbsp;canais!  Abra&ccedil;os!    Este&nbsp;artigo&nbsp;foi&nbsp;publicado&nbsp;originalmente&nbsp;em&nbsp;RogerioPradoJ.com.",
            "description": "M&aacute;quina virtual Windows 10 com Vagrant e VirtualBox para Power BI Desktop   Ol&aacute;, pessoal.  Nesse mundo de aprendizagem sobre Data Science Analytics, as ferramentas de self-service BI e visualiza&ccedil;&atilde;o s&atilde;o essenciais. Dentre elas, o Power BI Desktop, da Microsoft, &eacute; uma das op&ccedil;&otilde;es pr..."
        },
        {
            "title": "Como tirar acentos de string no Python? Transliterate, Unicodedata e Unidecode",
            "url": "\/2019\/07\/14\/como-tirar-acentos-de-string-no-python-transliterate-unicodedata-e-unidecode\/",
            "date": "2019-07-14 19:48:00 +0000",
            "body": "Como tirar acentos de string no Python?   Ol&aacute;, galera, tudo certinho?  Nesse caminho do Data Science, em espec&iacute;fico no tratamento de textos e processamento de linguagem natural (PLN, ou NLP do ingl&ecirc;s Natural Language Processing), muitos e muitos tratamentos em string s&atilde;o necess&aacute;rios. E um deles que me apareceu: como fazer para retirar acentos de uma cadeia de caracteres e olhar um texto mais puro?  Lembrando da minha experi&ecirc;ncia com programa&ccedil;&atilde;o, lembrei do conceito de translitera&ccedil;&atilde;o, do ingl&ecirc;s transliteratation:     Transliteration is a type of conversion of a text from one script to another[1] that involves swapping letters (thus trans- + liter-) in predictable ways (such as &alpha; &rarr; a, \u0434 &rarr; d, &chi; &rarr; ch, \u0576 &rarr; n or &aelig; &rarr; ae).      -- Wikipedia   Em resumo, &eacute; fazer com que todas as formas de apresenta&ccedil;&atilde;o de uma letra seja padronizada em uma apenas. Pegando como exemplo, no portugu&ecirc;s, temos os seguintes caracteres:   a, &aacute;, &agrave;, &acirc; e, &eacute;, &ecirc; i, &iacute; o, &oacute;, &ocirc; u, &uacute;, &uuml; c, &ccedil;   Esses grupos todos acima poderiam ser padronizados no primeiro &quot;formato&quot;, o pr&oacute;prio caracter sem acento, trema ou cedilha, no caso:   a e i o u c   No passado j&aacute; vi alguns scripts caseiros, geralmente naquela biblioteca Utils que o programador faz, com esse tipo de tratamento, algo como:   lista &quot;de-para&quot; do caractere acentuado para o sem acento; em seguida, usando alguma fun&ccedil;&atilde;o de &quot;string replace&quot;, rodar isso em cada fun&ccedil;&atilde;o.   A d&uacute;vida: ser&aacute; que n&atilde;o tem uma fun&ccedil;&atilde;o da biblioteca padr&atilde;o da linguagem, ou ent&atilde;o algum pacote bem utilizado para fazer essa fun&ccedil;&atilde;o? E tem sim! E mais de um! Aqui vamos ver dois deles: o unicodedata, embutido no Python, e o unidecode que pode ser instalado via PyPi.  Pegando um texto bem simples, veja o resultado do processamento de cada um deles:  import unidecode import unicodedata  # texto original original = &quot;pe&ccedil;a &oacute;timo p&eacute;ssimo n&atilde;o &eacute; t&atilde;o &agrave;s&quot;  # com unidecode processamento_1 = unidecode.unidecode(original) print(processamento_1) # peca otimo pessimo nao e tao as   # com unicodedata processamento_2 = unicodedata.normalize(&quot;NFD&quot;, original) print(processamento_2) # pec\u0327a o\u0301timo pe\u0301ssimo na\u0303o e\u0301 ta\u0303o a\u0300s processamento_2 = processamento_2.encode(&quot;ascii&quot;, &quot;ignore&quot;) print(processamento_2) # b'peca otimo pessimo nao e tao as' processamento_2 = processamento_2.decode(&quot;utf-8&quot;) print(processamento_2) # peca otimo pessimo nao e tao as   Nos dois casos, mesma sa&iacute;da: texto original sem os acentos e cedilha. E o unicodedata ainda teve mais passos: primeiro normalizar usando o par&acirc;metro NFD, e em seguida transformar em bin&aacute;rio e retornar para string.  Se o unidecode parece ser bem mais simples, por que usar o unicodedata?  Talvez a primeira vantagem &eacute; que o unicodedata j&aacute; est&aacute; na biblioteca padr&atilde;o do Python. Mas a que peguei que &eacute; mais cr&iacute;tica &eacute; a seguinte: como &eacute; feita a translitera&ccedil;&atilde;o de algumas pontua&ccedil;&otilde;es, como sinal ordinal masculino (&ordm;) e sinal de grau (&deg;).  import unidecode import unicodedata  # texto original original = &quot;&Eacute; o 5&ordm; e &uacute;ltimo. Estava 30&deg;C&quot;  # com unidecode processamento_1 = unidecode.unidecode(original) print(processamento_1) # E o 5o e ultimo. Estava 30degC   # com unicodedata processamento_2 = unicodedata.normalize(&quot;NFD&quot;, original) print(processamento_2) # E\u0301 o 5&ordm; e u\u0301ltimo. Estava 30&deg;C processamento_2 = processamento_2.encode(&quot;ascii&quot;, &quot;ignore&quot;) print(processamento_2) # b'E o 5 e ultimo. Estava 30C' processamento_2 = processamento_2.decode(&quot;utf-8&quot;) print(processamento_2) # E o 5 e ultimo. Estava 30C   Podemos ver que com o unidecode, o ordinal vira uma letra &quot;o&quot; min&uacute;scula, e o sinal de grau vir&aacute; um &quot;deg&quot;.  Voc&ecirc; ter&aacute; que avaliar no seu caso, no meu foi assim: na verdade, todo o texto analisado deveria ter sido digitado como ordinal, mas tinha partes com um e partes com outro. &Eacute; l&oacute;gico que eu poderia tratar, para substituir primeiramente todos os formatos para um s&oacute;, e depois fazer a translitera&ccedil;&atilde;o. Mas, prefiro que a fun&ccedil;&atilde;o fa&ccedil;a tudo por mim, no caso, retirando os dois sinais. Assim, com a entrada &quot;&Eacute; o 5&ordm; e &uacute;ltimo. Estava 30&deg;C&quot;, prefiro que fique a sa&iacute;da &quot;E o 5 e ultimo. Estava 30C&quot; (unicodedata + encode + decode) do que &quot;E o 5o e ultimo. Estava 30degC&quot; (unidecode).    E voc&ecirc;, qual formato utilizaria como padr&atilde;o?  At&eacute; a pr&oacute;xima, e podem me chamar para conversar em todos os canais, ok!  Abra&ccedil;os!    Este artigo foi publicado originalmente em RogerioPradoJ.com.",
            "description": "Como tirar acentos de string no Python?   Ol&aacute;, galera, tudo certinho?  Nesse caminho do Data Science, em espec&iacute;fico no tratamento de textos e processamento de linguagem natural (PLN, ou NLP do ingl&ecirc;s Natural Language Processing), muitos e muitos tratamentos em string s&atilde;o necess&aacute;r..."
        },
        {
            "title": "Notebooks Jupyter em PHP, al\u00e9m do Python? Sim, \u00e9 poss\u00edvel: veja como fazer!",
            "url": "\/2019\/05\/13\/notebooks-jupyter-em-php-alem-do-python-sim-e-possivel-veja-como-fazer\/",
            "date": "2019-05-13 13:30:00 +0000",
            "body": "Sim, &eacute; poss&iacute;vel!   Fala pessoal, tudo bem?  &Eacute; muito comum durante nossa jornada de cursos no tema de Big Data, Analytics, Data Science, IA e afins sermos apresentados &agrave; plataforma Jupyter e aos seus notebooks, n&atilde;o &eacute; mesmo?     Jupyter: The Jupyter Notebook is an open-source web application that allows you to create and share documents that contain live code, equations, visualizations and narrative text. Uses include: data cleaning and transformation, numerical simulation, statistical modeling, data visualization, machine learning, and much more.   E, acredito que se voc&ecirc; j&aacute; mexeu nessa plataforma, o padr&atilde;o &eacute; usar a linguagem de programa&ccedil;&atilde;o Python, certo? Talvez R tamb&eacute;m? E se te disser que &eacute; poss&iacute;vel usar v&aacute;rias outras tamb&eacute;m? Sim, durante a escrita deste artigo, 2019\/MAI, j&aacute; s&atilde;o mais de 40 linguagens suportadas. E o mais impressionante: o PHP &eacute; sim uma dessas linguagens suportadas no Jupyter Notebook!  Vamos conhecer ent&atilde;o como fazer?  Primeiro: tenha o Jupyter dispon&iacute;vel  A maneira mais simples que conhe&ccedil;o no Windows &eacute; tendo o Anaconda dispon&iacute;vel. Voc&ecirc; consegue mais informa&ccedil;&otilde;es acessando o site oficial: https:\/\/www.anaconda.com\/distribution\/     Anaconda: The World's Most Popular Python\/R Data Science Platform   Tenha o PHP e o Composer com as depend&ecirc;ncias instaladas  Em https:\/\/windows.php.net\/ voc&ecirc; consegue pegar a &uacute;ltima vers&atilde;o dispon&iacute;vel do PHP. Para as coisas funcionarem voc&ecirc; precisa pelo menos da vers&atilde;o PHP 7.2+. Vale a pena colocar a pasta do bin&aacute;rio do php.exe na sua vari&aacute;vel de ambiente PATH, assim, voc&ecirc; pode chamar o comando php de qualquer terminal. Talvez te ajude: a vers&atilde;o que usei aqui no meu computador &eacute; a PHP 7.2.7 NTS x64.  &Eacute; necess&aacute;rio tamb&eacute;m ter instalado o gerenciador de depend&ecirc;ncias Composer. Mais informa&ccedil;&otilde;es no site oficial, https:\/\/getcomposer.org\/. Se instalar ele certinho, vai poder ter o comando composer dispon&iacute;vel de qualquer terminal.  E, por &uacute;ltimo, &eacute; necess&aacute;rio que voc&ecirc; tenha no PHP a extens&atilde;o ZMQ. Para isso:   baixe no site da extens&atilde;o PECL, https:\/\/pecl.php.net\/package\/zmq\/1.1.3\/windows, a vers&atilde;o correspondente ao que voc&ecirc; tem no seu computador (no meu caso, baixei a &quot;7.2 Non Thread Safe (NTS) x64&quot;). Quer saber qual sua vers&atilde;o do php? &Eacute; f&aacute;cil: no terminal, digite: php -v. na mesma pasta onde tem o arquivo php.exe, descompacte o arquivo libzmq.dll na pasta ext, descompacte o arquivo php_zmq.dll inclua no fim do seu arquivo php.ini a declara&ccedil;&atilde;o extension=php_zmq.dll   N&atilde;o sabe onde fica o arquivo php.ini? &Eacute; f&aacute;cil descobrir: s&oacute; digitar no terminal: php --ini.  Foi na pasta e n&atilde;o achou um arquivo php.ini? Tranquilo: fa&ccedil;a uma c&oacute;pia do arquivo php.ini-development como php.ini. E depois edite esse php.ini.  Quer confirmar se a extens&atilde;o ZMQ est&aacute; instalada? Na linha de comando, pode executar o seguinte comando para mostrar todas as extens&otilde;es dispon&iacute;veis: php -m.  Instale o componente Jupyter-PHP (o kernel de PHP para o Jupyter)  No site oficial, https:\/\/litipk.github.io\/Jupyter-PHP-Installer\/, tem mais informa&ccedil;&otilde;es. Em resumo:   baixar o instalador .phar, https:\/\/litipk.github.io\/Jupyter-PHP-Installer\/dist\/jupyter-php-installer.phar; entrar na pasta onde baixou, pelo terminal, e executar: php jupyter-php-installer.phar install.             Resultado da instala&ccedil;&atilde;o   E &eacute; isso! Se tiver problemas com o Composer n&atilde;o acessando a URL do Packagist, pode dar uma olhada nesse projeto aqui, https:\/\/github.com\/rogeriopradoj\/cntlm-proxy-windows, l&aacute; tem mais instru&ccedil;&otilde;es!  Agora &eacute; s&oacute; usar!  Pronto, &eacute; s&oacute; reiniciar o seu Jupyter, e quando for criar um Notebook, vai ter l&aacute; a op&ccedil;&atilde;o de escolher PHP tamb&eacute;m (al&eacute;m dos outros que voc&ecirc; j&aacute; tinha, tipo o Python 3).  Aqui vai um exemplo:            Um exemplo de Jupyter Notebook usando o kernel PHP   Se quiser testar no seu pr&oacute;prio ambiente, &eacute; s&oacute; baixar em https:\/\/gist.github.com\/rogeriopradoj\/75a7e8ba3f58734c8510bd8f42d3e335.  &Eacute; isso, pessoal!  Mas por que usar PHP nesse mundo??? N&atilde;o era para estarmos focando mais em Python, R e outras?  Acho muito que &eacute; quest&atilde;o parecida com o que eu via no passado quando estava bastante envolvido com comunidades e Meetups, e j&aacute; ouvia assim: &quot;poxa, Golang seria uma op&ccedil;&atilde;o muito melhor para IA, por ser mais r&aacute;pida, etc etc&quot;. Mas o Python j&aacute; tinha ganhado a briga pois os algoritmos matem&aacute;ticos todos j&aacute; tinham sido implementados nele, e em Golang n&atilde;o&quot;.  Hoje, pela pesquisa r&aacute;pida que fiz, Golang ainda n&atilde;o tem ecossistema que se compara ao de R ou Python... https:\/\/news.ycombinator.com\/item?id=16883877. Mas, n&atilde;o quer dizer que n&atilde;o tenha suas vantagens, n&eacute;?  Especificamente do PHP, quais pontos positivos acredito em tamb&eacute;m us&aacute;-lo para ML e afins, aqui l&aacute; no &quot;Banco X&quot;:   linguagem madura, e cada vez mais r&aacute;pida desde a vers&atilde;o 7.0 (hoje est&aacute; na 7.3): https:\/\/kinsta.com\/pt\/blog\/benchmarks-definitivos-do-php\/ &oacute;timo ecossistema, ainda ativa (e muito! ) , utilizada por diversas grandes empresas, suporte da comunidade e de muitos players, seja para integra&ccedil;&otilde;es e tamb&eacute;m para infra ainda &eacute; a mais usada de toda a web (79% em 2019\/MAI, https:\/\/w3techs.com\/technologies\/overview\/programming_language\/all) &eacute; uma das plataformas oficialmente homologada no &quot;Banco X&quot; tem suporte em toda a infra do &quot;Banco X&quot; atual (desde os servidores IIS com Fastcgi ou Linux Apache nos ambientes descentralizados, ou mesmo da infra de Openshift, Docker etc. do ambiente centralizado) vai permitir que os colegas que j&aacute; tenham um certo dom&iacute;nio do PHP e seu ecossistema de usar esse conhecimento para esse novo mundo do Data Science, Analytics, IA, Machine Learning etc.   E voc&ecirc;, o que anda fazendo a&iacute; na sua &aacute;rea? Bora testar mais essa op&ccedil;&atilde;o?  O mais importante &eacute;: compartilhe o que est&aacute; fazendo, assim todos podemos ganhar e a empresa tamb&eacute;m!  At&eacute; a pr&oacute;xima, e podem me chamar para conversar em todos os canais, ok!  Abra&ccedil;os!    Este artigo foi publicado originalmente em RogerioPradoJ.com.",
            "description": "Sim, &eacute; poss&iacute;vel!   Fala pessoal, tudo bem?  &Eacute; muito comum durante nossa jornada de cursos no tema de Big Data, Analytics, Data Science, IA e afins sermos apresentados &agrave; plataforma Jupyter e aos seus notebooks, n&atilde;o &eacute; mesmo?     Jupyter: The Jupyter Notebook is an open-source web a..."
        },
        {
            "title": "Estou no Glitch.com",
            "url": "\/2018\/03\/20\/estou-no-glitch\/",
            "date": "2018-03-20 13:30:00 +0000",
            "body": "Eu j&aacute; estou no Glitch.com, e voc&ecirc;?              @rogeriopradoj no Glitch.com       Mas o que &eacute; o Glitch?     Glitch is the friendly community where you'll build the app of your dreams   Esse site, plataforma ou servi&ccedil;o pode ser definido de diversas formas, mas, em resumo &eacute; o que eles mesmos se auto-entitulam no &quot;About&quot; deles: o Glitch &eacute; uma comunidade amig&aacute;vel onde voc&ecirc; pode construir o aplicativo dos seus sonhos!  Criado pela Fog Creek, bastante conhecida por ser a criadora do Trello e co-criadora do Stack Overflow (esse eu nem sabia!), &eacute; uma ferramenta super interessante para trabalhar online num c&oacute;digo seja de forma individual ou.  Como conheci a plataforma  Foi na &eacute;poca que estava buscando formas de deixar a aplica&ccedil;&atilde;o HoroFinder como PWA - Progressive Web App, conseguindo trabalhar offline mesmo sendo um webapp, que cai sem querer no Glitch.com. Na explica&ccedil;&atilde;o da ferramenta Workbox do Google para uso com Webpack, tinha l&aacute; o exemplo de c&oacute;digo usando o Glitch.              Workbox - JavaScript Libraries for adding offline support to web apps     E depois que entrei nele, hehe, n&atilde;o consegui sair mais!  Na &eacute;poca, FEV\/2018, eles tinha lan&ccedil;ado um cursinho b&aacute;sico de React, num formato bem diferente de outros que j&aacute; tinha visto: v&iacute;deos, m&atilde;o-na-massa, editor de c&oacute;digo\/ide tudo bem integrado e leve. N&atilde;o tinha como n&atilde;o gostar!  E como funciona o Glitch?  Aqui &eacute; quase uma tradu&ccedil;&atilde;o livre do https:\/\/glitch.com\/about\/, vamos l&aacute;:  Comece fazendo um Remix            Start by remixing   Voc&ecirc; n&atilde;o precisa come&ccedil;ar do zero! Fa&ccedil;a o Remix de um app completo e funcional, personalizando-o para suas necessidades, ou se baseie nos frameworks de desenvolvimento mais poderosos e populares.  Colabora&ccedil;&atilde;o de verdade            Real collaboration   N&atilde;o &eacute; necess&aacute;rio nenhum controle de vers&atilde;o complicado - o editor embutido deixa voc&ecirc;, e qualquer um que voc&ecirc; voc&ecirc; convidar, editar todo o c&oacute;digo de uma vez e desfazer os erros assim que eles aparecerem. &Eacute; muito parecido com trabalhar juntos no Google Docs.  O Glitch &eacute; para todos            Glitch is for everyone   Muitas ferramentas de desenvolvimento colocam grandes obst&aacute;culos na frente sua criativade pois empurram toneladas de configura&ccedil;&otilde;es, funcionalidades confusas e complicadas, ou deixando idiotas se espalharem na comunidade. No Glitch, o tapete vermelho &eacute; estendido para receber bem criadores como n&oacute;s!  Apesar de ser divertido, n&atilde;o &eacute; apenas um brinquedo            It's fun, but it's not a toy   O Glitch n&atilde;o &eacute; uma vers&atilde;o &quot;idiotizada&quot; de um ambiente de desenvolvimento real - seu aplicativo Glitch roda exatamente na mesma infraestrutura de cloud e com o motor de Node.js que os melhores desenvolvedores usam para rodar suas aplica&ccedil;&otilde;es. Eles s&oacute; deixaram as coisas f&aacute;ceis para come&ccedil;ar.  Enquanto voc&ecirc; trabalha com o Glitch, eles tratam de atualizar os servidores no background sem ru&iacute;dos. N&atilde;o existe processo de deployment ou provisionamento de servidores - tudo acontece automaticamente.  Feito por uma empresa que se importa com voc&ecirc;            Built by a company that gives a damn   Ele &eacute; feito pela Fog Creek Software. Eles est&atilde;o no mercado desde 2000 como uma das mais influentes pequenas empresas de tecnologia do mundo. No passado, a equipe deles inventou o Trello para ajudar a gerenciar projetos, co-criaram o Stack Overflow para responder qualquer d&uacute;vida que um desenvolvedor possa ter, e constru&iacute;ram o FogBugz, pioneiro em bug-tracking.  O Glitch &eacute; parte desse legado, sendo constru&iacute;do em cima de tudo que eles aprenderam para ajudar qualquer um a construir o app dos seus sonhos.  E tem embed? Uhull!  Parte bem legal &eacute; que os projetos feitos podem ser publicados como Embed, ou seja, coloca no seu blog, hotsite, p&aacute;gina da empresa, enfim, em qualquer lugar que aceite um HTML\/IFRAME!  Esse aqui &eacute; meu projeto rodando por l&aacute; referente ao curso de React:          Modo pessoal e modo comunidade - Glitch for Platforms  Al&eacute;m do modo pessoal, existe um formato onde onde grupos ou empresas que querem aproveitar o Glitch (que, provalmente, todos os programadores adoram e deve virar febre logo logo) e querem melhorar a ado&ccedil;&atilde;o, por exemplo, de suas APIs publicadas.  No Glitch for Platforms s&atilde;o fornecidos alguns planos, um deles gratuito (chamado de Community), com funcionalidades que podem ser bem interessantes para uma organiza&ccedil;&atilde;o engajar pessoas em torno de seus projetos.            Glitch for Platforms - Pricing     Considera&ccedil;&otilde;es finais  Acho mesmo que vale a pena conhecer a plataforma! Seja voc&ecirc; desenvolvedor h&aacute; bastante tempo, ou entrando na &aacute;rea agora, poder conhecer a plataforma bem agora no in&iacute;cio &eacute; uma experi&ecirc;ncia muito muito interessante, e acredito verdadeiramente que ela v&aacute; viralizar!  Ent&atilde;o &eacute; isso a&iacute;, pessoal, se quiser me encontrar por l&aacute;, https:\/\/glitch.com\/@rogeriopradoj. E voc&ecirc;, j&aacute; utiliza o Glitch tamb&eacute;m? Conta a&iacute; nos coment&aacute;rios!    Este artigo foi publicado originalmente em RogerioPradoJ.com.",
            "description": "Eu j&aacute; estou no Glitch.com, e voc&ecirc;?              @rogeriopradoj no Glitch.com       Mas o que &eacute; o Glitch?     Glitch is the friendly community where you'll build the app of your dreams   Esse site, plataforma ou servi&ccedil;o pode ser definido de diversas formas, mas, em resumo &eacute; o que..."
        },
        {
            "title": "Stay hungry. Stay foolish.",
            "url": "\/2017\/01\/18\/stay-hungry-stay-foolish\/",
            "date": "2017-01-18 12:30:00 +0000",
            "body": "Voc&ecirc; j&aacute; deve ter ouvido falar na frase &quot;Stay hungry. Stay foolish.&quot;, n&atilde;o?            &quot;Stay hungry. Stay foolish.&quot;     Essa &eacute; uma frase que me identifico desde que assisti ao famoso v&iacute;deo da apresenta&ccedil;&atilde;o do Steve Jobs em 2005 para formandos da Stanford University e acredito que me define de alguma forma. No meu caso, estar sempre em busca de conhecimento.    Youtube Video: https:\/\/youtu.be\/D1R-jKKp3NA    No entanto, n&atilde;o estava encontrando uma forma de traduzir a frase para portugu&ecirc;s de uma forma que fizesse sem ficar muito ao p&eacute;-da-letra:            Hungry - Tradu&ccedil;&atilde;o no Linguee.com             Foolish - Tradu&ccedil;&atilde;o no Linguee.com     Mas agora consegui!  Achei no site N&atilde;o Posso Evitar, de Rodolfo Ara&uacute;jo as considera&ccedil;&otilde;es dele sobre o v&iacute;deo citado l&aacute; em cima, e a parte espec&iacute;fica do sobre a frase est&aacute; aqui, de um jeito muito bem adaptado para o portugu&ecirc;s:     Mantenha-se faminto por coisas novas, mantenha-se certo de sua ignor&acirc;ncia. Continue &aacute;vido por aprender, continue ing&ecirc;nuo e humilde para procurar. Tenha fome de vida, sede de descobrir. Stay hungry, stay foolish.     E voc&ecirc;? Tem uma frase que o identifica? Conta a&iacute; nos coment&aacute;rios!    Este artigo foi publicado originalmente em RogerioPradoJ.com.",
            "description": "Voc&ecirc; j&aacute; deve ter ouvido falar na frase &quot;Stay hungry. Stay foolish.&quot;, n&atilde;o?            &quot;Stay hungry. Stay foolish.&quot;     Essa &eacute; uma frase que me identifico desde que assisti ao famoso v&iacute;deo da apresenta&ccedil;&atilde;o do Steve Jobs em 2005 para formandos da Stanford University e acredito que me..."
        },
        {
            "title": "A famosa receita do bacalhau com ovos do Wanderlei",
            "url": "\/2016\/12\/31\/a-famosa-receita-do-bacalhau-com-ovos-do-wanderlei\/",
            "date": "2016-12-31 11:00:00 +0000",
            "body": "Ol&aacute;, ol&aacute;, pessoal! &Uacute;ltimo post de 2016! Boas festas para todos, que o novo ano seja &oacute;timo para todos n&oacute;s.  E nessa &eacute;poca de comemora&ccedil;&otilde;es com muita comilan&ccedil;a, estava na hora de publicar uma super receita aqui no blog: o bacalhau com ovos na frigideira do Wanderlei, vulgo bacalhau com ovos do meu pai ;-).   O famoso bacalhau com ovos do Wanderlei - a receita de fam&iacute;lia  Minha tia conta a hist&oacute;ria que minha av&oacute; paterna tinha algumas receitas que antes de falecer passou para os filhos, e dentre elas duas de bacalhau. A que ela ficou foi o mais tradicional bacalhau de forno com batatas. E a que o meu pai ficou foi o bacalhau com ovos na frigideira. As duas formas s&atilde;o muito saborosas, mas com certeza gosto mais da frigideira!  E da mesma forma que minha av&oacute; passou a receita, meu pai me ensinou no R&eacute;veillon de 2015 como fazer (na noite de 31\/12\/2014 est&aacute;vamos aqui em casa preparando o prato. Ele me indicando cada um dos passos, eu botando a m&atilde;o-na-massa e anotando tudo tim-tim por tim-tim)!  Foi uma experi&ecirc;ncia muito boa a prepara&ccedil;&atilde;o. E depois, ver o pessoal comendo, elogiando e repetindo (entre eles meu meu pai) foi excepcional! Ainda bem que j&aacute; nesse primeira vez fiz &quot;duas receitas&quot;, para dobrar o n&uacute;mero de por&ccedil;&otilde;es, caso contr&aacute;rio ia ter briga por quem n&atilde;o conseguiria experimentar o famoso bacalhau ;-) .  E com alegria digo que essa receita de fam&iacute;lia de bacalhau com ovos sempre surprende positivamente quem conhece pela primeira vez. Seja pelo sabor crocante do bacalhau combinando com os vegetais, ou pela quantidade de ovos usada na receita (sim, &eacute; uma d&uacute;zia de ovos!), ou ainda pela apar&ecirc;ncia do prato servido na pr&oacute;pria frigideira ou num grande prato ou travessa. E quem come sempre quer mais!    Youtube Video: https:\/\/youtu.be\/yFHaFBv9s7A  J&aacute; est&aacute; com &aacute;gua na boca? Ent&atilde;o chega de hist&oacute;ria e vamos ver como fazer esse prato delicioso!  Ingredientes   400g de bacalhau desfiado 1 cebola grande 4 dentes de alho 2 tomates grandes 1 d&uacute;zia de ovos tempero baiano salsinha fresca sal &oacute;leo azeite   Antes de come&ccedil;ar - Dessalgando o bacalhau  Dessalgue o bacalhau (6 horas dentro da &aacute;gua num pote dentro da geladeira, trocando a &aacute;gua de duas em duas horas).  Prepara&ccedil;&atilde;o  Numa frigideira grande (que tenha tampa), fritar o bacalhau com &oacute;leo, um fio de azeite e tempero baiano.  Depois de frito, juntar a cebola.  Depois, colocar os tomates cortados em roldea, cobrindo toda a frigideira.  Cobrir com salsinha.  Em seguida, come&ccedil;ar a quebrar os ovos, a partir de um canto, sem quebrar a gema e colocando sal. Cobrir a frigideira com os ovos, distribuindo as gemas.  Diminuir o fogo e tampar a frigideira at&eacute; os ovos cozinharem.  Retirar o excesso de &oacute;leo (escorrer) e servir.    Galeria   Bacalhau com ovos: o preferido!   Bacalhau com ovos: prepara&ccedil;&atilde;o, fase quebrando os ovos   Bacalhau com ovos: duas receitas, muito bom!   Bacalhau com ovos: prepara&ccedil;&atilde;o, ovos cozinhando   Bacalhau com ovos: prepara&ccedil;&atilde;o, ovos cozidos   Bacalhau com ovos: contraste, panela e frigideira   Bacalhau com ovos: &agrave; fam&iacute;lia   Bacalhau com ovos: &agrave; fam&iacute;lia II   Bacalhau com ovos: &agrave; galera    Um feliz ano novo para todo mundo!    Este artigo foi publicado originalmente em RogerioPradoJ.com.",
            "description": "Ol&aacute;, ol&aacute;, pessoal! &Uacute;ltimo post de 2016! Boas festas para todos, que o novo ano seja &oacute;timo para todos n&oacute;s.  E nessa &eacute;poca de comemora&ccedil;&otilde;es com muita comilan&ccedil;a, estava na hora de publicar uma super receita aqui no blog: o bacalhau com ovos na frigideira do Wanderlei, vulgo bacalhau..."
        },
        {
            "title": "Configurando Hotkeys no Nintendo 64 do Retropie",
            "url": "\/2016\/10\/24\/configurando-hotkeys-no-nintendo-64-do-retropie\/",
            "date": "2016-10-24 08:06:00 +0000",
            "body": "Ol&aacute; pessoal!  Essa dica &eacute; para quem usa o Retropie para emular videogames antigos no Raspberry Pi e est&aacute; tendo problemas para sair de um jogo dentro do emulador de Nintendo 64 e tamb&eacute;m n&atilde;o consegue salvar seu progresso para carreg&aacute;-lo posteriormente.   Fonte: https:\/\/retropie.org.uk\/    Por padr&atilde;o, o Retropie tem uma lista de hotkeys (que s&atilde;o os atalhos especiais feitos no joystick para alguma a&ccedil;&atilde;o do emulador):   Fonte: https:\/\/github.com\/RetroPie\/RetroPie-Setup\/wiki\/FAQ#default-joypad-hotkeys  O problema &eacute; que quanto estamos jogando o Nintendo 64 (que roda o emulador Mupen64plus no Retropie 4), os padr&otilde;es acima n&atilde;o funcionam. E nada acontece quando voc&ecirc; aperta por exemplo SELECT + START, que deveria encerrar a partida e ir para a lista de ROMs no EmulationStation, fazendo com que voc&ecirc; tenha que recorrer a linha de comando ou a um teclado conectado s&oacute; para conseguir ir para outro jogo! Bem ruim, n&atilde;o &eacute; mesmo?  Essa situa&ccedil;&atilde;o acontece porque o Retropie tenta utilizar sempre que poss&iacute;vel os emuladores da &quot;fam&iacute;lia LibreRetro&quot; daqueles hotkeys que mostramos. No entanto, quando a melhor performance para um dos videogames &eacute; conseguida com outro programa (caso do Nintendo 64), o emulador diferente tem a prefer&ecirc;ncia.  Agora que j&aacute; sabemos da hist&oacute;ria, vamos ver como resolver esse imbr&oacute;glio:   Entre na linha de comando do seu Retropie (apertando F4 num teclado conectado, ou acessando via SSH) Verifique no seu controle principal qual &eacute; o n&uacute;mero correspondente ao bot&otilde;es que voc&ecirc; vai usar como hotkey, usando o comando jstest \/dev\/input\/jsX, onde X &eacute; o &iacute;ndice referente ao seu joystick. Exemplo, onde descobri que o SELECT &eacute; o bot&atilde;o 8 e o START &eacute; o bot&atilde;o 9:   $ jstest \/dev\/input\/js0 Driver version is 2.1.0. Joystick (Xbox 360 Wireless Receiver) has 6 axes (X, Y, Rx, Ry, Hat0X, Hat0Y) and 17 buttons (BtnX, BtnY, BtnTL, BtnTR, BtnTR2, BtnSelect, BtnStart, BtnMode, BtnThumbL, BtnThumbR, ?, ?, ?, (null), (null), (null), (null)). Testing ... (interrupt to exit) Axes:  0: -2050  1:     0  2: -3810  3:     0  4:     0  5:     0 Buttons:  0:off  1:off  2:off  3:off  4:off  5:off  6:off  7:off  8:off  9:off 10:off 11:off 12:off 13:off 14:off 15:off 16:off    Edite o arquivo \/opt\/retropie\/configs\/all\/autoconf.cfg de forma que a linha mupen64plus_hotkeys = 1 fique mupen64plus_hotkeys = 0:   $ sed -i &quot;s\/mupen64plus_hotkeys = 1\/mupen64plus_hotkeys = 0\/g&quot; \/opt\/retropie\/configs\/all\/autoconf.cfg    Edite o arquivo \/opt\/retropie\/configs\/n64\/mupen64plus.cfg para colocar os hotkeys de acordo com sua prefer&ecirc;ncia e n&uacute;meros dos bot&otilde;es descobertos com o jstest:   # Meus bot&otilde;es, Xbox 360 Controller wifi, xpad driver # --------------------------------------------------- # &lt;select&gt;   =&gt; 8 # &lt;start&gt;    =&gt; 9 # &lt;L1&gt;       =&gt; 4 # &lt;R1&gt;       =&gt; 5  # Hotkey para sair de um jogo $ sed -i 's~Joy Mapping Stop = &quot;&quot;~Joy Mapping Stop = &quot;J*B8\/B9&quot;~g' \/opt\/retropie\/configs\/n64\/mupen64plus.cfg  # Hotkey para carregar um progresso salvo de uma partida $ sed -i 's~Joy Mapping Load State = &quot;&quot;~Joy Mapping Load State = &quot;J*B8\/B4&quot;~g' \/opt\/retropie\/configs\/n64\/mupen64plus.cfg  # Hotkey para salvar o progresso de uma partida $ sed -i 's~Joy Mapping Save State = &quot;&quot;~Joy Mapping Save State = &quot;J*B8\/B5&quot;~g' \/opt\/retropie\/configs\/n64\/mupen64plus.cfg   Depois disso a&iacute; &eacute; s&oacute; reiniciar o Raspberry Pi ($ sudo shutdown -r now) e os seus jogos de Nintendo 64 j&aacute; v&atilde;o ter esses hotkeys funcionando!    Ficou com d&uacute;vida? Fique &agrave; vontade para falar comigo nos coment&aacute;rios abaixo e nos contatos do RogerioPradoJ.com.  At&eacute; mais!    Este artigo foi publicado originalmente em RogerioPradoJ.com.",
            "description": "Ol&aacute; pessoal!  Essa dica &eacute; para quem usa o Retropie para emular videogames antigos no Raspberry Pi e est&aacute; tendo problemas para sair de um jogo dentro do emulador de Nintendo 64 e tamb&eacute;m n&atilde;o consegue salvar seu progresso para carreg&aacute;-lo posteriormente.   Fonte: https:\/\/retropie.org..."
        },
        {
            "title": "Contribui\u00e7\u00e3o com Open Source: Mais Do Que C\u00f3digo - #LABHR - Agrade\u00e7a a Todos os Contribuidores - #30contribs",
            "url": "\/2016\/09\/27\/contribuicao-com-open-source-mais-do-que-codigo-labhr-agradeca-todos-contribuidores-30contribs\/",
            "date": "2016-09-27 06:20:00 +0000",
            "body": "Este artigo &eacute; todo baseado na p&aacute;gina LABHR - Let's All Build A Hat Rack dispon&iacute;vel em https:\/\/labhr.github.io\/.    *Se quiser saber mais sobre como contribuir com projetos open source, veja o artigo #30contribs - Cheguei nos 30! E quero de presente Pull Requests e contribui&ccedil;&otilde;es para projetos open source e da comunidade!    Ol&aacute; pessoal, tudo certinho?  Acho que voc&ecirc;s j&aacute; sabiam que para contribuir para projetos open source e para a comunidade de desenvolvimento voc&ecirc; n&atilde;o precisa apenas ir para c&oacute;digo fonte, n&atilde;o &eacute; mesmo? Tem como ajudar com documenta&ccedil;&atilde;o dos projetos, tradu&ccedil;&atilde;o, divulga&ccedil;&atilde;o, utiliza&ccedil;&atilde;o e reportagem de erros e bugs etc. Bacana demais, n&eacute;!  E como que os mantenedores de projeto podem valorizar todos esses contribuidores, seja os que mexeram com c&oacute;digo diretamente ou todos os outros que s&atilde;o muitos tamb&eacute;m?  &Eacute; a&iacute; que entra em cena a iniciativa LABHR, Let's All Build A Hat Rack!   Fonte: https:\/\/github.com\/LABHR  A iniciativa LAHBR busca valorizar todos que trabalhar com as contribui&ccedil;&otilde;es al&eacute;m do c&oacute;digo e permitir que os mantenedores dos projetos agrade&ccedil;am!  Origens  O LABHR come&ccedil;ou como uma ideia de Leslie Hawthorn, que evangelizava sobre como agradecer de forma aberta as pessoas tanto via m&iacute;dias sociais quanto por meio de recomenda&ccedil;&otilde;es por escrito.  A&iacute; a ideia foi ampliada pela Katie McLaughlin com o trabalho de automatiza&ccedil;&atilde;o desse processo no GitHub.  Projetos  Voc&ecirc; pode automatizar essa descoberta dos contribuidores para agradecer pelo trabalho em projetos FOSS (Free and Open-Source Software) usando uma das ferramentas do LABHR:   hatrack - buscador web de contribui&ccedil;&otilde;es &quot;non-code&quot; + &quot;code&quot; no GitHub octohatrack - buscador python de linha de comando de contribui&ccedil;&otilde;es &quot;non-code&quot; + &quot;code&quot; no GitHub stackoverflow hat rack - veja os usu&aacute;rios mais ativos de uma tag espec&iacute;fica no StackOverflow wikipedia hat rack - veja os contribuidores de uma p&aacute;gina da Wikipedia   Artigos  Em ingl&ecirc;s   A place to hang your hat - Leslie Hawthorn Recommendations Update - Leslie Hawthorn A tool for tracking non-code GitHub contributions - Katie McLaughlin Acknowledging Non-Coding Contributions - Katie McLaughlin   Em portugu&ecirc;s   Contribui&ccedil;&atilde;o com Open Source: Mais Do Que C&oacute;digo - #LABHR - Agrade&ccedil;a a Todos os Contribuidores - #30contribs   Palestras   Build A Better Hat Rack - All Contributions Welcome apresentada na PyCon US Build A Better Hat Rack - All Contributions Welcome apresentada na Kiwi PyCon Build A Better Hat Rack - All Contributions Welcome apresentada na \/dev\/world\/ Build A Better Hat Rack - All Contributions Welcome apresentada na PyCon AU Mencionada na FOSS Lessions from building the KSP-CKAN pelo Paul Fenwick na OSDC Mencionada na Keynote pelo Dr Russell Keith-Magee na Django Under the Hood Lightning Talks foram apresentada na: SydPHP, DevOps Sydney, SyPy, \/dev\/world, PHP Conference NZ, OSDC, linux.conf.au, and DjangoCon Europe   Evangelistas   Leslie Hawthorn Katie McLaughlin   Outros apoiadores   eu voc&ecirc; ;-)   Al&eacute;m do LABHR  Foi criado tamb&eacute;m um projeto no GitHub, do Kent C. Dodds, chamado github:\/\/kentcdodds\/all-contributors e a chamada dele &eacute;: Recognize all contributors, not just the ones who push code.   GitHub repo: https:\/\/github.com\/kentcdodds\/all-contributors  A ideia principal dele &eacute; criar um arquivo manifesto, .all-contributorsrc, que ficaria dentro de cada reposit&oacute;rio p&uacute;blico com toda a informa&ccedil;&atilde;o de todos os contribuidores. Seria uma forma de padronizar tudo por meio de uma especifica&ccedil;&atilde;o. Se quiser saber mais sobre esse projeto espec&iacute;fico, acessa l&aacute;  Considera&ccedil;&otilde;es finais  &Eacute; muito bacana saber que existem essas iniciativas de agradecer todos os contribuidores, seja os que codificam ou os que trabalham com tantas outras coisas relacionadas a projetos open source. Vale a pena conhecer mais sobre as a&ccedil;&otilde;es e ser mais um apoiador dessas ideias!  E, como sempre, se quiser falar comigo pode usar os coment&aacute;rios abaixo e os contatos do RogerioPradoJ.com.  At&eacute; mais!    Este artigo foi publicado originalmente em RogerioPradoJ.com.",
            "description": "Este artigo &eacute; todo baseado na p&aacute;gina LABHR - Let's All Build A Hat Rack dispon&iacute;vel em https:\/\/labhr.github.io\/.    *Se quiser saber mais sobre como contribuir com projetos open source, veja o artigo #30contribs - Cheguei nos 30! E quero de presente Pull Requests e contribui&ccedil;&otilde;es p..."
        },
        {
            "title": "Como Contribuir com o Homebrew para macOS e Feliz Anivers\u00e1rio Rodrigo #30contribs",
            "url": "\/2016\/09\/26\/como-contribuir-com-o-homebrew-para-macos-e-feliz-aniversario-rodrigo-30contribs\/",
            "date": "2016-09-26 06:15:00 +0000",
            "body": "Ol&aacute; pessoal, tudo bem? Como andam as contribui&ccedil;&otilde;es?  *Se quiser saber mais sobre como contribuir com projetos open source, veja o artigo #30contribs - Cheguei nos 30! E quero de presente Pull Requests e contribui&ccedil;&otilde;es para projetos open source e da comunidade!  Hoje vamos ver como contribuir criando um novo pacote para o Homebrew, que &eacute; um &oacute;timo gerenciador de pacotes para o macOS (similar ao apt-get, yum, dnf ou chocolatey).   Homebrew website: http:\/\/brew.sh    \ud83c\udf7aE tamb&eacute;m dar parab&eacute;ns para o @royopa! 30 anos! #30contribs!   Parab&eacute;ns, @royopa, par&ccedil;a! Fonte: http:\/\/www.reactiongifs.com\/r\/drj1NmK.gif    Antes de come&ccedil;ar a falar direto sobre a contribui&ccedil;&atilde;o, vamos falar por que cheguei nisso!  Motiva&ccedil;&atilde;o: Hostess  Descobri uma ferramenta bem bacana para gerenciar nosso \/etc\/hosts:     cbednarski\/hostess      An idempotent command-line utility for managing your \/etc\/hosts file.      -- https:\/\/github.com\/cbednarski\/hostess   Ele &eacute; uma ferramenta escrita em golang, **, e na sua vers&atilde;o 0.2.1 tem como forma de instala&ccedil;&atilde;o oficial os bin&aacute;rios pr&eacute;-compilados no GitHub ou, para quem quer mexer de alguma forma no c&oacute;digo fonte, via go get ou compilando diretamente do reposit&oacute;rio.  Instala&ccedil;&atilde;o de aplicativos de forma autom&aacute;tica e gerenci&aacute;vel  Mas eu queria instalar a ferramenta no meu macOS de uma forma que conseguisse facilmente listar depois os aplicativos instalados, simplificando a reinstala&ccedil;&atilde;o do sistema se necess&aacute;rio - acabei de reinstalar o macOS Sierra 10.12 de forma limpa, e a reinstala&ccedil;&atilde;o dos aplicativos e bibliotecas por meio de uma listagem program&aacute;tica foi excelente!  Aproveitando, para quem tem macOS, segue a lista dos gerenciadores de aplicativos, pacotes, bibliotecas e configura&ccedil;&otilde;es que uso e recomendo junto do Homebrew:   Homebrew Cask: Homebrew para aplica&ccedil;&otilde;es; mas-cli: Linha de comando para a Mac App Store; mackup: Sincroniza as configura&ccedil;&otilde;es dos seus aplicativos em v&aacute;rios tipos de armazenamento como Drobpox, Google Drive ou Git. Eu uso o Dropbox pois &eacute; o padr&atilde;o e funciona muito bem.   Um espa&ccedil;o para contribuir: Hostess no Homebrew  Como vimos, segundo a p&aacute;gina oficial, o hostess ainda n&atilde;o estava dispon&iacute;vel para instala&ccedil;&atilde;o via gerenciadores. Ent&atilde;o a primeira coisa foi ver se j&aacute; tinha algum suporte no homebrew. Com o comando brew search fazemos uma consulta tanto nos reposit&oacute;rios do homebrew quanto do homebrew-cask:  $ brew search hostess No formula found for &quot;hostess&quot;. ==&gt; Searching pull requests...    Que beleza: uma oportunidade para contribui&ccedil;&atilde;o com open source! (aqui alguns commits j&aacute; aceitos no homebrew e no homebrew-cask).  Come&ccedil;ando a contribuir   Fonte: http:\/\/imgur.com\/gallery\/ccd3Fjs  Reposit&oacute;rio principal no GitHub  Primeiro, tinha que saber para qual lugar mandar o Pull Request. Por ser um pacote do sistema operacional, e n&atilde;o um aplicativo, o homebrew era o melhor lugar.  &Eacute; importante frisar: cada um dos pacotes que o homebrew sabe gerenciar ele chama de Formula. E a&iacute; fui buscar o reposit&oacute;rio do GitHub onde ficam essas f&oacute;rmulas oficiais, que &eacute; o https:\/\/github.com\/Homebrew\/homebrew-core.  Contributing.md  A boa pr&aacute;tica nos diz que dentro do reposit&oacute;rio, quando vamos fazer uma contribui&ccedil;&atilde;o, devemos ir direto para o arquivo CONTRIBUTING.md. Nesse reposit&oacute;rio somos ensinados sobre como submeter uma nova f&oacute;rmula.  Criando o arquivo da f&oacute;rmula  Ent&atilde;o vamos l&aacute;:  $ brew create https:\/\/github.com\/cbednarski\/hostess\/archive\/v0.2.1.tar.gz   O comando cria um esqueleto para a f&oacute;rmula no seguinte caminho: \/usr\/local\/Homebrew\/Library\/Taps\/homebrew\/homebrew-core\/Formula\/hostess.rb&quot;. O conte&uacute;do dele ficou assim:  # Documentation: https:\/\/github.com\/Homebrew\/brew\/blob\/master\/docs\/Formula-Cookbook.md #                http:\/\/www.rubydoc.info\/github\/Homebrew\/brew\/master\/Formula # PLEASE REMOVE ALL GENERATED COMMENTS BEFORE SUBMITTING YOUR PULL REQUEST!  class Hostess &lt; Formula   desc &quot;&quot;   homepage &quot;&quot;   url &quot;https:\/\/github.com\/cbednarski\/hostess\/archive\/v0.2.1.tar.gz&quot;   version &quot;0.2.1&quot;   sha256 &quot;3be0198f358d49aa9b17fd8622ab5d4e3732dc45226fe1804f245a0773504aee&quot;    # depends_on &quot;cmake&quot; =&gt; :build   depends_on :x11 # if your formula requires any X11\/XQuartz components    def install     # ENV.deparallelize  # if your formula fails when building in parallel      # Remove unrecognized options if warned by configure     system &quot;.\/configure&quot;, &quot;--disable-debug&quot;,                           &quot;--disable-dependency-tracking&quot;,                           &quot;--disable-silent-rules&quot;,                           &quot;--prefix=#{prefix}&quot;     # system &quot;cmake&quot;, &quot;.&quot;, *std_cmake_args     system &quot;make&quot;, &quot;install&quot; # if this fails, try separate make\/make install steps   end    test do     # `test do` will create, run in and delete a temporary directory.     #     # This test will fail and we won't accept that! It's enough to just replace     # &quot;false&quot; with the main program this formula installs, but it'd be nice if you     # were more thorough. Run the test with `brew test hostess`. Options passed     # to `brew install` such as `--HEAD` also need to be provided to `brew test`.     #     # The installed folder is not in the path, so use the entire path to any     # executables being tested: `system &quot;#{bin}\/program&quot;, &quot;do&quot;, &quot;something&quot;`.     system &quot;false&quot;   end end    Como vimos, &eacute; apenas um arquivo de exemplo, escrito em Ruby. De forma a me basear na constru&ccedil;&atilde;o do arquivo adequadamente, estudei outras f&oacute;rmulas, dentro do reposit&oacute;rio, que instalavam pacotes Golang. Para achar todos os arquivos que pudessem me ajudar, fiz o seguinte:  $ pt 'depends_on &quot;go&quot; =&gt; :build' \/usr\/local\/Homebrew\/Library\/Taps\/homebrew\/homebrew-core\/Formula\/ # # ... v&aacute;rias f&oacute;rmulas...    **Estou usando o pt para busca: https:\/\/github.com\/monochromegane\/the_platinum_searcher. Voc&ecirc; pode usar sua IDE, editor de texto etc.*  Depois de estudar o c&oacute;digo das outras f&oacute;rmulas (obrigado open source!), fiz as altera&ccedil;&otilde;es e o meu arquivo \/usr\/local\/Homebrew\/Library\/Taps\/homebrew\/homebrew-core\/Formula\/hostess.rb final ficou assim:  class Hostess &lt; Formula   desc &quot;Idempotent command-line utility for managing your \/etc\/hosts file&quot;   homepage &quot;https:\/\/github.com\/cbednarski\/hostess&quot;   url &quot;https:\/\/github.com\/cbednarski\/hostess\/archive\/v0.2.1.tar.gz&quot;   sha256 &quot;3be0198f358d49aa9b17fd8622ab5d4e3732dc45226fe1804f245a0773504aee&quot;   head &quot;https:\/\/github.com\/cbednarski\/hostess.git&quot;    depends_on &quot;go&quot; =&gt; :build    def install     (buildpath + &quot;src\/github.com\/cbednarski\/hostess&quot;).install Dir[buildpath\/&quot;*&quot;]     cd &quot;src\/github.com\/cbednarski\/hostess\/cmd\/hostess&quot; do       ENV[&quot;GOPATH&quot;] = buildpath       system &quot;go&quot;, &quot;install&quot;     end     bin.install &quot;bin\/hostess&quot; =&gt; &quot;hostess&quot;   end    test do     system bin\/&quot;hostess&quot;, &quot;--help&quot;   end end    Testando a instala&ccedil;&atilde;o do arquivo  O passo seguinte foi testar a instala&ccedil;&atilde;o, seguindo a orienta&ccedil;&atilde;o l&aacute; do CONTRIBUTING.md:  $ brew install --debug --verbose \/usr\/local\/Homebrew\/Library\/Taps\/homebrew\/homebrew-core\/Formula\/hostess.rb   \/usr\/local\/Homebrew\/Library\/Homebrew\/brew.rb (Formulary::FromPathLoader): loading \/usr\/local\/Homebrew\/Library\/Taps\/homebrew\/homebrew-core\/Formula\/hostess.rb \/usr\/local\/Homebrew\/Library\/Homebrew\/brew.rb (Formulary::FormulaLoader): loading \/usr\/local\/Homebrew\/Library\/Taps\/homebrew\/homebrew-core\/Formula\/go.rb ==&gt; Using the sandbox \/usr\/bin\/sandbox-exec -f \/tmp\/homebrew20160925-23319-7e1u4k.sb nice \/System\/Library\/Frameworks\/Ruby.framework\/Versions\/2.0\/usr\/bin\/ruby -W0 -I \/usr\/local\/Homebrew\/Library\/Homebrew -- \/usr\/local\/Homebrew\/Library\/Homebrew\/build.rb \/usr\/local\/Homebrew\/Library\/Taps\/homebrew\/homebrew-core\/Formula\/hostess.rb --verbose --debug \/usr\/local\/Homebrew\/Library\/Homebrew\/build.rb (Formulary::FromPathLoader): loading \/usr\/local\/Homebrew\/Library\/Taps\/homebrew\/homebrew-core\/Formula\/hostess.rb \/usr\/local\/Homebrew\/Library\/Homebrew\/build.rb (Formulary::FormulaLoader): loading \/usr\/local\/Homebrew\/Library\/Taps\/homebrew\/homebrew-core\/Formula\/go.rb ==&gt; Downloading https:\/\/github.com\/cbednarski\/hostess\/archive\/v0.2.1.tar.gz Already downloaded: \/Users\/rogerio\/Library\/Caches\/Homebrew\/hostess-0.2.1.tar.gz ==&gt; Verifying hostess-0.2.1.tar.gz checksum tar xvzf \/Users\/rogerio\/Library\/Caches\/Homebrew\/hostess-0.2.1.tar.gz x hostess-0.2.1\/ x hostess-0.2.1\/.gitignore x hostess-0.2.1\/.travis.yml x hostess-0.2.1\/Dockerfile x hostess-0.2.1\/LICENSE x hostess-0.2.1\/Makefile x hostess-0.2.1\/README.md x hostess-0.2.1\/cmd\/ x hostess-0.2.1\/cmd\/hostess\/ x hostess-0.2.1\/cmd\/hostess\/hostess.go x hostess-0.2.1\/commands.go x hostess-0.2.1\/commands_test.go x hostess-0.2.1\/hostfile.go x hostess-0.2.1\/hostfile_test.go x hostess-0.2.1\/hostlist.go x hostess-0.2.1\/hostlist_test.go x hostess-0.2.1\/hostname.go x hostess-0.2.1\/hostname_test.go x hostess-0.2.1\/test-fixtures\/ x hostess-0.2.1\/test-fixtures\/hostfile1 x hostess-0.2.1\/vendor\/ x hostess-0.2.1\/vendor\/github.com\/ x hostess-0.2.1\/vendor\/github.com\/codegangsta\/ x hostess-0.2.1\/vendor\/github.com\/codegangsta\/cli\/ x hostess-0.2.1\/vendor\/github.com\/codegangsta\/cli\/LICENSE x hostess-0.2.1\/vendor\/github.com\/codegangsta\/cli\/app.go x hostess-0.2.1\/vendor\/github.com\/codegangsta\/cli\/cli.go x hostess-0.2.1\/vendor\/github.com\/codegangsta\/cli\/command.go x hostess-0.2.1\/vendor\/github.com\/codegangsta\/cli\/context.go x hostess-0.2.1\/vendor\/github.com\/codegangsta\/cli\/flag.go x hostess-0.2.1\/vendor\/github.com\/codegangsta\/cli\/help.go ==&gt; go install ==&gt; Cleaning Fixing \/usr\/local\/Cellar\/hostess\/0.2.1\/bin\/hostess permissions from 755 to 555 ==&gt; Finishing up ln -s ..\/Cellar\/hostess\/0.2.1\/bin\/hostess hostess ==&gt; Summary \ud83c\udf7a  \/usr\/local\/Cellar\/hostess\/0.2.1: 2 files, 3.9M, built in 2 seconds    &Eacute; isso a&iacute;, instalou!  Aqui j&aacute; aproveitamos e rodamos o comando de teste:  $ brew test \/usr\/local\/Homebrew\/Library\/Taps\/homebrew\/homebrew-core\/Formula\/hostess.rb  Testing hostess ==&gt; Using the sandbox ==&gt; \/usr\/local\/Cellar\/hostess\/0.2.1\/bin\/hostess --help   Ok, testes executados com sucesso!  Script de auditoria e um bug no Homebrew  Agora, seguindo os pr&oacute;ximos passos para a contribui&ccedil;&atilde;o, vamos fazer a auditoria:  $ brew audit --new-formula \/usr\/local\/Homebrew\/Library\/Taps\/homebrew\/homebrew-core\/Formula\/hostess.rb  Error: type mismatch: String given Please report this bug:     https:\/\/git.io\/brew-troubleshooting \/usr\/local\/Homebrew\/Library\/Homebrew\/cmd\/search.rb:153:in `=~' \/usr\/local\/Homebrew\/Library\/Homebrew\/cmd\/search.rb:153:in `block in search_tap' \/usr\/local\/Homebrew\/Library\/Homebrew\/cmd\/search.rb:153:in `select' \/usr\/local\/Homebrew\/Library\/Homebrew\/cmd\/search.rb:153:in `search_tap' \/usr\/local\/Homebrew\/Library\/Homebrew\/dev-cmd\/audit.rb:347:in `block (2 levels) in audit_formula_name'   Ops... Deu algum problema: __Error__: type mismatch: String given. Abri uma issue referente ao bug no reposit&oacute;rio do homebrew, j&aacute; recebi a resposta (minha instala&ccedil;&atilde;o estava desatualizada), e quando rodei novamente, tudo certo:  $ brew audit --new-formula \/usr\/local\/Homebrew\/Library\/Taps\/homebrew\/homebrew-core\/Formula\/hostess.rb   Dessa vez, o comando n&atilde;o deu nenhuma sa&iacute;da, indicando que a f&oacute;rmula passou OK pela auditoria.  Fork, Branch, Commit  Pr&oacute;ximo passo, fazer o commit num branch separado (boa pr&aacute;tica), j&aacute; preparando para o Pull Request:  # garantir que est&aacute; na pasta correta $ cd $(brew --repository homebrew\/core)  # fazer fork do reposit&oacute;rio no github, usando a ferramenta cli hub, recomendad&iacute;ssima (https:\/\/hub.github.com\/) $ hub fork  # criar branch separado $ git checkout -b new-formula-hostess  # fazer o commit $ git add Formula\/hostess.rb $ git commit -m &quot;hostess 0.2.1 (new formula)&quot;   Pull Request  Commit feito, hora de criar o Pull Request:  # primeiro mandar as altera&ccedil;&otilde;es l&aacute; para o meu fork no GitHub # (rogeriopradoj &eacute; o nome do meu git remote) $ git push rogeriopradoj new-formula-hostess  # caso tiver algum problema aqui referente a 'shallow update not allowed' rode a seguinte linha: # $ git fetch --unshallow rogeriopradoj &amp;&amp; git push rogeriopradoj new-formula-hostess  # e termine fazendo o pull request $ hub pull-request # # https:\/\/github.com\/Homebrew\/homebrew-core\/pull\/5257   Yeah! O Pull Request foi feito, e a linha de comando j&aacute; retorna o endere&ccedil;o: https:\/\/github.com\/Homebrew\/homebrew-core\/pull\/5257.    Agora &eacute; s&oacute; esperar o resultado da avalia&ccedil;&atilde;o da contribui&ccedil;&atilde;o em alguns dias (que deve ser feita pelos mantenedores do projeto seguindo esse documento).  Considera&ccedil;&otilde;es finais  Costumo falar que contribuir para projetos open source tem muito de motiva&ccedil;&atilde;o e estilo, mas tem um fator que tamb&eacute;m &eacute; muito importante: oportunidade! Aqui, percebi a oportunidade quando uma biblioteca n&atilde;o estava dispon&iacute;vel, e podia ser inclu&iacute;da via contribui&ccedil;&atilde;o.  Meu irm&atilde;o Rodrigo, o @royopa fala que a motiva&ccedil;&atilde;o dele &eacute; contribuir de qualquer forma para todo projeto que ele usar sempre que ele conseguir (souber como fazer e tiver a oportunidade!).     E refor&ccedil;ando, hoje 26 de setembro &eacute; anivers&aacute;rio dele de 30 anos, ent&atilde;o: Parab&eacute;ns, Rodrigo, muitas felicidades!   Eu tento seguir isso que ele fala tamb&eacute;m. Tanto que boa parte das minhas contribui&ccedil;&otilde;es no GitHub s&atilde;o para projetos abertos que uso constantemente.  Por fim, nesse artigo conhecemos e vimos como contribuir para o Homebrew, criando uma f&oacute;rmula para o hostess, passamos por v&aacute;rios softwares para instala&ccedil;&atilde;o de aplicativos de forma autom&aacute;tica e gerenci&aacute;vel (Homebrew Cask, mas-cli e mackup com Dropbox).  &Eacute; isso a&iacute;, se quiser falar comigo pode usar os coment&aacute;rios abaixo e os contatos do RogerioPradoJ.com.  At&eacute; a pr&oacute;xima!    Este artigo foi publicado originalmente em RogerioPradoJ.com.",
            "description": "Ol&aacute; pessoal, tudo bem? Como andam as contribui&ccedil;&otilde;es?  *Se quiser saber mais sobre como contribuir com projetos open source, veja o artigo #30contribs - Cheguei nos 30! E quero de presente Pull Requests e contribui&ccedil;&otilde;es para projetos open source e da comunidade!  Hoje vamos ver como..."
        },
        {
            "title": "Gerenciamento de Recursos de Hardware no Docker e Como Instalar Pacotes de Sistema Operacional no docker-machine",
            "url": "\/2016\/03\/20\/gerenciamento-recursos-hardware-docker-e-como-instalar-pacotes-de-sistema-operacional-no-docker-machine\/",
            "date": "2016-03-20 06:22:00 +0000",
            "body": "Ol&aacute; pessoal!  Se quiser ir direto para a resposta a pergunta t&iacute;tulo, v&aacute; para essa parte do artigo. Primeiro eu vou contar por que precisei aprender a fazer isso.  De onde surgiu a necessidade?  Estava vendo os slides do Wellington Silva da apresenta&ccedil;&atilde;o Aplica&ccedil;&otilde;es 12 Fatores - Melhor com Docker que ele fez no Darkmira Tour PHP 2016, onde ele faz de forma exemplar as rela&ccedil;&otilde;es entre a metodologia 12 factor, da galera da Heroku, com o docker. Como estou cada dia mais conhecendo docker, me espantei quando ele mostrou dois comandos: docker run ... --memory=512M e docker update --memory=1GB ....  No mundo da virtualiza&ccedil;&atilde;o &eacute; normal pensar na defini&ccedil;&atilde;o da capacidade de Hardware (al&eacute;m dos Softwares e Sistema Operacional) que ser&atilde;o reservadas para aquela m&aacute;quina virtual. Costumamos fazer ou na interface gr&aacute;fica da ferramenta, ou ent&atilde;o via scripts diretos na CLI do hypervisor ou ainda por meio do Vagrant. Assim, quando pensamos na VM j&aacute; temos essa defini&ccedil;&atilde;o do &quot;tamanho dos recursos&quot;: quantidade de CPUs, quantidade de mem&oacute;ria RAM, quantidade de disco etc.  J&aacute; no mundo do docker sempre percebi que o foco &eacute; mais na aplica&ccedil;&atilde;o e servi&ccedil;os rodando dentro do container. Pensei: mas no Dockerfile nunca vi serem feitos essas defini&ccedil;&otilde;es de recurso: o arquivo geralmente &eacute; feito pensando mais no c&oacute;digo e instala&ccedil;&otilde;es da camada de software (fa&ccedil;o um paralelo aqui com o Vagrantfile, onde as duas situa&ccedil;&otilde;es podem ser tratatadas). Fui buscar mais informa&ccedil;&otilde;es, e achei duas fontes interessantes. A primeira &eacute; o artigo Resource management in Docker, onde Marek Goldmann faz uma vis&atilde;o geral sobre cgroups e como &eacute; poss&iacute;vel gerenciar CPU, mem&oacute;ria e disco nos containers.  O segundo foi um reposit&oacute;rio no GitHub, o contendo o Dockerfile da imagem docker agileek\/cpuset-test para que fosse poss&iacute;vel testar de forma r&aacute;pida pelo menos a flag --cpuset-cpus do comando docker run. No v&iacute;deo de apresenta&ccedil;&atilde;o da imagem o neg&oacute;cio &eacute; quase instant&acirc;neo: ele roda o container e as cpus come&ccedil;am a fritar. E usando a flag --cpuset-cpus, voc&ecirc; s&oacute; faz uma parte delas fritar, e tudo &eacute; poss&iacute;vel acompanhar por exemplo pelo htop.  &Eacute; isso que fui fazer. Como a imagem &eacute; bem pequena (1.5MB apenas, &eacute; s&oacute; um bin&aacute;rio em golang, ele roda o cpuburn l&aacute; dentro), tudo parecia que ia ser muito r&aacute;pido.  Como estou usando o OS X, primeiro subi minha docker-machine:  $ dockerup  # &eacute; um alias de docker-machine start dev &amp;&amp; eval &quot;$(docker-machine env dev)&quot; # e s&oacute; criei isso pois sou f&atilde; de Vagrant e do &quot;vagrant up&quot; ;-)   Em seguida j&aacute; fui rodar o docker run e, como n&atilde;o tinha a imagem ainda na minha m&aacute;quina, ela foi baixada e j&aacute; come&ccedil;ou a executar:  $ docker run -it --rm --cpuset-cpus=0,1 agileek\/cpuset-test  Unable to find image 'agileek\/cpuset-test:latest' locally latest: Pulling from agileek\/cpuset-test acc9a6499096: Pull complete 97ff6384ee3c: Pull complete Digest: sha256:b1217ec9cf830819904b1e79c1b9c5acad07235bc8576bfb634d840d36995bed Status: Downloaded newer image for agileek\/cpuset-test:latest Burning 8 CPUs\/cores 10 seconds 20 seconds 30 seconds 40 seconds ...   Abri um outro terminal, e como tenho um i7 quadcore (8 cores hyperthreading), fui olhar o htop para monitorar o uso de CPU. Ali em cima tinha pedido para ele fritar dois dos n&uacute;cleos, o 0 e o 1:      U&eacute;? N&atilde;o apareceu o que eu estava esperando. Ele parecia estar fazendo o stress em quatro cores, e n&atilde;o nos dois como eu havia pedido.  Docker-machine: VM que permite usar docker em sistemas n&atilde;o-Linux  A&iacute; lembrei que, por estar no OS X, o docker engine\/daemon (que &eacute; afetado pelo docker run) n&atilde;o est&aacute; diretamente no meu computador: ele est&aacute; dentro do docker-machine. O docker-machine &eacute; a m&aacute;quina virtual oficial do docker para possamos usar os containers de Linux (sobre o qual o docker &eacute; baseado) em outras sistemas operacionais.  A exist&ecirc;ncia dessa camada ficou mais clara quando vi qual processo que estava consumindo aquele monte de CPU: era o VBoxHeadless, do VirtualBox, justo o hypervisor onde a VM est&aacute; rodando. Fui at&eacute; olhar como estava a configura&ccedil;&atilde;o da VM via GUI:    Acessando a VM via docker-machine ssh  Tranquilo ent&atilde;o, era s&oacute; entrar na VM e rodar o htop por l&aacute;. Meu foco era apenas enxergar como que se refleteria o ajuste de CPUs no sistema operacional hospedeiro do docker (para quem usa Linux, ele pr&oacute;prio, para outros SOs, o Linux da VM do docker-machine) depois do comando docker run e a flag `--cpuset.  $ docker-machine ssh dev                          ##         .                   ## ## ##        ==                ## ## ## ## ##    ===            \/&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\\___\/ ===       ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ \/  ===- ~~~            \\______ o           __\/              \\    \\         __\/               \\____\\_______\/  _                 _   ____     _            _ | |__   ___   ___ | |_|___ \\ __| | ___   ___| | _____ _ __ | '_ \\ \/ _ \\ \/ _ \\| __| __) \/ _` |\/ _ \\ \/ __| |\/ \/ _ \\ '__| | |_) | (_) | (_) | |_ \/ __\/ (_| | (_) | (__|   &lt;  __\/ | |_.__\/ \\___\/ \\___\/ \\__|_____\\__,_|\\___\/ \\___|_|\\_\\___|_| Boot2Docker version 1.10.3, build master : 625117e - Thu Mar 10 22:09:02 UTC 2016 Docker version 1.10.3, build 20f81dd docker@dev:~$   L&aacute; dentro fui rodar o htop e apareceu comando n&atilde;o encontrado:  docker@dev:~$ htop  -sh: htop: not found   Tudo bem: fui tentar instalar o htop via apt-get ou yum, mas nenhum dos dois tamb&eacute;m estavam dispon&iacute;veis:  docker@dev:~$ apt-get install htop  -sh: apt-get: not found  docker@dev:~$ yum install htop  -sh: yum: not found   O que acontece &eacute; que &eacute; a distribui&ccedil;&atilde;o Linux da docker-machine n&atilde;o &eacute; nem Debian-like (que costumam usar apt-get) nem RedHat-like (que costumam usar yum). A distribui&ccedil;&atilde;o Linux que &eacute; utilizada &eacute; a Tiny Core Linux, que usa como gerenciador de pacotes a ferramenta tce-load (segue lista contendo v&aacute;rios dos pacotes oficiais).  Ent&atilde;o, para finalmente completar a instala&ccedil;&atilde;o foi s&oacute; rodar:  docker@dev:~$ tce-load -wi htop  htop.tcz.dep OK Downloading: ncurses.tcz Connecting to repo.tinycorelinux.net (89.22.99.37:80) ncurses.tcz          100% |***************************************************|   196k  0:00:00 ETA ncurses.tcz: OK Downloading: htop.tcz Connecting to repo.tinycorelinux.net (89.22.99.37:80) htop.tcz             100% |***************************************************|   116k  0:00:00 ETA htop.tcz: OK   E agora, abrir o htop:  docker@dev:~$ htop  Error opening terminal: xterm-256color.   Puxa, mais um erro. Agora o problema era com a v&aacute;riavel de ambiente $TERM. Foi s&oacute; mud&aacute;-la para xterm da seguinte forma:  $ export TERM=xterm   E agora, de uma vez por todas, abrir o htop, e tudo funcionar!  docker@dev:~$ htop  # HTOP instalado via gerenciador de pacotes tce-load   Teste efetivo do docker run com a flag --cpuset-cpus  Agora sim, consegui testar  aquela imagem docker com flag --cpuset-cpus do docker run e ver tudo acontecendo:              Considera&ccedil;&otilde;es finais  Primeiro, o docker est&aacute; me fazendo aprender um monte de coisas, e isso &eacute; muito bom!  Aqui, vimos primeiro que &eacute; poss&iacute;vel sim fazer o gerenciamento de recursos em n&iacute;vel de hardware nos containers usando flags nos comandos que interagem com o docker engine\/daemon, por exemplo o docker run --cpuset-cpus.  Em seguida, percebemos que se existir uma camada de VM, os recursos que est&atilde;o sendo gerenciados (como CPU, mem&oacute;ria ou disco) n&atilde;o s&atilde;o da m&aacute;quina hospedeira diretamente, mas sim dessa m&aacute;quina virtual.  Tamb&eacute;m que a distribui&ccedil;&atilde;o Linux usada na VM criada pelo docker-machine &eacute; a Tiny Core Linux, que usa como gerenciador de pacotes o tce-load, e se for preciso, conseguimos fazer as instala&ccedil;&otilde;es necess&aacute;rias.  Sobre a instala&ccedil;&atilde;o de pacotes nesse sistema operacional, um ponto importante &eacute; que tudo que voc&ecirc; fez ser&aacute; perdido na pr&oacute;xima atualiza&ccedil;&atilde;o do docker-machine, que entende quaisquer altera&ccedil;&otilde;es no SO feita pelo usu&aacute;rio como ef&ecirc;meras, trazendo sempre uma nova vers&atilde;o com apenas os pacotes de f&aacute;brica. O que isso tudo quer dizer? Anote bem os comandos que voc&ecirc; fizer quando usar o tce-load para poder reutiliz&aacute;-los no futuro, quem sabe num Gist.  &Eacute; isso a&iacute;, at&eacute; a pr&oacute;xima!    Este artigo foi publicado originalmente em RogerioPradoJ.com.",
            "description": "Ol&aacute; pessoal!  Se quiser ir direto para a resposta a pergunta t&iacute;tulo, v&aacute; para essa parte do artigo. Primeiro eu vou contar por que precisei aprender a fazer isso.  De onde surgiu a necessidade?  Estava vendo os slides do Wellington Silva da apresenta&ccedil;&atilde;o Aplica&ccedil;&otilde;es 12 Fatores - Mel..."
        },
        {
            "title": "Resultado da a\u00e7\u00e3o #30contribs\/phpx2016 - Eu contribuo e quero ir na faixa para a PHP Experience 2016",
            "url": "\/2016\/03\/14\/resultado-da-acao-30contribs-phpx-eu-contribuo-e-quero-ir-na-faixa-para-a-php-experience-2016\/",
            "date": "2016-03-14 05:00:00 +0000",
            "body": "Fonte: http:\/\/phpexperience2016.imasters.com.br\/  No dia 07 de mar&ccedil;o de 2016 foi lan&ccedil;ada a a&ccedil;&atilde;o #30contribs\/phpx2016. Nesse dia o Hussani Oliveira e o Rogerio Prado de Jesus, evangelistas do PHPSP, derem o passo inicial para incentivar mais pessoas a contribuir com projetos open source, na pegada do #30contribs e do saudoso #SouPHPSP!  A a&ccedil;&atilde;o, que incentivou 60+ contribui&ccedil;&otilde;es para projetos open source num per&iacute;odo de duas semanas, sorteou ingressos para o iMasters PHP Experience 2016, e aqui nos mostramos o resultado:    !function(e,t,n,s){var i=&quot;InfogramEmbeds&quot;,o=e.getElementsByTagName(t),d=o[0],a=\/^http:\/.test(e.location)?&quot;http:&quot;:&quot;https:&quot;;if(\/^\\\/{2}\/.test(s)&amp;&amp;(s=a+s),window[i]&amp;&amp;window[i].initialized)window[i].process&amp;&amp;window[i].process();else if(!e.getElementById(n)){var r=e.createElement(t);r.async=1,r.id=n,r.src=s,d.parentNode.insertBefore(r,d)}}(document,&quot;script&quot;,&quot;infogram-async&quot;,&quot;\/\/e.infogr.am\/js\/dist\/embed-loader-min.js&quot;); Infogr.am graphic: https:\/\/infogr.am\/30contribsphpx20166  Regulamento  Para participar, o pessoal precisou precisa acessar um formul&aacute;rio no Google Forms e concordar com algumas regras foram definidas, dentre elas:   preencher um formul&aacute;rio com dados necess&aacute;rios para inscri&ccedil;&atilde;o no evento e verifica&ccedil;&atilde;o da quantidade de Pull Requests no per&iacute;odo cada Pull Request aberto no GitHub no per&iacute;odo de 01\/03 at&eacute; 13\/03\/2016 (hor&aacute;rio de Bras&iacute;lia) geraria um t&iacute;quete. Quanto mais t&iacute;quetes tivesse, maior a chance de ser sorteado. qualquer projeto open source no GitHub valeria! metade dos ingressos seriam para pessoas que se identificassem como mulheres e metade para homens (se um dos g&ecirc;neros n&atilde;o tivesse participantes com contribui&ccedil;&otilde;es v&aacute;lidas, os ingressos ser&atilde;o direcionados para o p&uacute;blico geral).   Agradecimentos  Tivemos um apoio muito forte da comunidade compartilhando a iniciativa, e temos muito que agradecer pelo sucesso da empreitada! Aqui tamb&eacute;m vai um agradecimento especial para o Elton Minetto, respons&aacute;vel pela newsletter A semana: PHP que nos divulgou na edi&ccedil;&atilde;o 74 e nos colocou em contato com a Umbler, que forneceu mais alguns ingressos para a a&ccedil;&atilde;o; ao Rodrigo &quot;Pokemaobr&quot; Cardoso que ajudou demais o Hussani e eu na organiza&ccedil;&atilde;o e ao Rafael Reis que deu um tapa no layout do site da a&ccedil;&atilde;o.    Evolu&ccedil;&atilde;o  O infogr&aacute;fico abaixo mostra a evolu&ccedil;&atilde;o das contribui&ccedil;&otilde;es no per&iacute;odo.    !function(e,t,n,s){var i=&quot;InfogramEmbeds&quot;,o=e.getElementsByTagName(t),d=o[0],a=\/^http:\/.test(e.location)?&quot;http:&quot;:&quot;https:&quot;;if(\/^\\\/{2}\/.test(s)&amp;&amp;(s=a+s),window[i]&amp;&amp;window[i].initialized)window[i].process&amp;&amp;window[i].process();else if(!e.getElementById(n)){var r=e.createElement(t);r.async=1,r.id=n,r.src=s,d.parentNode.insertBefore(r,d)}}(document,&quot;script&quot;,&quot;infogram-async&quot;,&quot;\/\/e.infogr.am\/js\/dist\/embed-loader-min.js&quot;); Infogr.am graphic: https:\/\/infogr.am\/30contribsphpx2016  Sorteio e Ganhadores  O sorteio dos ingressos foi feito alguns instantes depois do fim da a&ccedil;&atilde;o, na madrugada de 14 de mar&ccedil;o de 2016, e o v&iacute;deo voc&ecirc;s podem ver aqui:    Youtube Video: https:\/\/www.youtube.com\/watch?v=UhH_9-9cvP4  No total foram 9 ganhadores, segue lista abaixo desses feras que seguiram o mote da a&ccedil;&atilde;o, &quot;Eu contribuo e quero ir na faixa para a PHP Experience 2016&quot;:           Nome     GitHub     Url para contribs           Eder Ribeiro da Silva     https:\/\/github.com\/ederribeiro     https:\/\/github.com\/search?utf8=%E2%9C%93&amp;q=author%3Aederribeiro+type%3Apr+created%3A2016-03-01T00%3A00%3A00-03%3A00..2016-03-11T23%3A59%3A59-03%3A00&amp;type=Issues&amp;ref=searchresults           Erick Emiliano     https:\/\/github.com\/Emiliano     https:\/\/github.com\/search?utf8=%E2%9C%93&amp;q=author%3AEmiliano+type%3Apr+created%3A2016-03-01T00%3A00%3A00-03%3A00..2016-03-11T23%3A59%3A59-03%3A00&amp;type=Issues&amp;ref=searchresults           Daniel Ferreira Gimenes     https:\/\/github.com\/danizord     https:\/\/github.com\/search?utf8=%E2%9C%93&amp;q=author%3Adanizord+type%3Apr+created%3A2016-03-01T00%3A00%3A00-03%3A00..2016-03-11T23%3A59%3A59-03%3A00&amp;type=Issues&amp;ref=searchresults           Daniel Pinto     https:\/\/github.com\/Cayan     https:\/\/github.com\/search?utf8=%E2%9C%93&amp;q=author%3ACayan+type%3Apr+created%3A2016-03-01T00%3A00%3A00-03%3A00..2016-03-11T23%3A59%3A59-03%3A00&amp;type=Issues&amp;ref=searchresults           Ricardo Fiorani     https:\/\/github.com\/ricardofiorani     https:\/\/github.com\/search?utf8=%E2%9C%93&amp;q=author%3Aricardofiorani+type%3Apr+created%3A2016-03-01T00%3A00%3A00-03%3A00..2016-03-11T23%3A59%3A59-03%3A00&amp;type=Issues&amp;ref=searchresults           Diego D. Lorenzetti     https:\/\/github.com\/diegolorenzetti     https:\/\/github.com\/search?utf8=%E2%9C%93&amp;q=author%3Adiegolorenzetti+type%3Apr+created%3A2016-03-01T00%3A00%3A00-03%3A00..2016-03-11T23%3A59%3A59-03%3A00&amp;type=Issues&amp;ref=searchresults           Daniel Silva Santos     https:\/\/github.com\/daniiell3     https:\/\/github.com\/search?utf8=%E2%9C%93&amp;q=author%3Adaniiell3+type%3Apr+created%3A2016-03-01T00%3A00%3A00-03%3A00..2016-03-11T23%3A59%3A59-03%3A00&amp;type=Issues&amp;ref=searchresults           Leandro Menezes dos Anjos     https:\/\/github.com\/silverwolfx10     https:\/\/github.com\/search?utf8=%E2%9C%93&amp;q=author%3Asilverwolfx10+type%3Apr+created%3A2016-03-01T00%3A00%3A00-03%3A00..2016-03-11T23%3A59%3A59-03%3A00&amp;type=Issues&amp;ref=searchresults           marcos paulo de souza santana     https:\/\/github.com\/marcosptf     https:\/\/github.com\/search?utf8=%E2%9C%93&amp;q=author%3Amarcosptf+type%3Apr+created%3A2016-03-01T00%3A00%3A00-03%3A00..2016-03-11T23%3A59%3A59-03%3A00&amp;type=Issues&amp;ref=searchresults       Quem ver o v&iacute;deo deve perceber que teriam mais que 9 pessoas. Esse &quot;excedente&quot; &eacute; o pessoal que j&aacute; tinha ingresso ou que preferiu n&atilde;o participar da disputa pelas entradas, mas queria mostrar apoio a iniciativa com as contribs. Segue a lista desse pessoal abaixo:           Nome     GitHub     Url para contribs           ROGERIO PRADO DE JESUS     https:\/\/github.com\/rogeriopradoj     https:\/\/github.com\/search?utf8=%E2%9C%93&amp;q=author%3Arogeriopradoj+type%3Apr+created%3A2016-03-01T00%3A00%3A00-03%3A00..2016-03-11T23%3A59%3A59-03%3A00&amp;type=Issues&amp;ref=searchresults           Bruno Ricardo Siqueira     https:\/\/github.com\/brunoric     https:\/\/github.com\/search?utf8=%E2%9C%93&amp;q=author%3Abrunoric+type%3Apr+created%3A2016-03-01T00%3A00%3A00-03%3A00..2016-03-11T23%3A59%3A59-03%3A00&amp;type=Issues&amp;ref=searchresults           Rodrigo Prado de Jesus     https:\/\/github.com\/royopa     https:\/\/github.com\/search?utf8=%E2%9C%93&amp;q=author%3Aroyopa+type%3Apr+created%3A2016-03-01T00%3A00%3A00-03%3A00..2016-03-11T23%3A59%3A59-03%3A00&amp;type=Issues&amp;ref=searchresults           Hussani Oliveira     https:\/\/github.com\/hussani     https:\/\/github.com\/search?utf8=%E2%9C%93&amp;q=author%3Ahussani+type%3Apr+created%3A2016-03-01T00%3A00%3A00-03%3A00..2016-03-11T23%3A59%3A59-03%3A00&amp;type=Issues&amp;ref=searchresults           Rodrigo &quot;Pokemaobr&quot; Cardoso     https:\/\/github.com\/pokemaobr     https:\/\/github.com\/search?utf8=%E2%9C%93&amp;q=author%3Apokemaobr+type%3Apr+created%3A2016-03-01T00%3A00%3A00-03%3A00..2016-03-11T23%3A59%3A59-03%3A00&amp;type=Issues&amp;ref=searchresults           Rafael Reis     https:\/\/github.com\/reisraff     https:\/\/github.com\/search?utf8=%E2%9C%93&amp;q=author%3Areisraff+type%3Apr+created%3A2016-03-01T00%3A00%3A00-03%3A00..2016-03-11T23%3A59%3A59-03%3A00&amp;type=Issues&amp;ref=searchresults       Quero Contribuir!  Durante o per&iacute;odo da a&ccedil;&atilde;o, foi criada uma wiki com v&aacute;rios materiais de apoio, entre eles o Slack, canal de chat, do PHPSP. Acredito que esses materiais e a abertura para tirar d&uacute;vidas foi importante para o processo na busca de retirar um pouco da barreira que possa existir para que mais pessoas comecem a contribuir nesse mundo do software livre.    &Eacute; isso a&iacute; pessoal, nos vemos em breve nesse mundo da comunidade com mais contribui&ccedil;&atilde;o para projetos open source!    Este artigo foi publicado originalmente em RogerioPradoJ.com.",
            "description": "Fonte: http:\/\/phpexperience2016.imasters.com.br\/  No dia 07 de mar&ccedil;o de 2016 foi lan&ccedil;ada a a&ccedil;&atilde;o #30contribs\/phpx2016. Nesse dia o Hussani Oliveira e o Rogerio Prado de Jesus, evangelistas do PHPSP, derem o passo inicial para incentivar mais pessoas a contribuir com projetos open..."
        },
        {
            "title": "Feliz anivers\u00e1rio, Pai, onde estiver",
            "url": "\/2015\/12\/08\/feliz-aniversario-pai-onde-estiver\/",
            "date": "2015-12-08 13:29:54 +0000",
            "body": "Na noite de quarta-feira, dia 18 de novembro de 2015, o mundo ficou um pouco mais triste, mas ganhou mais um anjo olhando por n&oacute;s: Wanderlei de Jesus.   Rogerio e Pai, 2015-11-02  E hoje, 08 de dezembro de 2015, seria seu anivers&aacute;rio de 61 anos. Pai, feliz anivers&aacute;rio para voc&ecirc;, onde estiver!  Lembra da reza que nos ensinou para seus filhos (para mim, Rog&eacute;rio, para o Rodrigo e para o Rafael), que criamos juntos quanto &eacute;ramos pequenos? Pode ter certeza que seus netos tamb&eacute;m v&atilde;o conhecer. O L&eacute;o j&aacute; ouviu algumas vezes:  Papai do c&eacute;u D&ecirc; a paz Ao mundo Am&eacute;m  Jeov&aacute; proteja todo mundo E todos n&oacute;s Am&eacute;m  Obrigado por ter acabado a guerra Fa&ccedil;a com que a gente n&atilde;o fique doente Nem fique velhinho Nem que o mundo acabe Nem que a gente morra nunca Nem que os bandidos atacem nossa casa Nem de ningu&eacute;m Am&eacute;m  Pai nosso que estais no c&eacute;u Santificado seja o vosso nome Venha a n&oacute;s o vosso reino Seja feita a nossa vontade Assim na terra como no c&eacute;u O p&atilde;o nosso de cada dia nos dai hoje Perdoai as nossas ofensas Assim como n&oacute;s perdoamos a quem nos tem ofendido E n&atilde;o nos deixei cair em tenta&ccedil;&atilde;o Mas livrai-nos do mal Am&eacute;m  Santo anjo do senhor Meu zeloso guardador Se a ti me confiou A piedade &quot;de mim nascente&quot; Me reje me guarde me governe me ilumine Am&eacute;m   Aqui est&atilde;o alguma m&uacute;sicas que escolhemos para lembrar de voc&ecirc;, e nos reconfortar tamb&eacute;m. Tomara que voc&ecirc; goste!    F&aacute;bio Jr. - Pai: https:\/\/www.youtube.com\/watch?v=cKEkePEpcp0    Milton Nascimento - Travessia: https:\/\/www.youtube.com\/watch?v=kDe3qOhrJLo    C&aacute;ssia Eller - Por enquanto: https:\/\/www.youtube.com\/watch?v=lYfq5vARrVw    Pai, saiba que estamos bem!   Pai, Rog&eacute;rio, Rafael, Rodrigo, M&atilde;e  Obrigado, pela vida!",
            "description": "Na noite de quarta-feira, dia 18 de novembro de 2015, o mundo ficou um pouco mais triste, mas ganhou mais um anjo olhando por n&oacute;s: Wanderlei de Jesus.   Rogerio e Pai, 2015-11-02  E hoje, 08 de dezembro de 2015, seria seu anivers&aacute;rio de 61 anos. Pai, feliz anivers&aacute;rio para voc&ecirc;,..."
        },
        {
            "title": "[en] Becoming a Contributor, Open Sourcer and Beyond: Talk on TDC 2014 in PHP Track",
            "url": "\/2015\/11\/04\/en-becoming-a-contributor-open-sourcer-and-beyond-talk-on-tdc-2014-in-php-track\/",
            "date": "2015-11-04 15:01:04 +0000",
            "body": "Update: February 25th, 2016, PHPSP UG organized an event supported by UOL, I spoke there again, and the presentation was completely recorded on video!  You can watch it [in Brazilian Portuguese]:    Youtube Video: https:\/\/youtu.be\/QU7Ne_-SJCc - Slides: http:\/\/www.slideshare.net\/rogeriopradoj\/becoming-a-contributor-open-sourcer-and-beyond-phpsp-uol    Hello, everyone!  On August 8, 2014 I gave a presentation on contributing with open source projects and software development communities as well, focusing on that OSS hosted on GitHub.   Image source: http:\/\/www.sourcinghacks.com\/    Want to read in Brazilian Portuguese? Go to: https:\/\/rogeriopradoj.com\/2015\/11\/04\/becoming-a-contributor-open-sourcer-and-beyond-palestra-do-tdc-2014-trilha-php\/    The talk was an overview of the subject, in a few minutes, showing that engagement with community and contributing with open source is possible for all of us, however it's a road which must be traveled.    Slides: https:\/\/www.slideshare.net\/rogeriopradoj\/becoming-a-contributor-open-sourcer-and-beyond  This road of contribution is made by several steps. The first one is the User, that one where you only &quot;uses&quot; the projects and the community. After that there is the Spectator\/Vouyer, when you start to get interested about the action around the projects but don't have the confidence to give your contributions in an active way yet. And by the time courage arrives, you go to the next level and become an effective contributor, for instance, send patches or new features to a project, or fixing documentation, or answering questions of people in some list etc, eventually seeing your contributions being utilized. It's a wonderful sensation when it happens!  And after several contributions to an specific project, then you'll probably be invited to be an Commiter, who has write access on a repository, being able to help the maintainer\/creator with code review and the decisions on how the software is going to evolve. For sure being invited and, besides, get this big responsibility is something  indescribable as good it is!  And someday you are going to start creating your own open source projects! It's quite possible you'll loudly shout &quot;It's alive!&quot; by the time it's working and published. Get &quot;your son&quot; online for people use, receive contributions and be recognized by this is awesome, priceless.  How we make the wheel spins? It's possible, it's the &quot;go beyond&quot;! It's get involved more with community in every possible way . It's send talk proposals to events and be there giving your speech, face to face. It's been at conferences, congresses and user group meetups as well, enjoying everything that is available there (not only the talks but networking with other industry professionals). It's write on blogs in order to share what you are learning. It's get together with local communities in person in your city, online as well, and help to organize events where you can.  And, the most important thing, don't lose any opportunity on helping new people who want to get in this amazing world of software development communities and open source!  Don't you know where to start or need some help? That's ok, on GitHub there are some projects I contribute for besides some of my own, check it out. And if you want to talk to me directly, it's fine also: go to https:\/\/rogeriopradoj.com\/about\/ and pick the best contact channel, right?   &quot;Contributing is a road. Help, say thanks, and find yours.&quot;   --Rogerio Prado de Jesus, August 8, 2014   In time, the talk was recorded (Brazilian Portuguese only), the video is here:    Youtube Video: https:\/\/youtu.be\/Xt5JqpxvOzA  See you soon, with more contributions, right? ;-) Bye!    This article was published originally on RogerioPradoJ.com.",
            "description": "Update: February 25th, 2016, PHPSP UG organized an event supported by UOL, I spoke there again, and the presentation was completely recorded on video!  You can watch it [in Brazilian Portuguese]:    Youtube Video: https:\/\/youtu.be\/QU7Ne_-SJCc - Slides: http:\/\/www.slideshare.net\/r..."
        },
        {
            "title": "Becoming a Contributor, Open Sourcer and Beyond: Palestra do TDC 2014 na Trilha PHP",
            "url": "\/2015\/11\/04\/becoming-a-contributor-open-sourcer-and-beyond-palestra-do-tdc-2014-trilha-php\/",
            "date": "2015-11-04 03:04:45 +0000",
            "body": "Atualiza&ccedil;&atilde;o: Em 25\/02\/2016 o PHPSP fez um evento com apoio do UOL, palestrei l&aacute; de novo, e a apresenta&ccedil;&atilde;o foi gravada por inteiro!  Voc&ecirc; pode assistir aqui:    Youtube Video: https:\/\/youtu.be\/QU7Ne_-SJCc - Slides: http:\/\/www.slideshare.net\/rogeriopradoj\/becoming-a-contributor-open-sourcer-and-beyond-phpsp-uol    Ol&aacute;, pessoal!  No dia 08 de agosto de 2014 fiz uma apresenta&ccedil;&atilde;o sobre contribui&ccedil;&atilde;o em projetos open source, e um pouco de comunidades de desenvolvimento tamb&eacute;m, com foco naqueles softwares de c&oacute;digo aberto que est&atilde;o hospedados no GitHub.   Fonte da imagem: http:\/\/www.sourcinghacks.com\/    Quer ler em ingl&ecirc;s? Acesse https:\/\/rogeriopradoj.com\/2015\/11\/04\/en-becoming-a-contributor-open-sourcer-and-beyond-talk-on-tdc-2014-in-php-track\/.    A palestra deu uma vis&atilde;o geral do assunto, em poucos minutos, mostrando que envolvimento com a comunidade e contribui&ccedil;&atilde;o com software livre &eacute; para todo mundo, mas &eacute; um caminho que precisa ser percorrido.    Slides: https:\/\/www.slideshare.net\/rogeriopradoj\/becoming-a-contributor-open-sourcer-and-beyond  Esse caminho da contribui&ccedil;&atilde;o passa por v&aacute;rios passos. O primeiro passo &eacute; o de Usu&aacute;rio, aquele onde voc&ecirc; apenas &quot;utiliza&quot; os projetos e a comunidade. Depois dele tem o Espectador\/Vouyer, quando voc&ecirc; come&ccedil;a a se interessar pelo movimento em torno dos projetos mas ainda n&atilde;o tem seguran&ccedil;a para enviar suas contribui&ccedil;&otilde;es de forma ativa. E na hora que a coragem chega, voc&ecirc; passa de fase e se torna um contribuidor efetivo, seja, por exemplo, mandando corre&ccedil;&otilde;es ou novas funcionalidades para um projeto, ou acertando documenta&ccedil;&atilde;o, ou respondendo perguntas de outras pessoas em lista etc., e vendo suas contribui&ccedil;&otilde;es serem aproveitadas. &Eacute; uma sensa&ccedil;&atilde;o maravilhosa quando isso acontece!  Depois de muitas contribui&ccedil;&otilde;es para um mesmo projeto &eacute; bem poss&iacute;vel que voc&ecirc; seja convidado a ser um &quot;Commiter&quot;, que &eacute; aquela pessoa que tem acesso de escrita num reposit&oacute;rio, podendo ajudar o mantenedor\/criador com a revis&atilde;o de c&oacute;digo e com o andamento futuro do software. Com certeza receber esse convite e, junto dele, uma grande dose de responsabilidade &eacute; algo indescrit&iacute;vel de t&atilde;o bom!  E vai chegar uma hora que voc&ecirc; come&ccedil;ar&aacute; a criar os seus pr&oacute;prios projetos de c&oacute;digo aberto! &Eacute; bem poss&iacute;vel que grite &quot;Est&aacute; vivo!&quot; quanto ele estiver funcionando e publicado! Colocar &quot;seu filho&quot; no ar para outras pessoas utilizarem, receber contribui&ccedil;&otilde;es e ser reconhecido por isso &eacute; bom demais, n&atilde;o tem pre&ccedil;o.  E tem jeito de fazermos essa roda continuar girando? Tem jeito sim, &eacute; o &quot;ir al&eacute;m&quot;! &Eacute; se envolver mais com a comunidade de todas as formas que puder. &Eacute; mandar sugest&otilde;es de palestras para eventos e dar as caras para palestrar. &Eacute; ir em confer&ecirc;ncias, congressos e tamb&eacute;m reuni&otilde;es de grupos de usu&aacute;rios e aproveitar tudo que &eacute; dispon&iacute;vel (n&atilde;o s&oacute; as palestras, mas tamb&eacute;m o networking com outros profissionais da &aacute;rea). &Eacute; escrever em blogs para compartilhar o que voc&ecirc; est&aacute; aprendendo. &Eacute; se juntar com as comunidades locais de forma presencial em sua cidade, al&eacute;m das online, e ajudar a organizar eventos, onde voc&ecirc; puder.  E, mais importante do que tudo, &eacute; n&atilde;o perder nenhuma oportunidade de ajudar novas pessoas que queiram entrar nesse mundo sensacional das comunidades de desenvolvimento de software e open source!  N&atilde;o sabe por onde come&ccedil;ar ou precisa de uma ajuda? Sem problemas, no GitHub tem alguns projetos que contribuo al&eacute;m de alguns meus pr&oacute;prios tamb&eacute;m, acessa l&aacute;. E se quiser falar direto comigo, tranquilo tamb&eacute;m: &eacute; s&oacute; ir no https:\/\/rogeriopradoj.com\/about\/ e escolher o melhor modo de contato, ok?   &quot;Contribui&ccedil;&atilde;o &eacute; um caminho.    Ajude, agrade&ccedil;a e busque o seu.&quot;  --Rogerio Prado de Jesus, 08 de agosto de 2014   Ah, o v&iacute;deo da grava&ccedil;&atilde;o da palestra &eacute; esse aqui:    Youtube Video: https:\/\/youtu.be\/Xt5JqpxvOzA  Nos vemos na pr&oacute;xima, com mais contribui&ccedil;&otilde;es, certo? ;-) At&eacute; l&aacute;!    Este artigo foi publicado originalmente em RogerioPradoJ.com.",
            "description": "Atualiza&ccedil;&atilde;o: Em 25\/02\/2016 o PHPSP fez um evento com apoio do UOL, palestrei l&aacute; de novo, e a apresenta&ccedil;&atilde;o foi gravada por inteiro!  Voc&ecirc; pode assistir aqui:    Youtube Video: https:\/\/youtu.be\/QU7Ne_-SJCc - Slides: http:\/\/www.slideshare.net\/rogeriopradoj\/becoming-a-contributor-ope..."
        },
        {
            "title": "Meu primeiro plugin para o Vagrant mostra a lista de IPs da VM! vagrant-ip-show",
            "url": "\/2015\/10\/08\/meu-primeiro-plugin-para-o-vagrant-mostra-a-lista-de-ips-da-vm-vagrant-ip-show\/",
            "date": "2015-10-08 05:59:37 +0000",
            "body": "Ol&aacute;, pessoal!  Passando r&aacute;pido aqui para falar que&nbsp;criei meu primeiro plugin para Vagrant: &eacute; o vagrant-ip-show.  Ele faz uma coisa muito simples: mostra os IPs de uma VM.     Ah, Rog&eacute;rio, mas porque um plugin para algo t&atilde;o simples? N&atilde;o tem jeito de fazer isso na m&atilde;o?   -- Algu&eacute;m por a&iacute; ;-)   Ent&atilde;o, tem uma s&eacute;rie de formas buscar essa informa&ccedil;&atilde;o. Voc&ecirc; poderia conectar na VM (vagrant ssh) e rodar um comando&nbsp;ifconfig. Ou ent&atilde;o olhar no seu Vagrantfile as configura&ccedil;&otilde;es de rede que tiver feito. Ou ainda, entrar na configura&ccedil;&atilde;o do Virtualbox (ou qual seja o provider que estiver usando) e&nbsp;tentar localizar a faixa de IPs que ele est&aacute; usando e partir da&iacute; para&nbsp;rodar no seu host alguns comandos de rede...  Caramba, quanta coisa! Mas se tem um jeito f&aacute;cil, porque n&atilde;o usar! Fui atr&aacute;s de uma linha m&aacute;gica, j&aacute; tratada para trazer&nbsp;apenas a listinha de IPs, &eacute; ela &eacute; essa:  $ ifconfig | grep 'inet addr:' | grep -v 127.0.0.1 | sed -e 's\/Bcast\/\/' | cut -d: -f2   No seu&nbsp;computador,&nbsp;voc&ecirc; poderia passar via vagrant ssh o comando direto para dentro da VM e receber o resultado assim:  $ vagrant ssh -- ifconfig | grep 'inet addr:' | grep -v 127.0.0.1 | sed -e 's\/Bcast\/\/' | cut -d: -f2   Mas o jeito mais f&aacute;cil, depois que o plugin est&aacute; instalado, &eacute; s&oacute; rodar esse comando aqui:  $ vagrant ip-show   Quer instalar o plugin? &Eacute; f&aacute;cil:  $ vagrant plugin install vagrant-ip-show   Depois disso voc&ecirc; pode usar o comando vagrant ip-show&nbsp;em qualquer um dos seus projetos.  Motiva&ccedil;&atilde;o   Mas vale a pena criar um plugin para o Vagrant? N&atilde;o d&aacute; muito trabalho?   -- Algu&eacute;m por a&iacute; ;-)   Agora estou enxergando uma pergunta mais interessante! No meu caso, criar um plugin para o Vagrant era um desafio, que at&eacute; que enfim consegui realizar. Ent&atilde;o sim, vale a pena! Sempre acompanhei o brasileiro&nbsp;F&aacute;bio Rehm&nbsp;criando uma porrada deles, e pensava: poxa, teria&nbsp;que ficar fera em Ruby antes de conseguir um dia criar um plugin... Mesmo estudando um monte sobre Vagrant e seus plugins, n&atilde;o parecia tarefa f&aacute;cil.    Youtube Video: https:\/\/youtu.be\/niQvLXI1z9I?t=3m14s    Mas acreditava que talvez pudessse ser igual como usar o Vagrant, que &eacute; constru&iacute;do em Ruby, mas voc&ecirc; pode us&aacute;-lo sem ter o m&iacute;nimo de profici&ecirc;ncia na linguagem. Se eu achasse um &quot;be-a-b&aacute;&quot; de como come&ccedil;ar, deveria conseguir. E, como disse, era um desafio e a necessidade que tive de descobrir os IP&nbsp;de uma VM mexeu comigo. Pensei: &eacute; isso, j&aacute;&nbsp;sei a necessidade. Se n&atilde;o houver nenhum plugin para isso, &eacute; esse que vou criar!  Na minha busca, achei apenas um plugin que n&atilde;o entregava o que precisava.    Infelizmente, ele trazia apenas um&nbsp;IP: o que estava&nbsp;configurado como&nbsp;hostonly na interface de rede do VirtualBox. E esse IP &eacute; geralmente o que n&atilde;o precisamos saber&nbsp;:-) . O que geralmente queremos s&atilde;o os IPs configurados como private_network ou public_network, sejam eles est&aacute;ticos ou recebidos por DHCP.&nbsp;O ifconfig\/ipconfig traz isso tudo para n&oacute;s, ent&atilde;o o meu plugin devia trazer pelo menos TODOS OS IPs.  Base te&oacute;rica  A&iacute; que o artigo&nbsp;How to Create a Simple Vagrant Plugin do Noppanit (Toy), que eu j&aacute; tinha lido alguns meses atr&aacute;s, veio como uma m&atilde;o na roda. Nele o autor fala sobre como fez num passo a passo para criar o plugin dele (se tem curiosidade, acesse l&aacute; que vale a pena :-) ). Dessa vez, como j&aacute; tinha com a necessidade clara, coloquei a m&atilde;o na massa e o projeto saiu!    Tive que ficar fera em Ruby?  Com certeza n&atilde;o. Mas tive que entender um pouquinho mais sobre o site&nbsp;http:\/\/rubygems.org\/, pois o&nbsp;plugin &eacute; publicado l&aacute; como uma Ruby Gem. Aprendi que aparentemente&nbsp;no mundo Ruby os badges de vers&otilde;es para projetos open source s&atilde;o liberados no&nbsp;https:\/\/badge.fury.io\/ (no mundo PHP, que estou mais acostumado, &eacute; comum usar o https:\/\/poser.pugx.org\/. Aprendi&nbsp;um pouco mais tamb&eacute;m no c&oacute;digo fonte do plugin&nbsp;vagrant-exec&nbsp;sobre como funciona um plugin um pouco mais elaborado. E tudo isso foi &oacute;timo!  Testem o plugin se acharem interessante, de&ecirc;m o feedback e fiquem &agrave; vontade para&nbsp;conversar sobre o assunto.  &Eacute; isso a&iacute;, pessoal, at&eacute; a pr&oacute;xima!    Este artigo foi publicado originalmente em RogerioPradoJ.com.",
            "description": "Ol&aacute;, pessoal!  Passando r&aacute;pido aqui para falar que&nbsp;criei meu primeiro plugin para Vagrant: &eacute; o vagrant-ip-show.  Ele faz uma coisa muito simples: mostra os IPs de uma VM.     Ah, Rog&eacute;rio, mas porque um plugin para algo t&atilde;o simples? N&atilde;o tem jeito de fazer isso na m&atilde;o?   -- Algu&eacute;m..."
        },
        {
            "title": "O guia para iniciantes sobre como contribuir com um projeto no GitHub",
            "url": "\/2015\/09\/28\/o-guia-para-iniciantes-sobre-como-contribuir-com-um-projeto-no-github\/",
            "date": "2015-09-28 21:39:18 +0000",
            "body": "Eu j&aacute; estou h&aacute;&nbsp;alguns meses tentando&nbsp;escrever um guia com dicas sobre como contribuir com open source nesse meu gist, mas at&eacute; agora n&atilde;o consegui terminar... Quem sabe daqui um tempo tenhamos essas Dicas de como contribuir com open source by @rogeriopradoj&nbsp;;-).  No entanto, em 24\/09\/2015&nbsp;o&nbsp;Rob Allen, mais conhecido no Twitter como&nbsp;@akrabat,&nbsp;escreveu um artigo sobre o tema:&nbsp;The beginner's guide to contributing to a GitHub project. Conversei com ele para pedir a autoriza&ccedil;&atilde;o para traduzir seu texto em portugu&ecirc;s do Brasil aqui no RogerioPradoJ.com, e a resposta foi positiva!   @rogeriopradoj Sure &mdash; Rob Allen (@akrabat) September 25, 2015    Ent&atilde;o vamos l&aacute;:    Este &eacute; um guia sobre como contribuir como um projeto open source que utiliza o GitHub. Ele &eacute; baseado principalmente no&nbsp;que acompanhei sobre a forma como operam o Zend Framework, o Slim Framework e o joind.in. No entanto, esse &eacute; um guia gen&eacute;rico, sendo assim, leia o README de seus projetos para ver o que for espec&iacute;fico.  TL;DR  V&aacute; direto para o resumo.  Passo 1: Defina uma c&oacute;pia de trabalho (working copy) no seu computador  Primeiramente, voc&ecirc; precisa de um fork local do projeto na sua m&aacute;quina, v&aacute; direto no GitHub e aperte o bot&atilde;o &quot;fork&quot;. Ele criar&aacute;&nbsp;uma c&oacute;pia do reposit&oacute;rio em sua pr&oacute;pria conta do GitHub e voc&ecirc; ver&aacute;&nbsp;um aviso de que ele foi forkado abaixo do nome do projeto:    Agora, voc&ecirc; precisa de uma c&oacute;pia&nbsp;local. Procure&nbsp;por&nbsp;&quot;HTTPS&nbsp;clone URL&quot; ou &quot;SSH clone URL&quot;&nbsp;do lado direito do site e use esse endere&ccedil;o para&nbsp;fazer o clone local usando um terminal:  $ git clone git@github.com:akrabat\/zend-validator.git   O resultado ser&aacute; parecido com esse aqui:    Entre no diret&oacute;rio do novo projeto:  $ cd zend-validator   Por fim, voc&ecirc; precisa definir um novo remoto (remote) apontando para o projeto original. Dessa forma, voc&ecirc; consegue&nbsp;trazer as mudan&ccedil;as e coloc&aacute;-las dentro de sua c&oacute;pia local. Acesse o link do reposit&oacute;rio original - ele est&aacute; marcado com &quot;Forked from&quot; no topo da p&aacute;gina do GitHub. Isso vai te levar para a p&aacute;gina principal do GitHub do projeto,&nbsp;onde voc&ecirc; encontra&nbsp;a &quot;HTTPS&nbsp;clone URL&quot; ou a &quot;SSH clone URL&quot; e deve us&aacute;-la para criar o novo remoto, que chamaremos de upstream.  $ git remote add upstream git@github.com:zendframework\/zend-validator.git   Agora voc&ecirc;&nbsp;tem dois remotos para esse projeto no disco:   o origin&nbsp;que aponta para seu fork do projeto no GitHub. Voc&ecirc; tem acesso de leitura e grava&ccedil;&atilde;o nesse remoto o upstream que aponta para o reposit&oacute;rio principal do projeto no GitHub. Voc&ecirc; s&oacute; tem acesso de leitura nesse remoto.   Passo 2:&nbsp;Fa&ccedil;a suas modifica&ccedil;&otilde;es  Essa &eacute; a parte divertida onde voc&ecirc; come&ccedil;a a contribuir com o projeto.&nbsp;Em geral, &eacute; melhor come&ccedil;ar arrumando um problema&nbsp;que&nbsp;est&aacute; te atrapalhando ou algum bug que&nbsp;voc&ecirc; encontrou no issue tracker do projeto. Se estiver procurando um lugar para come&ccedil;ar, v&aacute;rios projetos usam a marca&ccedil;&atilde;o&nbsp;&quot;easy pick&quot; label&nbsp;(ou alguma varia&ccedil;&atilde;o) para indicar que a issue pode ser resolvida por algu&eacute;m novo no projeto.  Branch!  A regra n&uacute;mero um &eacute; colocar cada peda&ccedil;o do seu trabalho em seu pr&oacute;prio branch. Se o projeto estiver usando o&nbsp;git-flow, ele ter&aacute; tanto um&nbsp;branch master&nbsp;quanto um branch develop. A regra padr&atilde;o &eacute; que se voc&ecirc; estiver consertando um bug, voc&ecirc; criar&aacute; um branch a partir do master, e se voc&ecirc; estiver adicionando uma nova funcionalidade, criar&aacute; um branch a partir do develop. Se o projeto tiver apenas o branch master, &eacute; de l&aacute; que voc&ecirc; criar&aacute; o branch novo. Alguns projetos, como o Slim, usam os nomes dos branches baseadas em um n&uacute;mero de vers&atilde;o (2.x e 3.x na situa&ccedil;&atilde;o deles). Nesse caso, escolha o branch que for relevante.  Neste exemplo, vamos supor que voc&ecirc; est&aacute; arrumando um bug no zend-validator, ent&atilde;o vamos fazer um branch a partir do master:  $ git checkout master $ git pull upstream master &amp;&amp; git push origin master $ git checkout -b hotfix\/readme-update  Primeiramente, vamos garantir que estamos no branch master. Dessa forma o&nbsp;comando `git pull` ir&aacute; sincronizar nossa c&oacute;pia local com o projeto upstream e &nbsp;o `git push` ir&aacute; sincroniz&aacute;-lo com nosso projeto forkado no GitHub.&nbsp;Por fim criamos nosso novo branch. Voc&ecirc; pode nomear o branch como quiser, mas ajuda se o nome for significativo.&nbsp;Incluir o n&uacute;mero da issue tamb&eacute;m &eacute; &uacute;til. Se o projeto usar o git-flow tal qual o zend-validator, existem conven&ccedil;&otilde;es de nomenclatura&nbsp;para prefixar os branches com &quot;hotfix\/&quot; ou &quot;feature\/&quot;.  Agora voc&ecirc; pode fazer&nbsp;suas altera&ccedil;&otilde;es.  Tenha certeza que voc&ecirc; apenas arrume o c&oacute;digo onde que estiver trabalhando. N&atilde;o&nbsp;ceda &agrave; tenta&ccedil;&atilde;o de arrumar outras coisas&nbsp;que for achando durante suas altera&ccedil;&otilde;es pois assim seu PR (Pull Request) provavelmente ser&aacute; rejeitado. Certifique-se que voc&ecirc; fa&ccedil;a commits em blocos l&oacute;gicos. Cada uma das mensagens de commit deve ser sensata. Leia o artigo do Tim Pope&nbsp;[A Note About Git Commit Messages](http:\/\/tbaggery.com\/2008\/04\/19\/a-note-about-git-commit-messages.html)&nbsp;(ou, se preferir em portugu&ecirc;s do Brasil, [desde 2011 em RogerioPradoJ.com:&nbsp;Uma Nota Sobre as Mensagens do Git Commit](http:\/\/rogeriopradoj.com\/2011\/11\/29\/uma-nota-sobre-as-mensagens-do-git-commit\/)).  ## Passo&nbsp;3: Crie o&nbsp;PR (Pull Request)  Para criar um PR, voc&ecirc; precisa fazer o push de seu branch para o remoto *origin* e&nbsp;depois apertar alguns bot&otilde;es no GitHub.  Para fazer o push de um branch novo:    $ git push -u origin hotfix\/readme-update ```  O comando cria um branch em&nbsp;seu projeto no GitHub. A&nbsp;flag -u faz a amarra&ccedil;&atilde;o desse branch com seu remoto, assim, no futuro, voc&ecirc; pode simplesmente digitar git push origin.  Volte ao navegador e acesse o fork do seu projeto&nbsp;(https:\/\/github.com\/akrabat\/zend-validator no meu caso) e voc&ecirc; ver&aacute; que seu novo branch est&aacute; listado no topo com um conveniente bot&atilde;o&nbsp;&quot;Compare &amp; pull request&quot;:    V&aacute; em frente e aperte o bot&atilde;o!  Se voc&ecirc; vir uma caixa amarela como essa:    Clique&nbsp;no link que&nbsp;te&nbsp;levar&aacute; ao&nbsp;arquivo CONTRIBUTING do projeto e o leia! Ele cont&eacute;m informa&ccedil;&atilde;o valiosa sobre como trabalhar com a base de c&oacute;digo do projeto e ajudar&aacute; para&nbsp;que sua contribui&ccedil;&atilde;o seja aceita.  Na p&aacute;gina a seguir&nbsp;assegure que o &quot;base fork&quot; aponta para o reposit&oacute;rio e para o branch correto. Ent&atilde;o certifique-se de fornecer um t&iacute;tulo bom e sucinto para seu pull request e explique porque voc&ecirc; o criou na caixa de descri&ccedil;&atilde;o.&nbsp;Adicione todos os n&uacute;meros de issue&nbsp;caso os tenha.    Se voc&ecirc; rolar a tela um pouco, ver&aacute; um diff das suas altera&ccedil;&otilde;es. Verifique mais de uma vez se ele cont&eacute;m o que era esperado.  Quando estiver satisfeito, aperte o bot&atilde;o&nbsp;&quot;Create pull request&quot; e voc&ecirc;&nbsp;ter&aacute; terminado.  Passo&nbsp;4: Revis&atilde;o dos&nbsp;mantenedores  Para que seu trabalho seja&nbsp;integrado no projeto, os mantenedores fazem&nbsp;a revis&atilde;o&nbsp;do seu que voc&ecirc; fez&nbsp;e&nbsp;ent&atilde;o&nbsp;ou solicitam altera&ccedil;&otilde;es ou&nbsp;fazem o merge.  O artigo da Lorna Mitchell&nbsp;Code Reviews: Before You Even Run The Code&nbsp;trata sobre os pontos&nbsp;com os quais os mantenedores se preocupam. Por isso, v&aacute; l&aacute; dar uma lida e assegure que voc&ecirc; facilitou as coisas para os mantenedores&nbsp;o m&aacute;ximo poss&iacute;vel.  Resumindo  Isso &eacute; tudo! As partes fundamentais s&atilde;o as seguintes:   Fa&ccedil;a o fork do projeto &amp; o clone local. Crie um remoto upstream e sincronize com sua c&oacute;pia local antes de criar o branch. Fa&ccedil;a um branch para cada peda&ccedil;o separado de trabalho. Fa&ccedil;a as&nbsp;altera&ccedil;&otilde;es, escreva&nbsp;boas mensagens de commit&nbsp;e leia o arquivo CONTRIBUTING quando ele existir Fa&ccedil;a o push para seu reposit&oacute;rio origin. Crie em novo PR (Pull Request) no GitHub. Responda a todos os feedbacks recebidos durante a&nbsp;revis&atilde;o do c&oacute;digo.   Se voc&ecirc; quiser contribuir com um projeto open source, considere o&nbsp;joind.in!    &Eacute; isso pessoal! Agrade&ccedil;o muito ao Rob Allen&nbsp;pelo artigo original e autoriza&ccedil;&atilde;o para tradu&ccedil;&atilde;o aqui no RogerioPradoJ.com.  Para quem quiser mais&nbsp;ideias&nbsp;de projetos opensource para contribuir, de&ecirc;m uma olhada no #30contribs&nbsp;e tamb&eacute;m no @yourfirstpr, que te ajudam a come&ccedil;ar a contribuir.  O mais legal vai ser daqui a pouco voc&ecirc;&nbsp;ter tantas contribui&ccedil;&otilde;es que nem vai lembrar de quando foi sua primeira vez. Para te ajudar a recordar, voc&ecirc; pode usar o&nbsp;http:\/\/firstpr.me\/!   http:\/\/firstpr.me\/#rogeriopradoj&nbsp;em 28\/09\/2015  At&eacute; mais!  &mdash;-  Este artigo foi publicado originalmente em&nbsp;RogerioPradoJ.com.",
            "description": "Eu j&aacute; estou h&aacute;&nbsp;alguns meses tentando&nbsp;escrever um guia com dicas sobre como contribuir com open source nesse meu gist, mas at&eacute; agora n&atilde;o consegui terminar... Quem sabe daqui um tempo tenhamos essas Dicas de como contribuir com open source by @rogeriopradoj&nbsp;;-).  No entanto, em 24\/..."
        },
        {
            "title": "#30contribs - Cheguei nos 30! E quero de presente Pull Requests e contribui\u00e7\u00f5es para projetos open source e da comunidade!",
            "url": "\/2015\/06\/24\/30contribs-cheguei-nos-30-e-quero-de-presente-pull-requests-e-contribuicoes-para-projetos-open-source-e-da-comunidade\/",
            "date": "2015-06-24 16:02:52 +0000",
            "body": "#30contribs   Ol&aacute;! Hoje, dia 24 de junho de 2015 &eacute; um dia especial, pelo menos para mim :-) : cheguei nos 30! E como &eacute; meu anivers&aacute;rio, quero pedir um presente. Na verdade, um monte de presentes!!!  #30contribs&nbsp;  Eu quero ver muitos Pull Requests e contribui&ccedil;&otilde;es para projetos open source e da comunidade! #30contribs  Minha ideia surgiu do projeto http:\/\/24pullrequests.com\/ que, sempre no fim de cada ano, incentiva a ajuda para projetos open source. E tamb&eacute;m do saudoso Sou PHPSP e Contribuo, que em 2011 fez bastante gente come&ccedil;ar nesse mundo das contribui&ccedil;&otilde;es! E tamb&eacute;m de uma ideia que&nbsp;eu tive (mas n&atilde;o&nbsp;tinha colocado em pr&aacute;tica) na apresenta&ccedil;&atilde;o que fiz no TDC 2014:&nbsp;Becoming a Contributor, Open Sourcer and Beyond.  O #30contribs n&atilde;o tem um site espec&iacute;fico (ainda ;-) ) e nem a ideia de distribuir pr&ecirc;mios com base nas contribui&ccedil;&otilde;es. &Eacute; s&oacute; contribuir! E colocar a hashtag #30contribs ! Mande o m&aacute;ximo que voc&ecirc; puder! S&oacute; consegue uma contribui&ccedil;&atilde;o? Tudo bem! Consegue v&aacute;rias? Melhor ainda! N&atilde;o consegue nenhuma, mas vai correr atr&aacute;s para conseguir daqui a pouco? Maravilha!     Ah, se quiser me mencionar (n&atilde;o precisa, mas ia ser bem legal), sou o @rogeriopradoj em quase todo lugar. Ent&atilde;o, &eacute; s&oacute; escrever, depois do texto do seu commit (ou pull request, ou issue, ou mensagem no Twitter, ou no Facebook etc): &quot;Essa contribui&ccedil;&atilde;o &eacute; um presente #30contribs para o @rogeriopradoj&quot;. Ou algo assim!   E onde eu posso contribuir?  Se voc&ecirc; j&aacute; costuma contribuir para algum projeto, continue! Mantenha essa boa pr&aacute;tica! Se voc&ecirc; tem algum projeto que sempre quis contribuir, mas ainda n&atilde;o tinha dado o primeiro passo, que tal come&ccedil;ar agora com esse empurr&atilde;ozinho? Ou se voc&ecirc; ainda n&atilde;o tem ideia nenhuma, n&atilde;o deixe que algum medo ou &quot;vergonha&quot; do seu c&oacute;digo te impe&ccedil;a de come&ccedil;ar!&nbsp;Tenho certeza que voc&ecirc; se surpreender&aacute; quando come&ccedil;ar a contribuir. Tem sempre espa&ccedil;o para mais ajuda, mesmo pequenas contribui&ccedil;&otilde;es s&atilde;o v&aacute;lidas! Al&eacute;m disso, a&nbsp;maioria do pessoal est&aacute; disposta a ajudar quem est&aacute; come&ccedil;ando!  Quero sugest&otilde;es de onde posso come&ccedil;ar a contribuir!  Quer ajuda para saber por onde come&ccedil;ar?&nbsp;Posso sugerir alguns lugares que conhe&ccedil;o!  Que tal os projetos do PHPSP? Hoje, sou um dos evangelistas desse grupo e ajudo a organizar alguns eventos da comunidade. Tem uma s&eacute;rie de projetos que precisam de ajuda sob o chap&eacute;u do grupo, ent&atilde;o acesse l&aacute;: https:\/\/github.com\/PHPSP. Ah, todos s&atilde;o bem-vindos a fazer parte do PHPSP!  E que tal o Saia de Casa!? Projeto que comecei com o William Espindola h&aacute; alguns anos, o Saia de Casa!&nbsp;&eacute; uma agenda colaborativa de eventos para desenvolvedores mantida por desenvolvedores! Acesse l&aacute;: https:\/\/github.com\/saiadecasa\/saiadecasa.github.io  E que tal o #VagrantSP ou o https:\/\/github.com\/FriendsOfVagrant? Muitos sabem que sou um entusiasta da ferramenta Vagrant j&aacute; faz tempo!.&nbsp;O&nbsp;FriendsOfVagrant foi onde comecei a contribuir com a&nbsp;documenta&ccedil;&atilde;o em portugu&ecirc;s no passado. Agitar um grupo de usu&aacute;rios em S&atilde;o Paulo era quest&atilde;o de tempo, foi a&iacute; que foi criado o Meetup Vagrant-Sao-Paulo&nbsp;(valeu Paulo Rezende por me apoiar tamb&eacute;m nessa empreitada)!&nbsp;Quer ajudar no GitHub:&nbsp;https:\/\/github.com\/FriendsOfVagrant e&nbsp;https:\/\/github.com\/vagrantsp\/  E que tal o PHP-Build? Um projeto muito bacana de um austr&iacute;aco (o Christoph Hochstrasser, @CHH), que serve para compilar o PHP em v&aacute;rias vers&otilde;es diferentes, em paralelo, na mesma m&aacute;quina! Funciona muito bem em Linux, e tamb&eacute;m no Mac OS X.&nbsp;E at&eacute; no Windows, se voc&ecirc; usar algo como Vagrant  ou Docker!&nbsp;N&atilde;o conhece o PHP-Build e quer usar? Sugiro:&nbsp;https:\/\/php-build.github.io\/,&nbsp;https:\/\/github.com\/rogeriopradoj\/phpenv-installer e&nbsp;http:\/\/rogeriopradoj.com\/2012\/11\/20\/como-atualizar-a-versao-do-php-no-mac-osx-mountain-lion\/. Para ajudar nos reposit&oacute;rios:&nbsp;https:\/\/github.com\/php-build e&nbsp;https:\/\/github.com\/php-build\/php-build\/wiki\/phpenv%20tools.  E que tal me ajudar em alguns pacotes PHP e FrontEnd\/JavaScript&nbsp;que est&atilde;o dispon&iacute;veis no&nbsp;Packagist e no Bower? Acessa l&aacute;:&nbsp;https:\/\/packagist.org\/packages\/rogeriopradoj\/ e&nbsp;http:\/\/bower.io\/search\/?q=rogeriopradoj.  Caramba, j&aacute; sugeri a&iacute; em cima&nbsp;um monte de projetos, e tem mais um monte que gostaria de colocar! Se quiser mais ideias, d&ecirc;em uma olhada no meu GitHub:&nbsp;https:\/\/github.com\/rogeriopradoj. Mas, de novo, essas s&atilde;o apenas sugest&otilde;es, ent&atilde;o, n&atilde;o importa para onde:&nbsp;o mais importante &eacute; que voc&ecirc; fa&ccedil;a mais contribui&ccedil;&otilde;es!  Para n&atilde;o esquecer,&nbsp;#30contribs&nbsp;  &Eacute; isso a&iacute;, #30contribs ! Precisando de ajuda, &eacute; s&oacute; chamar! E feliz anivers&aacute;rio! :-)    Este artigo foi publicado originalmente em RogerioPradoJ.com.",
            "description": "#30contribs   Ol&aacute;! Hoje, dia 24 de junho de 2015 &eacute; um dia especial, pelo menos para mim :-) : cheguei nos 30! E como &eacute; meu anivers&aacute;rio, quero pedir um presente. Na verdade, um monte de presentes!!!  #30contribs&nbsp;  Eu quero ver muitos Pull Requests e contribui&ccedil;&otilde;es para projetos ope..."
        },
        {
            "title": "Como acompanhar as listas de discuss\u00e3o oficiais do PHP.net",
            "url": "\/2014\/11\/30\/como-acompanhar-as-listas-de-discussao-oficiais-do-php-net\/",
            "date": "2014-11-30 14:59:52 +0000",
            "body": "Ol&aacute;, pessoal,  Hoje vamos falar sobre as listas de discuss&otilde;es oficiais do PHP, as famosas mailing lists do PHP.net&nbsp;(s&oacute; como adendo, PHP.net &eacute;&nbsp;o site&nbsp;da linguagem que hospeda tamb&eacute;m muitos&nbsp;projetos relacionados,&nbsp;como os conhecidos&nbsp;PEAR.php.net&nbsp;e&nbsp;PECL.php.net, o reposit&oacute;rio GIT.php.net, at&eacute; o muitas vezes desconhecido&nbsp;PEOPLE.php.net.&nbsp;Para conhecer mais, use a WIKI.php.net).  Para que servem as mailing lists?  As listas de discuss&atilde;o s&atilde;o onde conseguimos ter as informa&ccedil;&otilde;es mais recentes, interessantes muitas vezes, e provavelmente in&eacute;ditas sobre v&aacute;rios assuntos.  &Eacute; bem poss&iacute;vel se manter&nbsp;bem informado sobre&nbsp;o andamento do ecossistema PHP por uma s&eacute;rie de lugares: sites e blogs especializados, livros, encontros de comunidades (j&aacute; conhece o PHPSP?&nbsp;:-) :-) :-)&nbsp;)... &nbsp;O pr&oacute;prio&nbsp;GitHub (php\/php-src) &eacute; uma &oacute;tima fonte de informa&ccedil;&atilde;o hoje em dia.&nbsp;Mas, sem &nbsp;acompanhar as listas de discuss&atilde;o, perde-se um pouco do potencial que temos &agrave; nossa disposi&ccedil;&atilde;o.  Voc&ecirc; j&aacute; deve ter&nbsp;escutado algo do tipo:     ...O pessoal no Internals&nbsp;est&aacute; discutindo chamar a pr&oacute;xima vers&atilde;o da linguagem de XYZ, mas&nbsp;Jo&atilde;ozinho n&atilde;o aceitou por causa disso e daquilo outro...   No come&ccedil;o deve ter ficado &quot;boiando&quot;, e perguntou o que era aquele Internals, descobrindo que era uma mailing list\/lista de discuss&atilde;o.&nbsp;Mas s&oacute; saber o nome da lista n&atilde;o adianta muito, se voc&ecirc; n&atilde;o conseguir assin&aacute;-la, n&atilde;o &eacute; mesmo?  Eu tive problema parecido. Foi&nbsp;quando estava&nbsp;come&ccedil;ando a&nbsp;buscar mais informa&ccedil;&otilde;es sobre como&nbsp;trabalhar na tradu&ccedil;&atilde;o do manual do PHP para pt-BR, no&nbsp;PHPSP+Docs #1&nbsp;de&nbsp;11\/2013. O fera&nbsp;Klaus Silveira&nbsp;me indicou o caminho&nbsp;descrito na wiki dos esfor&ccedil;os da tradu&ccedil;&atilde;o, que era assim:     ...Toda a comunica&ccedil;&atilde;o entre os tradutores deve ser feita atrav&eacute;s da lista de email oficial... (doc-pt-br@lists.php.net)   Ok, j&aacute; tinha at&eacute; o &quot;nome completo&quot; da lista, mas ainda n&atilde;o sabia como assin&aacute;-la!&nbsp;Por que ser&aacute; que era t&atilde;o dif&iacute;cil?!?!  Um pouco diferente do que fazemos Yahoo e Google Groups  Lembro que na &eacute;poca da faculdade era comum&nbsp;participar de listas de distribui&ccedil;&atilde;o internas dos grupos da sala. As primeiras, feitas no Yahoo Grupos, e com o tempo,&nbsp;as coisas come&ccedil;ando a migrar para o Google Groups. Hoje ainda&nbsp;participo de uma s&eacute;rie por l&aacute;, como o&nbsp;PHP Brasil Comunidades&nbsp;e o php-build developers,&nbsp;e nunca tive dificuldade para assinar nenhuma das listas. O passo era:   criar uma conta Yahoo\/Google acessar o site do grupo clicar no bot&atilde;o registrar\/assinar\/entrar e ser feliz!   Al&eacute;m do mais a lista nesses casos sempre tinha uma p&aacute;gina web espec&iacute;fica, onde quem n&atilde;o tinha assinado podia ver online as discuss&otilde;es, e quem j&aacute; estava cadastrado podia editar suas op&ccedil;&otilde;es de recebimento (quantidade de e-mails di&aacute;rios a receber, descadastramento etc.).&nbsp;E o pior que esse fluxo funcionava para qualquer lista! E, com certeza, esse foi o problema!  Numa palestra que assisti sobre&nbsp;Agile, ministrada pelo Juan Bernab&oacute;, da Germinadora, ele dizia&nbsp;que aprender era f&aacute;cil quando conseguimos desaprender antes, o que &eacute; dif&iacute;cil.&nbsp;Eu demorei muito mais para achar o formato de assinatura para as mailing lists do PHP.net porque eu demorei para &quot;desaprender&quot; o jeito Yahoo\/Google. E n&atilde;o &eacute; que o jeito PHP.net &eacute; f&aacute;cil tamb&eacute;m! S&oacute; &eacute; diferente! Vamos l&aacute; ent&atilde;o ver como fazer.  Interface web das listas de discuss&atilde;o  Primeiro voc&ecirc; tem que achar qual &eacute; a lista de seu interesse.&nbsp;Em&nbsp;http:\/\/news.php.net\/&nbsp;est&atilde;o listadas todas as op&ccedil;&otilde;es. &Eacute; s&oacute; clicar sobre o link referente &agrave; lista que voc&ecirc; escolher e navegar por ela. Bem simples.    Quer umas dicas para come&ccedil;ar?   doc-pt-br, tradu&ccedil;&atilde;o para portugu&ecirc;s do manual da linguagem:&nbsp;http:\/\/news.php.net\/php.doc.pt-br phpdoc, manual da linguagem em ingl&ecirc;s:&nbsp;http:\/\/news.php.net\/php.doc php-internals, onde acontecem as grandes discuss&otilde;es sobre a linguagem:&nbsp;http:\/\/news.php.net\/php.internals   Passos para assinar uma lista de discuss&atilde;o PHP.net  Assinar listas principais com bot&atilde;o Subscribe  Voc&ecirc; pode acessar a p&aacute;gina&nbsp;http:\/\/php.net\/mailing-lists.php&nbsp;que te d&aacute; uma introdu&ccedil;&atilde;o sobre o funcionamento das listas,&nbsp;mostra as principais delas (o &iacute;ndice completo est&aacute; em&nbsp;http:\/\/news.php.net\/), e permite que se assine por l&aacute;.    Exemplo de assinatura da lista Internals:     acesse&nbsp;http:\/\/php.net\/mailing-lists.php selecione\/marque o radio button Normal em Internal List digite seu e-mail no&nbsp;campo&nbsp;Email clique no bot&atilde;o&nbsp;Subscribe   Pronto. No fim, voc&ecirc; vai receber um e-mail autom&aacute;tico, para&nbsp;confirmar a assinatura &eacute; s&oacute; responder a mensagem.    Assinar listas sem&nbsp;bot&atilde;o de Subscribe  Infelizmente, nem todas as listas est&atilde;o l&aacute; naquele endere&ccedil;o, e &eacute; necess&aacute;rio trabalhar um pouquinho mais para come&ccedil;ar a receber as discuss&otilde;es em sua caixa postal. Mas n&atilde;o &eacute; nada imposs&iacute;vel, existem comandos que permitem gerenciar suas assinaturas sem nem precisar de interface web. E, o melhor, funcionam para qualquer tipo, tanto as principais quanto as outras.  O sistema de listas de distribui&ccedil;&atilde;o que o PHP.net utiliza &eacute; o&nbsp;ezmlm-idx, cujo manual de utiliza&ccedil;&atilde;o est&aacute; dispon&iacute;vel no endere&ccedil;o&nbsp;http:\/\/untroubled.org\/ezmlm\/ezman\/ezman1.html. Ent&atilde;o, se quiser ir mais a fundo, &eacute; s&oacute; RTFM! Mas &eacute; l&oacute;gico que vou colocar aqui os comandos mais b&aacute;sicos e &uacute;teis para o nosso caso.  Para ver todos os poss&iacute;veis comandos sobre uma lista, &eacute; s&oacute; mandar um e-mail para:  nomedalista-help@lists.php.net  Percebeu ali o -help&nbsp;(h&iacute;fen help) antes da arroba (@)? Se voc&ecirc; souber o nome da lista (sugiro usar como base o&nbsp;http:\/\/news.php.net\/&nbsp;para pegar o nome), &eacute; s&oacute; mandar um email para l&aacute; (n&atilde;o precisa ter assunto nem corpo de texto) que voc&ecirc; receber&aacute; de volta as instru&ccedil;&otilde;es.  Agora, para assinar uma lista, &eacute; o -subscribe (h&iacute;fen subscribe) que voc&ecirc; usar&aacute;:  nomedalista-subscribe@lists.php.net  E, para cancelar a assinatura, -unsubscribe (h&iacute;fen unsubscribe):  nomedalista-unsubscribe@lists.php.net  Como nos inscrever&iacute;amos ent&atilde;o na lista&nbsp;doc-pt-br,&nbsp;onde rolam as discuss&otilde;es sobre a tradu&ccedil;&atilde;o para portugu&ecirc;s (pt-BR) do manual da linguagem?  &Eacute; s&oacute; mandar um e-mail para:  doc-pt-br-subscribe@lists.php.net  E se quisesse&nbsp;cancelar a assinatura?  E-mail para&nbsp;doc-pt-br-unsubscribe@lists.php.net.  Quer mais informa&ccedil;&otilde;es:&nbsp;http:\/\/php.net\/manual\/en\/faq.mailinglist.php  Considera&ccedil;&otilde;es finais  As listas de discuss&atilde;o oficiais, as famosas mailing lists do PHP.net s&atilde;o um &oacute;timo lugar para&nbsp;acompanhar informa&ccedil;&atilde;o privilegiada e muitas vezes passam despercebidas por muitos desenvolvedores. Nesse artigo aprendemos&nbsp;a localiz&aacute;-las, acess&aacute;-las via interface web, e tamb&eacute;m a como assin&aacute;-las para recebimento no seu pr&oacute;prio e-mail.  Foquei bastante na lista doc-pt-br, pois a tradu&ccedil;&atilde;o de documenta&ccedil;&otilde;es &eacute; um dos meus maiores focos no mundo open source. A tradu&ccedil;&atilde;o do manual do PHP para portugu&ecirc;s &eacute; um projeto que estou bastante envolvido no momento, que precisa de bastante ajuda da comunidade.  Se quiser saber mais,&nbsp;pode acessar a lista, a wiki e tamb&eacute;m ficar de olho em #PHPTranslationFestBrasil2014 no Twitter&nbsp;e nesta issue do PHPSP,&nbsp;que mais novidades ser&atilde;o divulgadas por l&aacute;!  Como sempre, fiquem &agrave; &nbsp;vontade&nbsp;para&nbsp;perguntar e discutir nos coment&aacute;rios, ou em qualquer lugar da internet, sou o @RogerioPradoJ.  At&eacute; mais!  Refer&ecirc;ncias   http:\/\/php.net\/mailing-lists.php http:\/\/php.net\/support.php http:\/\/php.net\/unsub.php http:\/\/news.php.net\/ http:\/\/news.php.net\/php.doc.pt-br http:\/\/news.php.net\/php.internals http:\/\/php.net\/manual\/en\/faq.mailinglist.php   &mdash;  Este artigo foi publicado originalmente em&nbsp;RogerioPradoJ.com.",
            "description": "Ol&aacute;, pessoal,  Hoje vamos falar sobre as listas de discuss&otilde;es oficiais do PHP, as famosas mailing lists do PHP.net&nbsp;(s&oacute; como adendo, PHP.net &eacute;&nbsp;o site&nbsp;da linguagem que hospeda tamb&eacute;m muitos&nbsp;projetos relacionados,&nbsp;como os conhecidos&nbsp;PEAR.php.net&nbsp;e&nbsp;PECL.php.net, o reposit&oacute;rio GIT.php..."
        },
        {
            "title": "Testando rapidamente projetos PHP, ou com Vagrant, ou com Docker ou com Servidor Web embutido",
            "url": "\/2014\/11\/01\/testando-rapidamente-php-com-vagrant-ou-docker-ou-servidor-web-embutido\/",
            "date": "2014-11-01 01:57:47 +0000",
            "body": "Ol&aacute;, pessoal!  Dica r&aacute;pida para quem quiser testar algum projeto PHP usando o Vagrant, ou o Docker, ou o Servidor Web embutido no PHP.  Vagrant  J&aacute; conhece o&nbsp;https:\/\/phpagrant.github.io\/ ? Nada mais &eacute; do que uma lista&nbsp;de sites geradores de Vagrantfile (e tudo o mais que voc&ecirc; precisa de provisionadores) para seu projeto PHP com base no Vagrant.    Tem para todos os gostos: Puppet, Chef, Ansible. Voc&ecirc; escolhe! Acesse l&aacute;,&nbsp;https:\/\/phpagrant.github.io\/!  Docker  O novo &quot;queridinho&quot; do mundo da virtualiza&ccedil;&atilde;o e conteineriza&ccedil;&atilde;o, o Docker,&nbsp;est&aacute; evoluindo r&aacute;pido e &eacute; importante voc&ecirc; correr atr&aacute;s do preju&iacute;zo e aprender sobre ele.    At&eacute; a vers&atilde;o 1.2.x tinha um s&eacute;rio problema para os usu&aacute;rios de sistemas n&atilde;o Linux: o Boot2Docker, camada VM para permitir que usu&aacute;rios de OS X e Windows usem o Docker, n&atilde;o permitia usar pastas compartilhadas por padr&atilde;o.&nbsp;Alguns&nbsp;hacks foram lan&ccedil;ados (como o &oacute;timo artigo do Chris Jones)&nbsp;, mas&nbsp;depois do lan&ccedil;amento da vers&atilde;o 1.3.0, tudo ficou mais f&aacute;cil:&nbsp;foi embutido suporte para pastas compartilhadas e est&aacute;&nbsp;mais simples para quem n&atilde;o usa Linux como m&aacute;quina principal de desenvolvimento&nbsp;ter o Docker como parte do seu processo de trabalho.  Mas e sobre o PHP? Vamos l&aacute;! Algumas imagens dispon&iacute;veis no&nbsp;https:\/\/registry.hub.docker.com\/ para voc&ecirc; se divertir:   oficial:&nbsp;https:\/\/registry.hub.docker.com\/_\/php\/ (falta FPM, mas j&aacute; tem CLI e Apache com&nbsp;mod_php) @brunoric:&nbsp;https:\/\/hub.docker.com\/u\/brunoric\/ (brasileiro, aqui de S&atilde;o Paulo, especialista&nbsp;no Docker. Tem uma s&eacute;rie de imagens PHP, v&aacute;rios sabores, at&eacute; HHVM)   Al&eacute;m disso, seguindo a issue&nbsp;https:\/\/github.com\/codeguy\/php-the-right-way\/pull\/453,&nbsp;d&aacute; para ver que&nbsp;em pouco tempo&nbsp;o PHP: The Right Way&nbsp;(e o&nbsp;PHP: Do Jeito Certo) ter&aacute; conte&uacute;do sobre Docker e PHP (hoje eles j&aacute; tem conte&uacute;do sobre Vagrant).  Para quem quer ir direto colocar a m&atilde;o na massa, o que estou fazendo:   Primeiro instalei o Docker (e, como estou num OS X, o Boot2Docker tamb&eacute;m. Comando para garantir que ele est&aacute; ligado: boot2docker up) [OS X apenas:] coloquei no meu '\/etc\/hosts' o hostname 'localdocker' apontando para o IP&nbsp;192.168.59.103 (esse ip &eacute; o que comando boot2docker ip mostra). Isso s&oacute; &eacute; necess&aacute;rio para quem usa&nbsp;boot2docker, pois o Docker de verdade est&aacute; rodando dentro de uma VM, com esse IP a&iacute; de cima. Quem est&aacute; rodando no Windows deve ser algo parecido. Quem est&aacute; rodando no Linux, n&atilde;o tem que se preocupar com isso, pois o Docker est&aacute; usando o IP da sua m&aacute;quina de verdade. Vou na pasta que seria o document root da minha aplica&ccedil;&atilde;o (onde tem o front controller, geralmente index.php) . Como estou no&nbsp;OS X, essa pasta tem que estar dentro de \/Users para usar o compartilhamento de pasta autom&aacute;tico do boot2docker 1.3+. Ex:  $ cd \/Users\/eu\/projetos\/php123\/  De l&aacute;, rodo o seguinte comando:  $ docker run --name my-php-webserver -p 8080:80 -v `pwd`:\/var\/www\/html\/ php:apache  Agora, &eacute; s&oacute; abrir no seu navegador para testar: no linux, http:\/\/localhost:8080. No OS X, com boot2docker (se voc&ecirc; fez aquela configura&ccedil;&atilde;o no \/etc\/hosts), http:\/\/localdocker:8080.   O que aconteceu por tr&aacute;s do comando DOCKER RUN:   cria e j&aacute; executa um container, baseado na imagem php vers&atilde;o apache habilita o volume\/disco internamente (dentro do container) como \/var\/www\/html\/ e externamente (na m&aacute;quina host\/vm boot2docker) como o resultado comando pwd (diret&oacute;rio atual) redireciona a porta 80 interna (no container) para a porta 8080 externa (na m&aacute;quina host)   &Eacute; isso!  Quando precisar desligar o container, fazer os seguintes comandos:   $ docker ps -a(e copiar o CONTAINER ID) $ docker rm CONTAINER_ID_QUE_VOC&Ecirc;_ACHOU_NO_COMANDO_ANTERIOR   Servidor embutido  Vai ter momentos que voc&ecirc; n&atilde;o quer ou n&atilde;o pode ir para um dos modelos acima, Vagrant ou Docker. E&nbsp;nem quer instalar um servidor web completo (Apache, Nginx etc.) na sua m&aacute;quina de desenvolvimento. O que fazer?  Se voc&ecirc; tem o PHP CLI&nbsp;j&aacute; instalado, &eacute; bom saber que desde a vers&atilde;o 5.4 &eacute; poss&iacute;vel usar o servidor web embutido. Leia mais na documenta&ccedil;&atilde;o oficial.    Ent&atilde;o, na pasta onde seria o document root da sua aplica&ccedil;&atilde;o PHP (onde tem o front controller, certo?), digite o seguinte comando:  $ php -S localhost:8899   A porta ali, no caso 8899, poderia ser qualquer uma de sua prefer&ecirc;ncia. E voc&ecirc; j&aacute; tem um&nbsp;servidor web rodando servindo seu c&oacute;digo PHP, no seu navegador dispon&iacute;vel em http:\/\/localhost:8899. F&aacute;cil, n&atilde;o? Voc&ecirc; ainda pode configurar algo como um .htaccess, a Lorna Jane Mitchell tem um artigo de 2012 falando do assunto. Mas, de novo, leia a doc oficial que voc&ecirc; tem muita informa&ccedil;&atilde;o l&aacute;.  Considera&ccedil;&otilde;es finais  Hoje voc&ecirc; n&atilde;o &eacute; mais obrigado a instalar um servidor web como o Apache ou o Nginx apenas para testar uma aplica&ccedil;&atilde;o PHP b&aacute;sica. O Servidor web embutido, desde o PHP 5.4 (mar&ccedil;o de 2012), fornece a estrutura b&aacute;sica para que, em desenvolvimento, voc&ecirc; tenha um servidor m&iacute;nimo.  Caso voc&ecirc; precise&nbsp;espelhar o servidor de produ&ccedil;&atilde;o (hardware,&nbsp;sistema operacional e softwares utilizados), v&aacute; para o Vagrant, que te entrega isso de forma f&aacute;cil com a virtualiza&ccedil;&atilde;o, tanto para projetos gen&eacute;ricos quanto para projetos PHP.  E, se quiser estar na crista do onda, aplicando conteineriza&ccedil;&atilde;o tamb&eacute;m no ambiente de desenvolvimento, teste o Docker com PHP.  E fique a vontade de usar os coment&aacute;rios se quiser ajuda!  At&eacute; mais!  &mdash;-  Este artigo foi publicado originalmente em&nbsp;RogerioPradoJ.com.",
            "description": "Ol&aacute;, pessoal!  Dica r&aacute;pida para quem quiser testar algum projeto PHP usando o Vagrant, ou o Docker, ou o Servidor Web embutido no PHP.  Vagrant  J&aacute; conhece o&nbsp;https:\/\/phpagrant.github.io\/ ? Nada mais &eacute; do que uma lista&nbsp;de sites geradores de Vagrantfile (e tudo o mais que voc&ecirc; prec..."
        },
        {
            "title": "Build e Integra\u00e7\u00e3o Cont\u00ednua no PHP com Composer, Phing, Travis-CI e Scrutinizer-CI",
            "url": "\/2013\/09\/10\/build-e-integracao-continua-no-php-com-composer-phing-travis-ci-e-scrutinizer-ci\/",
            "date": "2013-09-10 21:49:40 +0000",
            "body": "Ol&aacute;, pessoal,  H&aacute; tempos que n&atilde;o fazia uma limpeza no meu GitHub, seja para excluir projetos que n&atilde;o fazem mais sentido, forks que n&atilde;o ia mais utilizar, ou mesmo para atualizar algum reposit&oacute;rio e me lembrar de tudo que venho estudando desde que conheci o GitHub (segundo o site dos caras, outubro de 2010).  &nbsp;&nbsp;  E foi no meio dessa limpeza (na verdade bem no come&ccedil;o mesmo :-) ) que achei o&nbsp;https:\/\/github.com\/rogeriopradoj\/ManoWars, fork de um projeto criado pelo Rafael Dohms e pelo Augusto Pascutti h&aacute; muito tempo para ensinar sobre Testes Unit&aacute;rios e Integra&ccedil;&atilde;o Cont&iacute;nua.  Foi a&iacute; que pensei: porque n&atilde;o dar uma relembrada no assunto, e tamb&eacute;m atualizar com coisas que tenha aprendido nesse per&iacute;odo (poxa, s&atilde;o quase 3 anos!)?  Phing???    Muita coisa ainda n&atilde;o havia tocado, caso do Phing, que o Hussani e o Duodraco j&aacute; haviam apresentado mais de uma vez em palestras. Tamb&eacute;m n&atilde;o estava muito habituado com as ferramentas para gera&ccedil;&atilde;o de relat&oacute;rios de m&eacute;tricas, como o PHPMD, ou o PDepend.  Mas a&iacute; estava a gra&ccedil;a, um bom desafio! E com a &oacute;tima estrutura que o Dohms e o Pascutti haviam deixado, n&atilde;o foi t&atilde;o dif&iacute;cil come&ccedil;ar.  Composer    A primeira coisa que fiz foi usar o Composer para gerenciar as depend&ecirc;ncias do projeto.  Aqui uma decis&atilde;o tinha que ser tomada: o projeto foi todo baseado em PHP 5.2+, e eu poderia continuar deixando essa vers&atilde;o como a m&iacute;nima necess&aacute;ria. S&oacute; que muitas das ferramentas de m&eacute;tricas e o pr&oacute;prio PHPUnit que hoje est&aacute; dispon&iacute;vel via Composer &eacute; apenas 5.3+. Ent&atilde;o decidi subir para 5.3 a depend&ecirc;ncia m&iacute;nima.  Como o Composer al&eacute;m de gerenciar as depend&ecirc;ncias tamb&eacute;m gera um autoloader completo (tanto com o c&oacute;digo do meu projeto quanto das depend&ecirc;ncias), pude retirar sem d&oacute; o Zend\/Loader que estava no projeto, pois ele n&atilde;o era mais necess&aacute;rio.  E com um m&aacute;gico $ composer install estava l&aacute;: todas as depend&ecirc;ncias na pasta vendor, um autoloader funcional completo, e o melhor, todas as ferramentas bin&aacute;rias (PHPUnit, PHPPdepend etc., e o pr&oacute;prio Phing) j&aacute; dispon&iacute;veis tamb&eacute;m na pasta vendor\/bin.  &Eacute;, o Composer &eacute; uma m&atilde;o na roda!  E l&oacute;gico, com o PHP 5.4+ com servidor web embutido, foi brincadeira de crian&ccedil;a subir testar a aplica&ccedil;&atilde;o rodando no navegador, s&oacute; com um $ php -S localhost:8080 -t public.  Estrututura de pastas e arquivos  Como o Composer coloca todas as depend&ecirc;ncias dentro da pasta vendor na raiz, e &eacute; meio que padr&atilde;o os projetos PHP que vejo deixarem uma estrutura baseada na raiz tamb&eacute;m, mudei um pouquinho as pastas de lugar. A maior mudan&ccedil;a foi colocar as pastas que estavam dentro de ManoWars na raiz, assim a hierarquia ficou um pouco menor.   \/libs: cont&eacute;m o c&oacute;digo da aplica&ccedil;&atilde;o \/public: o document root do servidor web \/tests: testes unit&aacute;rios init.php: bootstrap da aplica&ccedil;&atilde;o (usado tanto na aplica&ccedil;&atilde;o web quanto nos testes)   phpunit.xml.dist  J&aacute; havia lido sobre a vantagem de usar o phpunit.xml.dist no artigo&nbsp;[Best practice] How to ship PHPUnit configuration do&nbsp;test.ical.ly, e at&eacute; j&aacute; mandei um Pull Request para o Ophportunidades&nbsp;sobre isso.  Ent&atilde;o foi um passo para criar um arquivo de configura&ccedil;&atilde;o para o PHPUnit, j&aacute; desde o come&ccedil;o um .dist.  Vantagem:&nbsp;agora para rodar o phpunit n&atilde;o &eacute; preciso entrar na pasta tests, &eacute; s&oacute; rodar a partir da raiz. Outro ponto, n&atilde;o &eacute; mais necess&aacute;rio o arquivo AllTests.php, pois a defini&ccedil;&atilde;o da su&iacute;te de testes &eacute; feita tamb&eacute;m nesse arquivo de configura&ccedil;&atilde;o.  PHP CodeSniffer  Uma task do Phing que n&atilde;o estava sendo executada era a de verifica&ccedil;&atilde;o do padr&atilde;o de codifica&ccedil;&atilde;o, com o phpcs. Pensei em colocar o padr&atilde;o PSR2&nbsp;logo de cara, mas como o projeto foi feito a muito tempo, muitos erros iriam aparecer. Preferi deixar com o padr&atilde;o Zend&nbsp;que foi provavelmente o que o Dohms e o Pascutti usaram.  Na minha lista de tarefas est&aacute; evoluir o padr&atilde;o para PSR2.  Outras ferramentas  Todas as ferramentas que est&atilde;o sendo usadas para m&eacute;tricas, testes e build est&atilde;o no composer.json, d&ecirc; uma olhada l&aacute;, ok?  README  E no LEIAME do projeto a principal mudan&ccedil;a foi trocar o formato para Markdown (na verdade o GFM) que &eacute; uma beleza para escrever e o GitHub j&aacute; faz a renderiza&ccedil;&atilde;o muito bem para HTML.  Ferramentas de Integra&ccedil;&atilde;o Cont&iacute;nua Online (Travis e Scrutinizer)  Depois de todos os pequenos ajustes, era hora de mexer de verdade no projeto.  A primeira coisa que percebi &eacute; que tinham poucos testes falhando. Tinha a ver com a API do PHPUnit ter mudado, e com um teste que esperava nulo, mas na verdade o m&eacute;todo retornava um inteiro. Fiz o ajuste nos testes e eles passaram a funcionar.  Agora era hora de resolver todos os outros problemas do c&oacute;digo: padr&atilde;o de codifica&ccedil;&atilde;o, aumentar cobertura de testes, complexidade, etc. etc., tudo relacionado a QA\/Garantia de Qualidade. Tamb&eacute;m analisar os relat&oacute;rios gerados, uma parte interessante que nunca tinha olhado mais de perto.  Mas por que n&atilde;o ser um pouco poser e colocar um monte de badges no projeto?&nbsp;Esses badges seriam para mostrar a evolu&ccedil;&atilde;o do projeto, e fui atr&aacute;s das ferramentas online que me permitiriam isso  Travis    Comecei pela mais conhecida, o Travis-CI, que&nbsp;j&aacute; tinha usado em outros projetos. Nele come&ccedil;ei colocando o PHPUnit para rodar, nas 3 &uacute;ltimas grandes vers&otilde;es do PHP, 5.3, 5.4 e 5.5.  O Travis conta com um conceito interessante de matriz de build, onde voc&ecirc; cruza algumas configura&ccedil;&otilde;es e o build &eacute; feito em todas as combina&ccedil;&otilde;es dela.&nbsp;Isso me ajudou no passo seguinte. &nbsp;O Travis j&aacute; tem um execut&aacute;vel do PHPUnit dispon&iacute;vel para usarmos, mas eu gostaria de rodar o PHPUnit instalado pelo Composer tamb&eacute;m. F&aacute;cil: criei uma vari&aacute;vel de ambiente RUN, que no primeiro momento era definida como phpunit, e no segundo momento como vendor\/bin\/phpunit. E o Travis se encarregou de rodar os builds 6 vezes (3 vers&otilde;es do PHP x 2 PHPUnit diferentes).  No fim, coloquei mais uma defini&ccedil;&atilde;o para a vari&aacute;vel de ambiente RUN como vendor\/bin\/phing, e o Phing inteiro foi rodado l&aacute; no Travis, muito bacana!  Scrutinizer    S&oacute; um problema: o Travis sozinho n&atilde;o avalia os relat&oacute;rios gerados. Foi a&iacute; que peguei o Scrutinizer-CI, que j&aacute; havia tamb&eacute;m usado anteriormente, mas quando o Alexandre Eher lembrou dele no PHPSPub de agosto\/2013, vi que era uma boa ideia us&aacute;-lo de verdade.  Depois de bater um pouco de cabe&ccedil;a, consegui fazer a maioria das m&eacute;tricas serem executadas, e no fim, o que mais queria: os badges!!!   Travis   Scrutinizer - Quality   Scrutinizer - Coverage    E para renderizar o README um pouco melhor, e l&oacute;gico que usando outra ferramenta online, fui de DocumentUp.    &Eacute; isso a&iacute;, pessoal, escrevi bastante e tem bastante coisa para fazer ainda.  Se quiser acompanhar, l&aacute; no&nbsp;https:\/\/github.com\/rogeriopradoj\/ManoWars.  At&eacute; mais!    Este artigo foi publicado originalmente em RogerioPradoJ.com.",
            "description": "Ol&aacute;, pessoal,  H&aacute; tempos que n&atilde;o fazia uma limpeza no meu GitHub, seja para excluir projetos que n&atilde;o fazem mais sentido, forks que n&atilde;o ia mais utilizar, ou mesmo para atualizar algum reposit&oacute;rio e me lembrar de tudo que venho estudando desde que conheci o GitHub (segundo o site d..."
        },
        {
            "title": "Python e Virtualenv no Mac OS X Mountain Lion 10.8",
            "url": "\/2013\/05\/02\/python-e-virtualenv-no-mac-os-x-mountain-lion-10-8\/",
            "date": "2013-05-02 12:14:34 +0000",
            "body": "Este artigo &eacute; uma tradu&ccedil;&atilde;o livre de Python and Virtualenv on Mac OS X Mountain Lion 10.8, do Justin Mayer,&nbsp;dispon&iacute;vel em&nbsp;http:\/\/hackercodex.com\/guide\/python-virtualenv-on-mac-osx-mountain-lion-10.8\/.    A instala&ccedil;&atilde;o do Python e do Virtualenv no Mac OS X 10.8 Mountain Lion pode ser feita de muitas formas. Embora n&atilde;o exista uma configura&ccedil;&atilde;o perfeita, esse tutorial te guiar&aacute; no processo de configura&ccedil;&atilde;o de uma instala&ccedil;&atilde;o padr&atilde;o do Mountain Lion num &oacute;timo sistema para desenvolvimento Python.  Primeiros passos  Esse guia pressup&otilde;e que voc&ecirc; j&aacute; tenha instalado o Xcode e o Homebrew. Para detalhes, siga os passos do Mountain Lion Configuration Guide.  Python  Vamos instalar a &uacute;ltima vers&atilde;o 2.7.x do Python pelo Homebrew. Para que fazer isso, voc&ecirc; pode perguntar, quando a Apple j&aacute; inclui o Python no Mountain Lion? Aqui temos algumas raz&otilde;es:   O Homebrew sempre fornece a vers&atilde;o mais recente (hoje 2.7.4). A vers&atilde;o embutida no OS X est&aacute; parada no 2.7.2. A Apple fez mudan&ccedil;as significativas no Python embutido, o que pode resultar em bugs escondidos. O Python do Homebrew inclui as &uacute;ltimas ferramentas para gerenciamento de pacotes: o pip e o Distribute.   Seguindo pelo mesmo caminho, a vers&atilde;o do OpenSSL (no Mountain Lion, a 0.9.8) &eacute; de fevereiro de 2011, por isso estamos dizendo ao Homebrew para baixar o OpenSSL mais recente e compilar o Python com ele.  Use o comando a seguir para instalar o Python via Homebrew:  $ brew install python --with-brewed-openssl   Voc&ecirc; j&aacute; deve ter alterado seu PATH como mencionado no artigo acima, certo? Caso contr&aacute;rio, fa&ccedil;a isso agora.  Tamb&eacute;m podemos instalar o Python 3.x junto com o Python 2.x:  $ brew install python3 --with-brewed-openssl   ... o que facilita para testar seu c&oacute;digo tanto no Python 2.x quanto no Python 3.x.  Pip  Digamos que voc&ecirc; quer instalar um pacote Python, como a fant&aacute;stica ferramenta para isolamento de ambientes virtualenv. Quase todo artigo para Mac OS X relacionado ao &nbsp;Python diz para o leitor instal&aacute;-lo assim:  $ sudo easy_install virtualenv   Aqui est&atilde;o os motivos porque eu n&atilde;o fa&ccedil;o dessa forma:   instala&ccedil;&atilde;o com permiss&atilde;o root instala&ccedil;&atilde;o &eacute; feita na sistema em \/Library instala&ccedil;&atilde;o &eacute; feita pelo obsoleto easy_install em vez de usar as ferramentas mais modernas como o pip ou o Distribute o uso das ferramentas fornecidas pelo Homebrew leva a um ambiente mais confi&aacute;vel   Como voc&ecirc; deve ter percebido, estamos usando as ferramentas fornecidas pelo Homebrew para instalar os pacotes que voc&ecirc; quiser que est&atilde;o dispon&iacute;veis globalmente. Quando fizer instala&ccedil;&otilde;es usando o pip do Python do Homebrew, os pacotes ser&atilde;o postos em \/usr\/local\/lib\/python2.7\/site-packages, com os bin&aacute;rios sendo colocados em \/usr\/local\/share\/python.  Controle de vers&atilde;o (opcional)  A primeira coisa que eu instalo pelo pip &eacute; o Mercurial. Uma vez que eu tenho reposit&oacute;rios Mercurial para fazer push tanto para o Bitbucket quanto para o Github, eu instalo o Mercurial e o hg-git em todos meus sistemas:  $ pip install Mercurial hg-git   Pelo menos, voc&ecirc; ter&aacute; que adicionar umas poucas linhas no seu arquivo .hgrc para utilizar o Mercurial:  $ vim ~\/.hgrc   As linhas a seguir devem te permitir come&ccedil;ar; apenas garanta que tenha alterado os valores para seu nome e endere&ccedil;o e-mail respectivamente.  [ui] username = YOUR NAME &lt;address@example.com&gt;   Para testar se o Mercurial foi configurado e est&aacute; pronto para ser usado, execute o comando a seguir:  $ hg debuginstall   Se a &uacute;ltima linha da sa&iacute;da for &quot;No problem detected&quot;, ent&atilde;o o Mercurial foi instalado e configurado adequadamente.  Virtualenv  Os pacotes Python instalados pelos passos acima s&atilde;o globais no sentido que eles ficam dispon&iacute;veis em todos os seus projetos. Isso pode ser conveniente algumas vezes, mas tamb&eacute;m pode criar problemas. Por exemplo, as vezes um projeto precisa da &uacute;ltima vers&atilde;o do Django, enquanto outro precisa do Django 1.3 para manter a compatibilidade com uma extens&atilde;o cr&iacute;tica de terceiros. Esse &eacute; um dos muitos casos de uso que o virtualenv foi criado para solucionar. Nos meus sistemas, apenas um punhado de pacotes Python de uso geral (como o Mercurial e o pr&oacute;prio virtualenv) ficam dispon&iacute;veis globalmente - qualquer outro pacote fica confinado em um ambiente virtual.  Com essa explica&ccedil;&atilde;o, vamos instalar o virtualenv:  $ pip install virtualenv   Crie alguns diret&oacute;rios para armazenar seus projetos e os ambientes virtuais, respectivamente:  $ mkdir -p ~\/Projects ~\/Virtualenvs   Depois vamos abrir o arquivo ~\/.bashrc...  $ vim ~\/.bashrc   ... e adicionar algumas linhas nele:  # virtualenv should use Distribute instead of legacy setuptools export VIRTUALENV_DISTRIBUTE=true # Centralized location for new virtual environments export PIP_VIRTUALENV_BASE=$HOME\/Virtualenvs # pip should only run if there is a virtualenv currently activated export PIP_REQUIRE_VIRTUALENV=true # cache pip-installed packages to avoid re-downloading export PIP_DOWNLOAD_CACHE=$HOME\/.pip\/cache   Vamos recarregar nosso ambiente bash:  $ . ~\/.bash_profile   Agora n&oacute;s temos o virtualenv instalado e pronto para criar novos ambientes virtuais, que ser&atilde;o armazenados em ~\/Virtualenvs. Novos ambientes virtuais podem ser criados assim:  $ cd ~\/Virtualenvs $ virtualenv foobar   Se voc&ecirc; tiver tanto o Python 2.x quanto o 3.x e quiser criar um virtualenv do Python 3.x:  $ virtualenv -p python3 foobar-py3   ... o que facilita a troca entre os ambientes foobar do Python 2.x com o do Python 3.x.  Restringindo o pip aos ambientes virtuais  O que acontece se pensarmos que estamos trabalhando em uma ambiente virtual ativo, mas na verdade n&atilde;o existir nenhum ambiente virtual ativo e instalarmos algo via pip install foobar? Bem, nesse caso o pacote foobar &eacute; instalado no nosso site-packages global, estragando o prop&oacute;sito do isolamento do nosso ambiente virtual.  Na tentativa de evitar instalar por engano via pip um pacote espec&iacute;fico de um projeto no meu site-packages global, anteriormente eu usava o easy_install para pacotes globais e o pip embutido no virtualenv para instalar pacotes dentro dos ambientes virtuais. Isso atingia o objetivo do isolamento, uma vez que o pip estava dispon&iacute;vel apenas dentro dos ambientes virtuais, tornando imposs&iacute;vel para mim rodar pip install foobar por engano no meu site-packages global. No entanto, o easy_install tem algumas defici&ecirc;ncias, como a impossibilidade de desinstalar um pacote, e me vi querendo usar o pip tanto para pacotes globais quanto nos virtualenvs.  Felizmente, o pip tem um configura&ccedil;&atilde;o com documenta&ccedil;&atilde;o escassa&nbsp;que diz para ele falhar se n&atilde;o existir uma ambiente virtual ativo, que &eacute; exatamente o que eu quero. Na verdade, n&oacute;s j&aacute; fizemos essa configura&ccedil;&atilde;o acima, pela diretiva PIP_REQUIRE_VIRTUALENV=true. Por exemplo, vamos ver o que acontece quando tentamos instalar um pacote quando n&atilde;o temos um ambiente virtual ativo:  $ pip install markdown Could not find an activated virtualenv (required).   Perfeito! Mas, agora que essa op&ccedil;&atilde;o est&aacute; definida, como instalamos ou configuramos um pacote global? N&oacute;s podemos temporariamente desligar essa restri&ccedil;&atilde;o adicionando o seguinte no seu ~\/.bashrc:  syspip(){   PIP_REQUIRE_VIRTUALENV=&quot;&quot; pip &quot;$@&quot; }   Se no futuro quisermos atualizar nossos pacotes globais, a fun&ccedil;&atilde;o acima nos permite isso dessa forma:  $ syspip install --upgrade pip distribute virtualenv   &Eacute; claro que voc&ecirc; podia fazer o mesmo usando&nbsp;PIP_REQUIRE_VIRTUALENV=&quot;&quot; pip install --upgrade foobar, mas isso &eacute; muito mais chato de digitar.  Criando ambientes virtuais  Vamos criar um ambiente virtual para o Pelican, um gerador de site est&aacute;ticos baseado em Python:  $ cd ~\/Virtualenvs $ virtualenv pelican   Mude para o novo ambiente e ative-o assim:  $ cd pelican $ . bin\/activate   Para instalar o Pelican no ambiente virtual, vamos usar o pip:  $ pip install pelican markdown   Para mais informa&ccedil;&otilde;es sobre ambientes virtuais, leia a documenta&ccedil;&atilde;o do virtualenv.  Dotfiles  Estes s&atilde;o obviamente apenas os passos b&aacute;sicos para se ter configurado um ambiente de desenvolvimento Python. Se tiver achado este artigo &uacute;til, voc&ecirc; pode dar uma olhada no projeto Dotfiles do&nbsp;Justin Mayer no Bitbucket ou no Github, que ele recentemente come&ccedil;ou a reconstruir do zero. Ele ainda est&aacute; no come&ccedil;o do processo de ir adicionando seletivamente um peda&ccedil;o de cada vez, e logo deve aumentar isso.    &Eacute; isso a&iacute; pessoal, at&eacute; mais!    Este artigo foi publicado originalmente em&nbsp;RogerioPradoJ.com.",
            "description": "Este artigo &eacute; uma tradu&ccedil;&atilde;o livre de Python and Virtualenv on Mac OS X Mountain Lion 10.8, do Justin Mayer,&nbsp;dispon&iacute;vel em&nbsp;http:\/\/hackercodex.com\/guide\/python-virtualenv-on-mac-osx-mountain-lion-10.8\/.    A instala&ccedil;&atilde;o do Python e do Virtualenv no Mac OS X 10.8 Mountain Lion pode se..."
        },
        {
            "title": "Como atualizar a vers\u00e3o do PHP no Mac OSX Mountain Lion",
            "url": "\/2012\/11\/20\/como-atualizar-a-versao-do-php-no-mac-osx-mountain-lion\/",
            "date": "2012-11-20 22:08:38 +0000",
            "body": "Ol&aacute;, pessoal Venho usando o Vagrant (oficial, tradu&ccedil;&atilde;o e meu github) faz um tempo, para diminuir o n&uacute;mero de coisas instaladas no meu notebook, mas precisava atualizar a vers&atilde;o do PHP que tinha instalado por padr&atilde;o no meu Mac OSX.  Participando do projeto do iMasters, oPHPortunidades&nbsp;(veja os hangouts), precisei rodar alguns comandos b&aacute;sicos no console, usando o excelente Composer, mas por n&atilde;o ter a &uacute;ltima vers&atilde;o do PHP ficava dif&iacute;cil acompanhar o pessoal. Principalmente pela funcionalidade do servidor web embutido no PHP 5.4, que economiza bastante tempo para n&atilde;o precisar de configurar um Apache apenas para teste de uma aplica&ccedil;&atilde;o.  &Eacute; fato que usando o Vagrant poder&iacute;amos deixar preparado algumas receitas b&aacute;sicas, Puppet ou Chef, para deixar subir uma m&aacute;quina com a &uacute;ltima vers&atilde;o do PHP, mas a possibilidade de abrir um terminal em um diret&oacute;rio com um projeto m&iacute;nimo rodando apenas um php -S localhost:8080 em vez de um vagrant init, subl Vagrantfile, vagrant up, vagrant ssh etc etc era interessante.  Foi nesse momento que fui procurar uma op&ccedil;&atilde;o de atualizar a minha vers&atilde;o global do PHP, do 5.3.15 que &eacute; a que vem instalada no Mac OS X Mountain Lion, para a vers&atilde;o mais nova est&aacute;vel, 5.4.8 quando esse artigo foi escrito. Quando comecei a usar o Mac, em agosto 2011, procurei uma solu&ccedil;&atilde;o parecida com a que usava no Windows, o XAMPP, e tinha encontrado o MAMP e o pr&oacute;prio XAMPP (que eu tinha usado no meu tempo de Ubuntu tamb&eacute;m tamb&eacute;m tem vers&atilde;o Mac). Mas n&atilde;o queria mais utilizar uma op&ccedil;&atilde;o desse tipo. Queria ter a &uacute;ltima vers&atilde;o realmente instalada e acess&iacute;vel a partir da linha de comando.  O primeiro lugar onde fui olhar&nbsp;foi o manual do PHP, que agora est&aacute; um pouco mais atualizado, mas at&eacute; quando eu vi (setembro 2012) s&oacute; tinha uma sugest&atilde;o: compile o PHP usando as instru&ccedil;&otilde;es para UNIX. Escolhi n&atilde;o usar essa op&ccedil;&atilde;o.  Um tempo atr&aacute;s o F&aacute;bio Ribeiro&nbsp;perguntou no Twitter como o pessoal estava montando o ambiente&nbsp;PHP no OSX, e na &eacute;poca ele recebeu a indica&ccedil;&atilde;o do Homebrew. Essa seria uma op&ccedil;&atilde;o interessante.  Enquanto estava ajudando na tradu&ccedil;&atilde;o do PHP The Right Way, o PHP Do Jeito Certo, verifiquei que j&aacute; existia uma pacote bin&aacute;rio da vers&atilde;o mais nova do PHP 5.4, a&nbsp;http:\/\/php-osx.liip.ch\/, que era at&eacute; a vers&atilde;o recomendada pelos criadores do site. Mais uma boa op&ccedil;&atilde;o para escolher.  Enfim, fui procurar um maior embasamento para minha escolha final: perguntar no Facebook, no grupo PHP Brasil. L&aacute; v&aacute;rios caras que entendem do assunto deram suas opini&otilde;es e o mais legal: me deixaram com mais d&uacute;vidas ainda!!! Isso porque surgiram mais umas op&ccedil;&otilde;es l&aacute; ainda n&atilde;o conhecia: o php-build e o phpenv.  O php-build &eacute; um cara para compilar o php automaticamente a partir do reposit&oacute;rio oficial do PHP, e o phpenv &eacute; uma ferramenta para definir qual vers&atilde;o do PHP voc&ecirc; ir&aacute; utilizar no caso de voc&ecirc; ter instalado v&aacute;rias op&ccedil;&otilde;es paralelamente. No fim, foi essas duas op&ccedil;&otilde;es juntas que escolhi usar e vou mostrar aqui como fiz:   Instalar o wget, usando o homebrew (ele &eacute; usado pelo php-build, mas voc&ecirc; pode escolher outra forma de instalar o wget) Executar o brew install pkg-config curl freetype gettext jpeg libpng mcrypt zlib re2c tidy openssl pcre libxslt xmlrpc-c regex-opt exif json-c gd libiconv base64 icu4c lemon&nbsp;gmp&nbsp;t1utils&nbsp;mhash expat,&nbsp;usando o homebrew (pelo menos na vers&atilde;o do PHP 5.4.8 pelo php-build ele pediu algumas depend&ecirc;ncias, depois que instalei esses pacotes o problema parou de acontecer aqui) Instalar o php-build (usando a instala&ccedil;&atilde;o padr&atilde;o com o git,&nbsp;http:\/\/chh.github.com\/php-build\/) Instalar o phpenv (seguir o caminho que foi feito para instalar o php-build, depois na pasta bin, executar o phpenv-install.sh) Atualizar o seu PATH seguindo as orienta&ccedil;&otilde;es da sa&iacute;da do comando phpenv Instalar a vers&atilde;o que voc&ecirc; quer do PHP, seguindo a instru&ccedil;&atilde;o daqui:&nbsp;https:\/\/github.com\/CHH\/phpenv#description Rodar o phpenv rehash, o phpenv global com a vers&atilde;o escolhida e pronto!   Se voc&ecirc; executar um php -v antes de fazer todos os comandos, voc&ecirc; deve ver a sua vers&atilde;o do PHP como 5.3.15. Depois dos comandos acima, se executar um php -v deve ver a vers&atilde;o do PHP mais nova que voc&ecirc; instalou (no meu caso ficou o PHP 5.4.8).  &Eacute; isso a&iacute; pessoal, quem ficar com d&uacute;vidas pode perguntar nos coment&aacute;rios.  At&eacute; a pr&oacute;xima.    Este artigo foi publicado originalmente em&nbsp;RogerioPradoJ.com.",
            "description": "Ol&aacute;, pessoal Venho usando o Vagrant (oficial, tradu&ccedil;&atilde;o e meu github) faz um tempo, para diminuir o n&uacute;mero de coisas instaladas no meu notebook, mas precisava atualizar a vers&atilde;o do PHP que tinha instalado por padr&atilde;o no meu Mac OSX.  Participando do projeto do iMasters, oPHPortunid..."
        },
        {
            "title": "Vagrant: O que, Por que e Como",
            "url": "\/2012\/09\/24\/vagrant-o-que-por-que-e-como\/",
            "date": "2012-09-24 01:23:45 +0000",
            "body": "Tradu&ccedil;&atilde;o livre de Vagrant: What, Why, and How, dispon&iacute;vel em&nbsp;http:\/\/net.tutsplus.com\/tutorials\/php\/vagrant-what-why-and-how\/.    Este artigo te ajudar&aacute; a usar o Vagrant para administrar suas inst&acirc;ncias de m&aacute;quinas virtuais e explicar&aacute; como se beneficiar do Puppet para fazer a provis&atilde;o de v&aacute;rios recursos como o PHP e o PostgreSQL.   Garoto propaganda :-) da ferramenta Vagrant - http:\/\/vagrantup.com  Introdu&ccedil;&atilde;o  Os desenvolvedores tem &agrave; disposi&ccedil;&atilde;o um grande n&uacute;mero de maneiras de construir seu ambiente de desenvolvimento web. Podem ser usadas op&ccedil;&otilde;es &quot;locais&quot;, do tipo dos servidores &quot;tudo em um&quot;como o Zend Server, XAMPP, MAMP, WAMP etc; ou ainda como voc&ecirc; instalando os componentes a partir dos fontes ou via um sistema de gerenciamento de pacotes, como o Homebrew, o Apt ou o Yum.  Isso vai se acumulando a medida que voc&ecirc; trabalha em v&aacute;rios projetos diferentes: PHP 5.3 e PHP 5.4, MySQL, SQLite, MongoDB, Postgres, PEAR, PHPUnit, Rails 3.1, Memcached, Redis, Gearman, NodeJS etc. E se voc&ecirc; precisar &nbsp;atualizar seu computador se ele pifar, voc&ecirc; ter&aacute; que come&ccedil;ar tudo de novo.  Pode ser usada uma configura&ccedil;&atilde;o &quot;remota&quot;, com um servidor com compartilhamentos &quot;Samba&quot; ou um servidor SSH montado com uma ferramenta como o ExpanDrive. A &uacute;ltima op&ccedil;&atilde;o esbarra na lat&ecirc;ncia de leitura e escrita dos arquivos, que &eacute; extremamente chata. &Eacute; poss&iacute;vel usar o SSH com o Vim para tudo, o que &eacute; r&aacute;pido, mas s&oacute; funciona se voc&ecirc; quiser usar o Vim para tudo tamb&eacute;m.  Desenvolvimento vs Produ&ccedil;&atilde;o  Mesmo que voc&ecirc; esteja feliz com a forma que vem fazendo as coisas at&eacute; agora, quantas vezes voc&ecirc; j&aacute; ouviu (ou disse) &quot;Bem, est&aacute; funcionando no meu computador&quot;?  Isso &eacute; terrivelmente comum e acontece quando os ambientes diferem at&eacute; mesmo nos detalhes mais triviais.  &Eacute; extremamente importante garantir que seu ambiente de desenvolvimento seja id&ecirc;ntico ao ambiente de produ&ccedil;&atilde;o, e que ele tamb&eacute;m corresponda ao servidores de staging e de teste se esses existirem.  Isso pode parecer f&aacute;cil se voc&ecirc; pensar apenas na instala&ccedil;&atilde;o do Apache, do PHP de alguma c&oacute;pia do MySQL, por&eacute;m existem milh&otilde;es de fatores para avaliar. Se voc&ecirc; estiver desenvolvendo no OSX e fazendo deploy num sistema Ubuntu, ent&atilde;o voc&ecirc; deve se deparar com problemas estranhos relacionados a mai&uacute;sculas. Isso &eacute; comum no CodeIgniter, quando algu&eacute;m cria uma biblioteca com a primeira letra min&uacute;scula. Ela ir&aacute; carregar corretamente no OSX, mas ir&aacute; quebrar quando for implementada na produ&ccedil;&atilde;o. Seu processo de desenvolvimento pode ter feito voc&ecirc; perder alguns contratos s&oacute; por causa de algumas diferen&ccedil;as triviais entre sistemas operacionais que ningu&eacute;m notou at&eacute; ser muito tarde.  Desenvolvimento = Produ&ccedil;&atilde;o  Ent&atilde;o qual &eacute; a solu&ccedil;&atilde;o? For&ccedil;ar que todos os desenvolvedores joguem fora suas ferramentas e trabalhem todos no mesmo modelo de laptop? Se os seus colegas ganharem Macbooks novinhos em folha talvez voc&ecirc; n&atilde;o ou&ccedil;a muitas reclama&ccedil;&otilde;es, mas voc&ecirc; teria que usar o OSX Server para tudo.  Voc&ecirc; poderia usar o Linux para tudo, mas entraria numa briga para decidir qual distribui&ccedil;&atilde;o utilizar. For&ccedil;ar os desenvolvedores para usar o mesmo sistema operacional gera problemas, reduz a produtividade e promove lutas de nerds.  A virtualiza&ccedil;&atilde;o &eacute; a resposta e isto n&atilde;o &eacute; nada novo, mas geralmente&nbsp;quando pensamos em virtualiza&ccedil;&atilde;o pensamos nos problemas de performance e nas ventoinhas girando que nem malucas enquanto o sistema tenta rodar dois sistemas operacionais ao mesmo tempo.  Essa situa&ccedil;&atilde;o pode ser verdade quando tentamos rodar o Windows em uma m&aacute;quina n&atilde;o muito potente mas, hoje em dia, um Mac mediano com 4 GB de RAM de f&aacute;brica &eacute; mais do que suficiente para rodar uma instala&ccedil;&atilde;o de um servidor Ubuntu em modo de linha de comando com todas ferramentas habituais (IDE, browser, ferramentas de depura&ccedil;&atilde;o etc.). Existem diferentes vers&otilde;es de virtualiza&ccedil;&atilde;o, mas eu prefiro o VirtualBox da Oracle (que &eacute; gr&aacute;tis). Esse programa faz o &quot;trabalho pesado&quot; da virtualiza&ccedil;&atilde;o, enquanto a ferramenta Vagrant serve para gerenciar as inst&acirc;ncias.  Passo 1 - Instalando o VirtualBox  Primeiro, baixe e instale o VirtualBox. Nos sistemas *nix (Mac OSX, Linux etc.) voc&ecirc; precisar&aacute; alterar seu .bash_profile (ou .zsh_profile) para estender a vari&aacute;vel $PATH:  PATH=$PATH:\/Applications\/VirtualBox.app\/Contents\/MacOS\/ export PATH   Isso permitir&aacute; que o Vagrant saiba onde o VirtualBox est&aacute; instalado e, &eacute; claro, ser&aacute; diferente em cada sistema operacional.  Passo 2 -&nbsp;Instalando o Vagrant  Voc&ecirc; pode baixar um bin&aacute;rio do vagrant para o seu sistema operacional, ou instalar ele como uma gem se n&atilde;o houver um bin&aacute;rio dispon&iacute;vel:  gem install vagrant   Passo 3 -&nbsp;Criando uma Inst&acirc;ncia  Crie um lugar para suas configura&ccedil;&otilde;es ficarem:  mkdir -p ~\/Vagrant\/test cd ~\/Vagrant\/test   Iremos usar o Ubuntu 12.04 LTS (Precise Pangolin), o qual j&aacute; tem uma &quot;box&quot; configurada.  vagrant box add precise32 http:\/\/files.vagrantup.com\/precise32.box   Aqui voc&ecirc; enxerga o argumento &quot;precise32&quot;, que &eacute; o apelido da URL. Agora voc&ecirc; pode criar a inst&acirc;ncia que ir&aacute; baixar o arquivo .box.  vagrant init precise32 vagrant up   Agora ela estar&aacute; rodando. F&aacute;cil! Se voc&ecirc; quiser acessar a inst&acirc;ncia via SSH, use este comando:  vagrant ssh   Passo 4 -&nbsp;Configura&ccedil;&atilde;o  Voc&ecirc; ter&aacute; um arquivo, chamado Vagrantfile, que conter&aacute; a configura&ccedil;&atilde;o dessa inst&acirc;ncia:  # -*- mode: ruby -*- # vi: set ft=ruby : Vagrant::Config.run do |config|     config.vm.box = &quot;precise32&quot;     config.vm.box_url = &quot;http:\/\/files.vagrantup.com\/precise32.box&quot;     # Assign this VM to a host-only network IP, allowing you to access it     # via the IP. Host-only networks can talk to the host machine as well as     # any other machines on the same network, but cannot be accessed (through this     # network interface) by any external networks.     config.vm.network :hostonly, &quot;192.168.33.10&quot;     # Set the default project share to use nfs     config.vm.share_folder(&quot;v-web&quot;, &quot;\/vagrant\/www&quot;, &quot;.\/www&quot;, :nfs =&gt; true)     config.vm.share_folder(&quot;v-db&quot;, &quot;\/vagrant\/db&quot;, &quot;.\/db&quot;, :nfs =&gt; true)     # Forward a port from the guest to the host, which allows for outside     # computers to access the VM, whereas host only networking does not.     config.vm.forward_port 80, 8080     # Set the Timezone to something useful     config.vm.provision :shell, :inline =&gt; &quot;echo \\&quot;Europe\/London\\&quot; | sudo tee \/etc\/timezone &amp;&amp; dpkg-reconfigure --frontend noninteractive tzdata&quot;     # Update the server     config.vm.provision :shell, :inline =&gt; &quot;apt-get update --fix-missing&quot;     # Enable Puppet     config.vm.provision :puppet do |puppet|         puppet.facter = { &quot;fqdn&quot; =&gt; &quot;local.pyrocms&quot;, &quot;hostname&quot; =&gt; &quot;www&quot; }         puppet.manifests_path = &quot;puppet\/manifests&quot;         puppet.manifest_file  = &quot;ubuntu-apache2-pgsql-php5.pp&quot;         puppet.module_path  = &quot;puppet\/modules&quot;     end end   Essa &eacute;, se voc&ecirc; ainda n&atilde;o notou, sintaxe Ruby; por isso voc&ecirc; pode ser bem criativo com o arquivo, apesar de aqui s&oacute; termos o b&aacute;sico.  Ele mostra qual apelido usar, e tem a URL para o caso do apelido n&atilde;o estar definido localmente (&uacute;til para casos de compartilhamento).  As linhas share_folder s&atilde;o bem &uacute;teis para mapear pastas da inst&acirc;ncia com pastas locais. Usando nfs =&gt; true a inst&acirc;ncia ser&aacute; capaz de escrever e alterar permiss&otilde;es dos arquivos, o que &eacute; &uacute;til se voc&ecirc; estiver, por exemplo, tentando instalar um CMS ali.  O redirecionamento de portas permite que voc&ecirc; acesse sua inst&acirc;ncia em&nbsp;http:\/\/localhost:8080 e, &eacute; claro, fa&ccedil;a altera&ccedil;&otilde;es para diferentes portas em caso de conflito.  Esse arquivo de configura&ccedil;&atilde;o tamb&eacute;m define o fuso hor&aacute;rio para Europe\/London, depois executa o apt-get update, que for&ccedil;a seu sistema para se atualizar toda vez que ele &eacute; iniciado. Se voc&ecirc; pular esse item da configura&ccedil;&atilde;o, pode encontrar v&aacute;rios pacotes se recusando a instalar pois as refer&ecirc;ncias est&atilde;o desatualizadas.  Quando voc&ecirc; alterar a configura&ccedil;&atilde;o, pode recarregar a inst&acirc;ncia para utiliz&aacute;-la:  vagrant reload   Agora que nossos servidores est&atilde;o no ar e prontos para continuar, precisamos instalar neles alguns softwares. N&atilde;o vamos s&oacute; rodar o apt-get install em um monte de pacotes na linha de comando, vamos &quot;provisionar&quot; nossos servidores.  Passo 5 -&nbsp;Provisionamento  O provisionamento ou configura&ccedil;&atilde;o do servidor n&atilde;o &eacute; algo que a maioria dos desenvolvedores pensam a respeito pois isso &eacute; feito normalmente pelos sysadmins. A ideia &eacute; criar algum registro do que software e configura&ccedil;&otilde;es foram postas em um servidor assim voc&ecirc; poderia criar novos ambientes de desenvolvimento, novos servidores staging que replicam os servidores de produ&ccedil;&atilde;o ou ent&atilde;o criar outro servidor de produ&ccedil;&atilde;o para fazer balanceamento de carga entre eles.  Provisionamento das antigas  Como os sysadmins lidam com isso varia, mas no passado foram usados todos os tipos de solu&ccedil;&atilde;o - desde manter uma wiki dos comandos que foram executados (o que pode ficar grande e obsoleto rapidamente) e o maravilhoso m&eacute;todo de manter um &quot;multi-terminal&quot;, onde voc&ecirc; digita os comandos em uma janela e ele replica os mesmos comandos para outros 7 servidores ao mesmo tempo. Todos esses m&eacute;todos s&atilde;o terr&iacute;veis.  Uma solu&ccedil;&atilde;o seria criar o seu pr&oacute;prio arquivo .box ou criar um backups .iso assim novos servidores poderiam ser baseados neles; no entanto manter essas imagens gera um monte de trabalho extra e n&atilde;o importa o quanto voc&ecirc; tente, essas m&aacute;quinas de desenvolvimento se tornar&atilde;o obsoletas com o tempo.  Provisionamento moderno  Existem atualmente dois sistemas populares, o Puppet e o Chef. Ambos existem h&aacute; anos, mas come&ccedil;aram a se tornar bem populares com o aumento do uso m&eacute;todo de desenvolvimento DevOps. As ideias dos dois s&atilde;o parecidas e voc&ecirc; deveria estudar os dois sistemas, mas aqui no tutorial iremos nos focar exclusivamente no Puppet.  Basicamente, em vez de rodar um s&eacute;rie de comandos e torcer para que tudo d&ecirc; certo, voc&ecirc; criar&aacute; um manifesto para o Puppet explicando tudo o que voc&ecirc; precisar garantir que tenha sido feito. Quando voc&ecirc; roda um comando no terminal, voc&ecirc; est&aacute; basicamente dizendo ao computador:  &quot;Instale o Apache&quot;  Com o Puppet voc&ecirc; diria:  &quot;Garanta que o Apache est&aacute; instalado&quot;  Ou, em vez de:  &quot;Crie uma nova pasta, chame-a de \/var\/www e defina a permiss&atilde;o para www-data:www-data&quot;  Com o Puppet dir&iacute;amos:  &quot;Garanta que exista \/var\/www e que tenha permiss&otilde;es que correspondam com www-data:www-data&quot;  A diferen&ccedil;a aqui &eacute; que esses manifestos podem ser executados m&uacute;ltiplas vezes (em um cron job a cada hora ou diariamente) para deixar tudo atualizado, e n&atilde;o haver&aacute; resultados inesperados de algo tentando ser instalado duas vezes.  Ele tamb&eacute;m ir&aacute; testar se tudo est&aacute; rodando como esperado, pois se alguma dessas regras falhar ser&atilde;o emitidos erros que s&atilde;o mais f&aacute;ceis de rastrear do que rodar o grep numa grande quantidade de resultados de comandos bash. O Puppet ir&aacute; mostrar erros grandes e vermelhos que deixar&atilde;o voc&ecirc; saber se o PHP n&atilde;o foi instalado ou um m&oacute;dulo espec&iacute;fico n&atilde;o puder ser configurado.  Manifestos e M&oacute;dulos  Os manifestos s&atilde;o um pouco confusos no in&iacute;cio, mas depois de um tempo, eles come&ccedil;am a fazer sentido.  Para revisar um exemplo b&aacute;sico:  file {'testfile':   path    =&gt; '\/tmp\/testfile',   ensure  =&gt; present,   mode    =&gt; 0640,   content =&gt; &quot;I'm a test file.&quot;, }   N&atilde;o &eacute; preciso explicar o que est&aacute; acontecendo aqui, certo?  Esse arquivo pode ser referenciado mais para a frente no seu manifesto como &quot;testfile&quot;, o que indica que ele pode ser listado como uma depend&ecirc;ncia para outras a&ccedil;&otilde;es.  Para exemplos mais complexos, vamos referenciar os manifestos Puppet do PyroCMS no GitHub.  include apache $docroot = '\/vagrant\/www\/pyrocms\/' $db_location = &quot;\/vagrant\/db\/pyrocms.sqlite&quot; # Apache setup class {'apache::php': } apache::vhost { 'local.pyrocms':     priority =&gt; '20',     port =&gt; '80',     docroot =&gt; $docroot,     configure_firewall =&gt; false, } a2mod { 'rewrite': ensure =&gt; present; }   Ele inclui o m&oacute;dulo &quot;apache&quot;, define algumas vari&aacute;veis, executa o manifesto extra &quot;apache:php&quot; no m&oacute;dulo apache, cria um virtual host e garante que o &quot;mod_rewrite&quot; est&aacute; habilitado.  Todas essas classes s&atilde;o definidas no m&oacute;dulo Apache que inclu&iacute;mos.  Continuando, tamb&eacute;m queremos instalar o PHP:  include php php::module { ['xdebug', 'pgsql', 'curl', 'gd'] :     notify =&gt; [ Service['httpd'], ], } php::conf { [ 'pdo', 'pdo_pgsql']:     require =&gt; Package['php5-pgsql'],     notify  =&gt; Service['httpd'], }   Esse trecho do manifesto ir&aacute; instalar as extens&otilde;es PHP que precisamos e depois a op&ccedil;&atilde;o notify informar&aacute; ao Apache que voc&ecirc; instalou novas configura&ccedil;&otilde;es, indicando que ele deve reiniciar.  include postgresql class {'postgresql::server': } postgresql::db { 'pyrocms':     owner     =&gt; 'pyrocms',     password =&gt; 'password', }   Aqui ser&aacute; configurado um servidor postgres, criado um banco de dados chamado &quot;pyrocms&quot; e garantir que exista um usu&aacute;rio &quot;pyrocms&quot; com a senha informada.  Perto do fim! O &uacute;ltimo passo &eacute; garantir que voc&ecirc; tenha arquivos e pastas com permiss&otilde;es de escrita definidos corretamente:  file { $docroot:     ensure  =&gt; 'directory', } file { &quot;${docroot}system\/cms\/config\/config.php&quot;:     ensure  =&gt; &quot;present&quot;,     mode    =&gt; &quot;0666&quot;,     require =&gt; File[$docroot], } $writeable_dirs = [&quot;${docroot}system\/cms\/cache\/&quot;, &quot;${docroot}system\/cms\/config\/&quot;, &quot;${docroot}addons\/&quot;, &quot;${docroot}assets\/cache\/&quot;, &quot;${docroot}uploads\/&quot;] file { $writeable_dirs:     ensure =&gt; &quot;directory&quot;,     mode   =&gt; '0777',     require =&gt; File[$docroot], }   Isso ir&aacute; garantir que exista um document root do Apache, que o arquivo de configura&ccedil;&atilde;o esteja configurado como 0666 e que algumas pastas estejam como 777.  E a&iacute; temos tudo!  Se tudo funcionou corretamente, voc&ecirc; deve estar vendo v&aacute;rios linhas de texto azul sinalizando cada coisa que est&aacute; sendo instalada mas, se algo der errado, ver&aacute; linhas vermelhas. Pesquise no Google sobre esses erros e tente novamente.  Os m&oacute;dulos usados aqui s&atilde;o: Apache, Postgres e PHP, e voc&ecirc; pode ver tudo em a&ccedil;&atilde;o clonando o reposit&oacute;rio Vagrant do PyroCMS:  git clone --recursive git:\/\/github.com\/pyrocms\/devops-vagrant.git ~\/vagrant\/pyrocms cd ~\/vagrant\/pyrocms vagrant up   Aponte seu navegador para&nbsp;http:\/\/localhost:8089\/ e voc&ecirc; deve enxergar o instalador. Bem f&aacute;cil, n&atilde;o?  Nota:&nbsp;Ser&aacute; instalado o MySQL pois o suporte ao Postgres e ao SQLite no PyroCMS ainda est&aacute; em desenvolvimento, esperando algumas funcionalidades PDO ficarem prontas no CodeIgniter. Se voc&ecirc; estiver interessado, pode experimentar alterar o Vagrantfile para usar o manifesto ubuntu-apache2-pgsql-php5.pp, destruir a inst&acirc;ncia e em seguida inici&aacute;-la novamente. O subm&oacute;dulo pyrocms tamb&eacute;m precisar&aacute; de um checkout do git em feature\/pdo.  Sum&aacute;rio  Nesse artigo, usamos o Vagrant, o VirtualBox e o Puppet para, n&atilde;o apenas configurar uma inst&acirc;ncia de um servidor para trabalharmos, mas criarmos um suite de testes para nosso servidor garantir que tudo esteja corretamente executando, instalado e configurado.  Tamb&eacute;m criamos um checklist para os requisitos e, no futuro, poderemos criar qualquer n&uacute;mero de servidores iguais a esse em minutos, e n&atilde;o em horas!    Este artigo foi publicado originalmente em&nbsp;RogerioPradoJ.com.",
            "description": "Tradu&ccedil;&atilde;o livre de Vagrant: What, Why, and How, dispon&iacute;vel em&nbsp;http:\/\/net.tutsplus.com\/tutorials\/php\/vagrant-what-why-and-how\/.    Este artigo te ajudar&aacute; a usar o Vagrant para administrar suas inst&acirc;ncias de m&aacute;quinas virtuais e explicar&aacute; como se beneficiar do Puppet para fazer a pro..."
        },
        {
            "title": "Sou PHPSP e Contribuo com projetos Open Source",
            "url": "\/2011\/11\/30\/sou-phpsp-e-contribuo-com-projetos-open-source\/",
            "date": "2011-11-30 12:02:20 +0000",
            "body": "Ol&aacute;, pessoal.  A coordena&ccedil;&atilde;o do grupo de usu&aacute;rios PHPSP&nbsp;est&aacute; com uma a&ccedil;&atilde;o super bacana, que incentiva todo mundo a contribuir para projetos de c&oacute;digo aberto relacionados com a linguagem PHP.    O endere&ccedil;o para acessar o projeto &eacute; http:\/\/sou.phpsp.org.br\/. Eles tem um regulamento a seguir, mas voc&ecirc; pode contribuir (e concorrer a pr&ecirc;mios) de muitas formas: tradu&ccedil;&atilde;o, testes, bugs, patch, novos projetos..., d&ecirc; uma olhada l&aacute;.  N&atilde;o tem mais desculpa para n&atilde;o ajudar a comunidade e devolver um pouco do conhecimento que voc&ecirc; recebe dela.  Estou participando  Aproveito para falar de dois projetos onde estou contribuindo, referentes a tradu&ccedil;&otilde;es de documenta&ccedil;&otilde;es:   Tradu&ccedil;&atilde;o do livro Jobeet&nbsp;do symfony1 para pt_BR, GitHub: esse comecei por mim mesmo, pois acho uma documenta&ccedil;&atilde;o muito interessante sobre como desenvolver uma aplica&ccedil;&atilde;o web com o uso de um framework. Ele d&aacute; todos aqueles toques iniciais relacionados a boas pr&aacute;ticas, requisitos, MVC etc. Nesse ponto estou sendo ajudado na revis&atilde;o pelo Kleber Sato.  Tradu&ccedil;&atilde;o da documenta&ccedil;&atilde;o oficial do symfony2 para pt_BR, GitHub: esse comecei por causa do desafio especial do PHPSP. A pessoa que est&aacute; tocando o projeto &eacute; a&nbsp;Andreia Bohner, Twitter e GitHub.     Arregace as mangas, e m&atilde;os &agrave; obra  V&aacute; l&aacute;, d&ecirc; uma olhada nas op&ccedil;&otilde;es de projetos j&aacute; listados que ajudam bastante se voc&ecirc; n&atilde;o tem ideia de por onde come&ccedil;ar.  E boa sorte com as premia&ccedil;&otilde;es!    Este artigo foi publicado originalmente em&nbsp;RogerioPradoJ.com.",
            "description": "Ol&aacute;, pessoal.  A coordena&ccedil;&atilde;o do grupo de usu&aacute;rios PHPSP&nbsp;est&aacute; com uma a&ccedil;&atilde;o super bacana, que incentiva todo mundo a contribuir para projetos de c&oacute;digo aberto relacionados com a linguagem PHP.    O endere&ccedil;o para acessar o projeto &eacute; http:\/\/sou.phpsp.org.br\/. Eles tem um regulamento..."
        },
        {
            "title": "Criando um ambiente de teste PHP no Ubuntu",
            "url": "\/2010\/06\/30\/criando-um-ambiente-de-teste-php-no-ubuntu\/",
            "date": "2010-06-30 14:35:00 +0000",
            "body": "Esse post &eacute; originalmente de meu outro blog, originalmente colocado no ar em junho de 2010, ap&oacute;s participar do PHPTESTFEST organizado pelo pessoal do PHPSP.  In&iacute;cio das migra&ccedil;&otilde;es para c&aacute; ;-)  Tradu&ccedil;&atilde;o livre do site http:\/\/wiki.php.net\/qa\/testfest-2010\/ubuntu-test-environment, acesso em 05 de junho de 2010.  As seguintes instru&ccedil;&otilde;es foram escritas para o Ubuntu 9.10 testadas nele. &Eacute; poss&iacute;vel que estas instru&ccedil;&otilde;es tamb&eacute;m funcionem em outras vers&otilde;es do Ubuntu. Por favor atualize todos os pacotes j&aacute; instalados antes de come&ccedil;ar a criar seu ambiente de teste.  Criar o ambiente de teste PHP no Ubuntu &eacute; um processo de dois passos:   Baixar os &quot;Automated Build Scripts&quot; (script automatizados de cria&ccedil;&atilde;o) Rodar o Build Script   Recomendamos que voc&ecirc; rode seus testes sobre tr&ecirc;s vers&otilde;es do principais do PHP: 5.2, 5.3 e na Trunk (tronco do SVN).  O restante das instru&ccedil;&otilde;es assume que voc&ecirc; estar&aacute; criando seu ambiente de testes no seu diret&oacute;rio pessoal &quot;~\/&quot;. Se voc&ecirc; voc&ecirc; escolher outro lugar, por favor mude os caminhos correspondentes em todos os comandos encontrados em todo o resto das instru&ccedil;&otilde;es.  Baixe os Scripts Automatizados  Abra uma janela do Terminal e rode o seguintes comandos, em ordem:  cd ~\/  wget http:\/\/www.ericstewart.org\/public\/phpt\/PHP-Test-Build-Scripts.tgz  tar -xzf PHP-Test-Build-Scripts.tgz  Voc&ecirc; vai ter baixado e descomprimido os scripts no seu diret&oacute;rio pessoal.  Rode o Script Automatizado  Copie o script para o seu diret&oacute;rio pessoal usando o seguinte comando:  cp PHP-Test-Build-Scripts\/Ubuntu-9.10.sh .\/  Torne-o execut&aacute;vel com este comando:  chmod +x .\/Ubuntu-9.10.sh  Agora, simplesmente rode o shell script usando este comando:  .\/Ubuntu-9.10.sh  Voc&ecirc; acabou de criar o ambiente de teste PHP na sua &aacute;rea de trabalho. O ambiente incluir&aacute; uma pasta para cada uma das vers&otilde;es principais do PHP: php52, php53 e php-trunk.  Screencast  No link a seguir voc&ecirc; pode assistir uma demonstra&ccedil;&atilde;o do processo inteiro (em ingl&ecirc;s). Screencast demonstration.",
            "description": "Esse post &eacute; originalmente de meu outro blog, originalmente colocado no ar em junho de 2010, ap&oacute;s participar do PHPTESTFEST organizado pelo pessoal do PHPSP.  In&iacute;cio das migra&ccedil;&otilde;es para c&aacute; ;-)  Tradu&ccedil;&atilde;o livre do site http:\/\/wiki.php.net\/qa\/testfest-2010\/ubuntu-test-environment, ace..."
        }
    ]
}